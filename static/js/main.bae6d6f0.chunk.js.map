{"version":3,"sources":["core/Loader/loader-timer.svg","core/Loader/loader-button.svg","core/Loader/loader-azure.svg","core/Loader/loader-earth.svg","core/firebase/firebase.js","core/firebase/firebase.config.js","core/Loader/Loader.js","core/Notif/Notif.js","core/InputFile/InputFile.js","core/SignIn/SignIn.js","core/FormUser/FormUser.jsx","pages/Logged/Logged.jsx","core/Title/Title.js","core/Icons/Icons.js","core/icons.js","core/User/User.js","core/Confirm/Confirm.js","core/ControlItem/ControlItem.js","core/ListAlbulms/ItemAlbum.js","core/ListAlbulms/ListAlbums.js","pages/Dash/Dash.jsx","core/FormAdd/FormAdd.js","core/ImgFilter/ImgFilter.js","core/ItemImg/ItemImg.js","core/ChangeAlign/ChangeAlign.js","core/Slider/Slide/Slide.js","core/Slider/Slider.jsx","core/ListImg/ListImg.js","core/Previews/PreviewItem.js","core/Previews/Previews.js","core/ShowAlbum/ShowAlbum.js","pages/AlbumRoute/AlbumRoute.jsx","core/FormFilter/FormFilter.jsx","pages/PictureRoute/PictureRoute.jsx","pages/AccountList/AccountItem.js","pages/AccountList/AccountList.jsx","pages/AddAccount/AddAccount.jsx","core/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collections","users","collection","albums","pictures","getUser","userID","Promise","resolve","reject","doc","get","then","user","catch","err","isLogged","success","pictureSetFilters","pictureID","filters","picture","refPicture","delDouble","filter","f","find","fDelta","key","set","name","createAt","album_id","blob","pictureSetFilter","currentFilter","found","newFilter","map","current","JSON","parse","SyntaxError","val","push","stringify","track","getImgsOf","albumID","QuerySnapshot","docs","addAlbum","status","getAlbumsOf","details","add","user_id","Date","now","size","data","album","albumUp","refAlbum","partial","parseInt","albumDown","getPictureOf","addPicture","pic","id","rnameImg","rname","pictureAlbumID","rnameAlbum","trim","removePicture","refImg","Function","delete","removeAlbum","pics","assoceType","type","LoaderTime","LoaderBtn","LoaderEarth","LoaderAzure","Loader","className","width","full","bg","style","backgroundColor","alt","src","assoceIconType","assoc","Notif","onClose","text","tooltip","place","effect","useState","React","createRef","refNotif","hide","setHide","getContent","fontSize","display","alignItems","justifyContent","ref","onClick","notif","remove","Node","parentNode","removeChild","InputFile","label","onChange","autoRead","htmlFor","e","file","target","files","reader","FileReader","evt","addEventListener","result","readAsDataURL","SignIn","data-for","data-tip","href","FormUser","this","props","onSubmit","onChangeAvatar","onChangePseudo","valuePseudo","fileName","avatar","loaderSubmit","errors","placeholder","autoComplete","value","length","slice","click","error","Component","Logged","state","loader","u","redirect","pseudo","defaultAvatar","loaderButton","localStorage","getItem","docCookies","avatarChange","bind","document","title","preventDefault","setState","db","setItem","to","test","mssg","Title","subtitle","Icons","classHandle","textAlt","focus","setFocus","setRedirect","transition","onFocus","onBlur","onPointerDown","icons","User","ChangeAlign","setter","iconsUser","iconsChangeAlign","load","icon","confirmRef","btnsRef","confirm","cacel","dataBack","Confirm","onConfirm","onCancel","onFinally","textConfirm","textCancel","textGlobal","autoFocus","autoFocusCancel","autoFocusConfirm","useEffect","cancel","conf","fin","ControlItem","manualOpen","open","onRemove","onRname","loadRname","errorsRname","onOpen","itemType","closer","tipRemove","setConfirm","inputRname","setInputRname","setRname","firstControl","rnameRef","setTimeout","onMouseEnter","onMouseLeave","disabled","btnLinkRef","ItemAlbum","item","control","setControl","setLoadRname","visible","setVisible","setName","manualControl","setManualControl","setErrors","refItem","setSize","getSizeOf","l","onKeyDown","onContextMenu","onPointerUp","nativeEvent","which","ListAlbums","onChangeAlbums","Dash","getAlbums","defaultPicture","FormAdd","imgsLength","setPicture","refName","buildFilter","Array","styles","forEach","replace","ImgFilter","figcaption","classFig","ItemImg","even","btnNav","classList","resp","console","warn","Slide","img","active","slide","Slider","percent","over","imgs","startTimeout","timeout","SLIDER_TIMEOUT","currentTimeout","next","percentUpdate","inTransition","newPercent","Math","floor","nextId","clearInterval","percentID","setInterval","endTransit","theme","symbol","color","prev","getPropsItem","ListImg","items","align","setAlign","PreviewItem","round","random","Previews","currentName","getPics","ShowAlbum","loaderAlbum","useParams","loaderAddPicture","setLoaderAddPicture","successFor","setSuccessFor","previews","setPreviews","setPictures","all","from","preview","keys","responses","finalSucessFor","finalPreviews","finalErrors","response","p","toString","AlbumRoute","loadUser","action","location","hash","split","pop","notGetUser","formHide","created","ready","FormFilter","blurValue","contrastValue","grayscaleValue","hueRotate","min","max","defaultValue","unity","PictureRoute","loaderImg","loaderUser","loaderForm","hueRotateValue","timeUpdate","updatePicture","timeUpdateUp","updateID","timeUpdateID","currentFilters","toLocaleDateString","delta","AccountItem","setLoader","setUser","showDetails","setShowDetails","setAlbums","setLoaderAlbum","AccountList","AddAccount","routes","exact","render","path","App","route","Boolean","window","hostname","match","ReactDOM","getElementById"],"mappings":"gGAAAA,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,2C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,yCCA3CD,EAAOC,QAAU,IAA0B,0C,goBCI3CC,gBCJe,CACXC,OAAQ,0CACRC,WAAY,8BACZC,YAAa,qCACbC,UAAW,cACXC,cAAe,0BACfC,kBAAmB,eACnBC,MAAO,8CDFX,IAwceC,EAvcC,CACZC,MAAOT,cAAqBU,WAAW,SACtCC,OAAQX,cAAqBU,WAAW,UACxCE,SAAUZ,cAAqBU,WAAW,YAC1CG,QAJW,SAIFC,GAAU,IAAD,OAEf,OAAO,IAAIC,SAAS,SAAEC,EAAUC,GAAZ,OAChB,EAAKR,MAAMS,IAAKJ,GAASK,MACxBC,MAAM,SAAAC,GAAI,OACPL,EAASK,EAAKF,IAAI,UAAYE,EAAM,SAEvCC,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAG9BC,SAdW,SAcDV,GAAU,IAAD,OAElB,OAAO,IAAIC,SAAS,SAACC,EAAQC,GAE3B,IAAKH,EAAS,OAAOG,IAEnB,EAAKJ,QAASC,GACXM,MAAM,SAAAC,GAEL,OAESL,EAFLK,EAEc,CAACI,SAAS,EAAMJ,KAAMA,GAGtB,CAACI,SAAS,OAG7BH,OAAO,SAAAC,GAAG,OAAIN,EAAOM,UAK7BG,kBApCW,SAoCQC,EAAYC,GAAW,IAAD,OAExC,OAAO,IAAIb,SAAS,SAACC,EAAUC,GAE7B,EAAKL,SAASM,IAAKS,GAClBR,MACAC,MAAM,SAAAS,GACL,IAAMC,EAAa,EAAKlB,SAASM,IAAKS,GAEhCI,EAAYF,EAAQV,IAAI,WAAWa,QAAQ,SAAAC,GAE7C,OAAQL,EAAQM,MAAM,SAAAC,GAAM,OAAIA,EAAOC,MAAQH,EAAEG,UAIrDN,EAAWX,MACVC,MAAM,kBACLU,EAAWO,IAAI,CACbC,KAAMT,EAAQV,IAAI,QACjBoB,SAAUV,EAAQV,IAAI,YACtBqB,SAAUX,EAAQV,IAAI,YACtBS,QAAQ,GAAD,mBAAOG,GAAP,YAAsBH,IAC7Ba,KAAMZ,EAAQV,IAAI,UAClBC,MAAM,kBAAMJ,EAAQ,CAACS,SAAQ,OAC/BH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SACrBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAG3BD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAI1BmB,iBApEW,SAoEOf,EAAYK,GAAU,IAAD,OAEtC,OAAO,IAAIjB,SAAS,SAACC,EAAUC,GAE7B,EAAKL,SAASM,IAAKS,GAClBR,MACAC,MAAM,SAAAS,GAEL,IAAIc,EAAgBd,EAAQV,IAAI,WAE5ByB,GAAQ,EACNC,EAAYF,EAAcG,KAAK,SAAAC,GAEjC,IACyB,kBAAZA,IACTA,EAAUC,KAAKC,MAAMF,IAEvB,MAAOG,GAEPH,EAAU,GAOZ,OALGA,EAAQX,MAAQJ,EAAOI,MACxBW,EAAQI,IAAMnB,EAAOmB,IACrBP,GAAQ,GAGHG,KAINH,GAEHC,EAAUO,KAAMJ,KAAKK,UAAW,CAC9BjB,IAAKJ,EAAOI,IACXe,IAAKnB,EAAOmB,OAIjB,IAAMrB,EAAa,EAAKlB,SAASM,IAAKS,GAGtCG,EAAWX,MACVC,MAAM,kBACLU,EAAWO,IAAI,CACbC,KAAMT,EAAQV,IAAI,QACjBoB,SAAUV,EAAQV,IAAI,YACtBqB,SAAUX,EAAQV,IAAI,YACtBS,QAASiB,EAAUb,QAAQ,SAAAsB,GAC1B,IACuB,kBAAVA,IACTA,EAAQN,KAAKC,MAAMK,IACtB,MAAOJ,GACN,OAAO,EAET,OAAOI,EAAMlB,KAAOkB,EAAMH,OAE3BV,KAAMZ,EAAQV,IAAI,UAClBC,MAAM,kBAAMJ,EAAQ,CAACS,SAAQ,OAC/BH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SACrBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAG3BD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAI1BgC,UAtIW,SAsIAC,GAAW,IAAD,OAEpB,OAAO,IAAIzC,SAAS,SAACC,EAAQC,GAAT,OAClB,EAAKN,OAAOO,IAAKsC,GAChBrC,MACAC,MAAM,kBACL,EAAKR,SAASO,MACbC,MAAM,SAAAqC,GAAa,OAClBzC,EAAQyC,EAAcC,KAAK1B,QAAQ,SAAAd,GAAG,OACpCA,EAAIC,IAAI,cAAgBqC,SAExBlC,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SACxBD,OAAO,SAAAC,GAAG,OAAIN,EAAOM,UAG5BoC,SArJW,SAqJDrB,EAAOxB,GAAW,IAAD,OAE1B,OAAO,IAAIC,SAAS,SAACC,EAAQC,GAGvBqB,GAAQxB,GAEVG,EAAO,CACL2C,OAAQ,MAGZ,EAAKC,YAAa/C,GAASM,MAAM,SAAAsC,GAE/B,GAAIA,EAAKxB,MAAM,SAAAhB,GAAG,OAAIA,EAAIC,IAAI,UAAYmB,KACxC,OAAOtB,EAAS,CACdS,SAAS,EACRmC,OAAQ,IACTE,QAAS,mBAGX,EAAKnD,OAAOoD,IAAK,CACfC,QAASlD,EACRwB,KAAMA,EACNC,SAAU0B,KAAKC,MACfC,KAAM,IACL/C,MAAM,SAAAgD,GAAI,OAAIpD,EAAQ,CACxBS,SAAQ,EACR4C,MAAOD,OAER9C,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAEvBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAI7B+C,QAxLW,SAwLFd,GAAW,IAAD,OAElB,OAAO,IAAIzC,SAAS,SAAEC,EAASC,GAE7B,IAAMsD,EAAW,EAAK5D,OAAOO,IAAKsC,GAElCe,EAASpD,MAAMC,MAAM,SAAAiD,GAEnB,IAAKA,EAAMlD,IAAI,YAAc,OAAOF,EAAQ,CAAEuD,QAASH,IAEvDE,EAASlC,IAAK,CACZE,SAAU8B,EAAMlD,IAAI,YACnBmB,KAAM+B,EAAMlD,IAAI,QAChBgD,KAAMM,SAASJ,EAAMlD,IAAI,SAAS,EAClC6C,QAASK,EAAMlD,IAAI,aAClBC,MAAM,kBAAMJ,EAAQ,CAACS,SAAQ,OAChCH,OAAO,SAAAC,GAAG,OAAIN,EAAOM,SAEvBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAG1BmD,UA7MW,SA6MAlB,GAAW,IAAD,OAEpB,OAAO,IAAIzC,SAAS,SAAEC,EAASC,GAE7B,IAAMsD,EAAW,EAAK5D,OAAOO,IAAKsC,GAElCe,EAASpD,MAAMC,MAAM,SAAAiD,GAEnBE,EAASlC,IAAK,CACZE,SAAU8B,EAAMlD,IAAI,YACnBmB,KAAM+B,EAAMlD,IAAI,QAChBgD,KAAMM,SAASJ,EAAMlD,IAAI,SAAS,EAClC6C,QAASK,EAAMlD,IAAI,aAClBC,MAAM,kBAAMJ,EAAQ,CAACS,SAAQ,OAChCH,OAAO,SAAAC,GAAG,OAAIN,EAAOM,SAEvBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAG1BoD,aAhOW,SAgOGnB,GAAW,IAAD,OAEvB,OAAO,IAAIzC,SAAS,SAAEC,EAASC,GAE7B,IAAKuC,EACH,OAAOvC,IAEP,EAAKL,SAASO,MACbC,MAAO,SAAAqC,GAAa,OACnBzC,EACEyC,EAAcC,KACX1B,QAAQ,SAAAd,GAAG,OACVA,EAAIC,IAAI,cAAgBqC,aAMrCoB,WAlPW,SAmPVpB,EACAlB,EACAT,GACC,IAAD,OAEA,OAAO,IAAId,SAAS,SAACC,EAAQC,GAE3B,KAAMuC,GAAWlB,GAAQT,GACvB,OAAOZ,IAET,EAAKN,OAAOO,IAAKsC,GAChBrC,MACAC,MAAM,WAEL,EAAKuD,aAAcnB,GAAUpC,MAC3B,SAAAR,GAEKA,EAASsB,MACV,SAAA2C,GAAG,OAAIA,EAAI1D,IAAI,UAAYmB,KAE3BtB,EAAS,CACPS,SAAS,EACTmC,OAAQ,MAIV,EAAKhD,SAASmD,IAAK,CACjBvB,SAAUgB,EACTf,KAAMZ,EACNU,SAAU0B,KAAKC,MACf5B,KAAMA,EACNV,QAAS,KACRR,MAAM,WACR,EAAKkD,QAASd,GAAUpC,MAAM,WAC5BJ,EAAS,CAACS,SAAS,EAAKqD,GAAItB,EAAUlB,KAAMA,EAAOG,KAAMZ,OACvDP,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAE3BD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,YAM9BD,OAAO,SAAAC,GAAG,OAAIN,EAAQ,CACrB2C,OAAQ,aAMbmB,SArSW,SAqSDpD,EAAYqD,EAAQC,GAAiB,IAAD,OAE7C,OAAO,IAAIlE,SAAS,SAACC,EAAUC,GAIzBU,GAAaqD,GAEjB/D,IAEA,IAAMa,EAAa,EAAKlB,SAASM,IAAKS,GAEpC,EAAKf,SAASO,MACbC,MAAM,SAAAqC,GAGFA,EAAcC,KAAKxB,MAAM,SAAAhB,GAAG,OAC3BA,EAAIC,IAAI,UAAY6D,GACpB9D,EAAIC,IAAI,cAAgB8D,KAmB1BjE,EAAS,CACPS,SAAS,EACRmC,OAAQ,IACRE,QAAS,wBAnBZhC,EAAWX,MACRC,MAAM,SAAAyD,GACL/C,EAAWO,IAAI,CACbI,KAAMoC,EAAI1D,IAAI,QACbqB,SAAUqC,EAAI1D,IAAI,YAClBS,QAASiD,EAAI1D,IAAI,YAAc,GAC/BmB,KAAM0C,EACNzC,SAAUsC,EAAI1D,IAAI,aAAe8C,KAAKC,QACtC9C,MAAM,kBAAMJ,EAAS,CAACS,SAAQ,OAChCH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SACrBD,OAAO,SAAAC,GAAG,OAAIP,EAAS,CACzBS,SAAQ,EACPmC,OAAQ,IACRrC,IAAKA,UAWbD,OAAO,kBAAML,WAInBiE,WAtVW,SAsVC1B,EAAUwB,GAAU,IAAD,OAE9B,OAAO,IAAIjE,SAAS,SAAEC,EAAUC,GAG1BuC,GAAWwB,GAEf/D,IAEA,IAAMsD,EAAW,EAAK5D,OAAOO,IAAKsC,GAElCe,EAASpD,MAAMC,MAAM,SAAAiD,GAEfA,EAAMlD,IAAI,UAAY6D,GACxBhE,EAAQ,CACNS,SAAS,IAIb8C,EAASlC,IAAI,CACXC,KAAM0C,EACLzC,SAAU8B,EAAMlD,IAAI,YACpBgD,KAAME,EAAMlD,IAAI,QAChB6C,QAASK,EAAMlD,IAAI,aACnBC,MAAM,kBACPJ,EAAS,CAAES,SAAS,UAIpBH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAI7BsC,YAvXW,SAuXE/C,GAAU,IAAD,OAErB,OAAO,IAAIC,SAAS,SAAEC,EAAUC,GAAZ,OAChB,EAAKN,OAAOQ,MACTC,MAAM,SAAAqC,GAAa,OAClBzC,EAASyC,EAAcC,KAAK1B,QAAQ,SAAAd,GAAG,OACrCA,EAAIC,IAAI,WAAWgE,SAAWrE,EAAOqE,cAGxC7D,OAAO,SAAAC,GAAG,OAAIN,EAAQM,UAI9B6D,cAAe,SAAUzD,GAAa,IAAD,OAEpC,OAAO,IAAIZ,SAAS,SAACC,EAAQC,GAE3B,IAAKU,EAAY,OAAOV,IAExB,IAAMoE,EAAS,EAAKzE,SAASM,IAAKS,GAElC,IAAK0D,KAAaA,EAAOlE,eAAemE,UAAa,OAAOtE,EAAQ,CAClE4C,OAAQ,IACRnC,SAAS,IAGX4D,EAAOlE,MAAMC,MAAM,SAAAyD,GAEjBQ,EAAOE,SAASnE,MAAK,WAEnB,EAAKsD,UAAWG,EAAI1D,IAAI,aAAcC,MAAM,WAC1CJ,EAAQ,CACNS,SAAS,OAETH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAE3BD,OAAO,kBAAML,cAKnBuE,YAAa,SAAShC,GAAU,IAAD,OAE9B,OAAO,IAAIzC,SAAS,SAACC,EAAQC,GAEtBuC,GAAUvC,EAAO,CACpB2C,OAAQ,IACPkB,GAAItB,IAGP,IAAMe,EAAW,EAAK5D,OAAOO,IAAKsC,GAE7Be,GAAcA,EAASpD,eAAemE,UACzCrE,EAAQ,CACNsD,SAAUA,EACTO,GAAItB,EACJI,OAAQ,MAGbW,EAASpD,MAAMC,MAAM,WACjBmD,EAASgB,SACNnE,MAAM,WAEL,EAAKuD,aAAcnB,GAAUpC,MAAM,SAAAqE,GAEjCA,EAAK3C,KAAK,SAAA+B,GAAG,OACT,EAAKO,cAAeP,EAAIC,OAG5B9D,EAAQ,CAACS,SAAS,OACfH,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SAG5BD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,SACvBD,OAAO,SAAAC,GAAG,OAAIN,EAAQM,W,wHEhcpC,SAASmE,EAAYC,GAWjB,MATc,CACV,MAASC,IACR,IAAOC,IACP,OAAUA,IACV,MAASC,IACT,MAASC,IACT,GAAMA,KAGGJ,IAAUC,IA4BbI,MAzBf,YAMG,IALCC,EAKF,EALEA,UACCC,EAIH,EAJGA,MACAC,EAGH,EAHGA,KACAR,EAEH,EAFGA,KACAS,EACH,EADGA,GAGD,OACI,4BACIH,UAAS,iBAAYA,EAAZ,YAAyBE,EAAO,OAAQ,IACjDE,MAAO,CACHC,gBAAiBF,GAAM,gBAG3B,yBACIG,IAAG,iBAAYZ,GACfa,IAAKd,EAAYC,GACjBO,MAAOA,M,yDCnCvB,SAASO,EAAgBd,GAErB,IAAMe,EAAQ,CACV,KAAQ,8BACP,QAAW,8BACX,MAAQ,cACR,MAAS,qBACT,KAAQ,qBACR,QAAW,sBACX,IAAO,aACN,KAAQ,cACR,KAAQ,0BAGd,OAAOA,EAAOf,IAAUe,EAAK,KA8FlBC,MA3Ff,YAQK,IAPDhB,EAOA,EAPAA,KACCM,EAMD,EANCA,UACAW,EAKD,EALCA,QACAC,EAID,EAJCA,KACAC,EAGD,EAHCA,QACAC,EAED,EAFCA,MACAC,EACD,EADCA,OACD,EAEmBC,mBAAUC,IAAMC,aAA5BC,EAFP,sBAGuBH,oBAAU,GAHjC,mBAGOI,EAHP,KAGYC,EAHZ,KAKA,OACI,oCAGYR,EAEI,kBAAC,IAAD,CACIhC,GAAIgC,EACJnB,KACa,UAATA,EACA,OAAkB,QAATA,EACT,QAAmB,SAATA,EACV,UAAYA,EAEhB4B,WAAY,kBACR,0BAAMlB,MAAO,CACTmB,SAAU,OACTC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEjB,uBAAG1B,UAAWQ,EAAed,KANjC,OAOWkB,IAGfG,OAAQA,GAAU,QAClBD,MAAOA,GAAS,QAGpB,6BACIa,IAAKR,EACLnB,UAAS,gBAAWA,EAAX,YAAwBN,EAAxB,YAAgC0B,EAAO,OAAO,KAEvD,2BACI,uBAAGpB,UAAWQ,EAAed,KAE7B,8BACKkB,IAKLD,aAAmBtB,UACf,+BACI,4BACIuC,QAAS,kBAAMjB,EAAS,CACpBgB,IAAKR,EACJU,MAAOV,EAASrE,QAChBgF,OAHmB,WAKhB,OACIX,EAASrE,mBAAmBiF,MAC5BZ,EAASrE,QAAQkF,sBAAsBD,OAGvCZ,EAASrE,QAAQkF,WAAWC,YAAad,EAASrE,UAC3C,IAIdsE,KAfmB,WAgBhBC,GAAS,QAIjB,uBAAGrB,UAAU,sBC7C1CkC,MApDf,YAQG,IAPClC,EAOF,EAPEA,UACCmC,EAMH,EANGA,MACA9F,EAKH,EALGA,KACAwC,EAIH,EAJGA,GACAuD,EAGH,EAHGA,SACAC,EAEH,EAFGA,SACAR,EACH,EADGA,MAED,OACI,oCACKM,GACG,2BAAOG,QAASzD,GAAMxC,GACjB8F,GAGT,2BACInC,UAAWA,EACXN,KAAK,OACLrD,KAAMA,EACNwC,GAAIA,GAAMxC,EACV+F,SAAU,SAAAG,GAEN,GAAMH,aAAoB/C,SAA1B,CAEA,IAAMmD,EAAOD,EAAEE,OAAOC,MAAM,GAE5B,GAAIL,EAAW,CAEX,IAAI7F,EAAO,KAELmG,EAAS,IAAIC,WACbC,EAAMN,EAEZI,EAAOG,iBAAiB,QAAS,SAAAP,GAE7B/F,EAAO+F,EAAEE,OAAOM,OAChBX,EAAUI,EAAOhG,EAAOqG,MAG5BF,EAAOK,cAAeR,QAGtBJ,EAAUI,EAAOD,OAI5BV,I,MCtBEoB,MAvBf,WACI,OACI,oCACI,kBAAC,EAAD,CACIvD,KAAK,OACLkB,KAAK,kBACLE,MAAM,MACND,QAAQ,aAGZ,uBAAGb,UAAU,WACT,yDADJ,qBAEqB,4DAFrB,WAIU,uBAAGkD,WAAS,WAAWC,WAAS,cAAcC,KAAK,oCACjD,uBAAGpD,UAAU,kBADf,2BCbDqD,G,uLAEP,IAAD,EAWDC,KAAKC,MARLC,EAHC,EAGDA,SACCC,EAJA,EAIAA,eACAC,EALA,EAKAA,eACAC,EANA,EAMAA,YACAC,EAPA,EAOAA,SACAC,EARA,EAQAA,OACAC,EATA,EASAA,aACAC,EAVA,EAUAA,OAGL,OACI,0BACI/D,UAAU,WACVwD,SAAUA,GAEV,iCACI,yBAAKxD,UAAU,qBACX,2BACIgE,YAAY,SACZtE,KAAK,OACLrD,KAAK,SACL4H,aAAa,MACb7B,SAAUsB,EACVQ,MAAOP,IAEX,2BACIrB,QAAQ,SACRtC,UAAS,iBAAY2D,EAAYzE,OAAOiF,OAAS,SAAS,KAF9D,WAQJ,6BACI,kBAAC,EAAD,CACInE,UAAU,OACVmC,MACI,oCACI,0BAAMnC,UAAU,qBAER4D,EACIA,EAASO,OAAS,EAClBP,EAASQ,MAAO,EAAI,GAAM,OAC1BR,EACA,UAGZ,gCACI,4BACIlE,KAAK,SACLkC,QAAS,SAAAW,GACLA,EAAEE,OAAOT,WAAWqC,UAGxB,yBACI9D,IAAKsD,EACLvD,IAAI,SACJL,MAAO,MAGf,iDAMZ5D,KAAK,SACLgG,UAAQ,EACRD,SAAUqB,KAIlB,4BAAQ/D,KAAK,UACRoE,GAAgB,YAIzB,kBAAC,EAAD,MAECC,EAAOlH,KAAK,SAAAyH,GAAK,OACVA,U,GArFcrD,IAAMsD,YCGvBC,G,kBAejB,WAAajB,GAAS,IAAD,uBAEjB,4CAAOA,KAfXkB,MAAQ,CACJC,OAAQ,kBAAC,EAAD,CAAQxE,MAAI,EAACR,KAAK,KAAKO,MAAO,IAAKE,GAAG,oBAC7CwE,GAAG,EACHC,UAAU,EACVC,OAAQ,GACRhB,OAAQW,EAAOM,cACff,OAAQ,GACRgB,cAAc,EACdnB,SAAU,IASX,EAAK/I,OAASmK,aAAaC,QAAQ,WAAaC,IAAWD,QAAQ,UAEnE,IAEI,EAAKpK,OAASkC,KAAKC,MAAO,EAAKnC,QACjC,MAAOoC,GACL,EAAKpC,OAAS,GAVD,OAajB,EAAKsK,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK5B,SAAW,EAAKA,SAAS4B,KAAd,gBAEhBC,SAASC,MAAQ,iBAhBA,E,sEAuBX/C,GAAK,IAAD,OAEVA,EAAEgD,iBAFQ,IAIHV,EAAUvB,KAAKmB,MAAfI,OAEP,GACMA,EAAOV,QAAU,GACnBU,EAAOV,QAAS,GAUd,CAAC,IAEIN,EAAUP,KAAKmB,MAAfZ,OAEPP,KAAKkC,SAAU,CACXT,aAAc,kBAAC,EAAD,CAAQ9E,MAAO,GAAIP,KAAK,UACtC,WAEA,EAAK6D,MAAMkC,GAAGjL,MAAMsD,IAAK,CACrB+G,OAAQA,EACPhB,OAAQA,IACT1I,MAAM,SAAAgD,GAED,EAAKtD,SACN,EAAKA,OAAS,IAElB,EAAKA,OAAOsC,KAAKgB,EAAKU,IAEtBmG,aAAaU,QAAQ,SAAW3I,KAAKK,UAAW,EAAKvC,SACrDqK,IAAWQ,QAAQ,SAAW3I,KAAKK,UAAW,EAAKvC,QAAW,IAAImD,KAAqB,IAAbA,KAAKC,QAC/E,EAAKuH,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,+BA7BnCrC,KAAKkC,UAAS,SAAAf,GAAK,MAAM,CACrBV,OAAO,GAAD,mBAAOU,EAAMV,QAAb,CAAqB,kBAAC,EAAD,CACvB5H,IAAK6B,KAAKC,MACV2C,KAAK,yBACLlB,KAAK,QACLiB,QAAU,mBAAcmB,EAAd,EAAEA,qB,mCAqCdU,EAAMhG,EAAO+F,GAEvB,GAAIC,EAAKtE,MAAQ,KAAO,QAAQ0H,KAAKpD,EAAK9C,MACtC4D,KAAKkC,SAAU,CACX3B,OAAQrH,EACPoH,SAAUpB,EAAKnG,WAGjB,CAEH,IAAMwJ,EAAOrD,EAAKtE,MAAQ,IAAM,0BAA0B,mCAE1DoF,KAAKkC,UAAU,SAAAf,GAAK,MAAM,CACtBV,OAAO,GAAD,mBAAOU,EAAMV,QAAb,CAAsB,kBAAC,EAAD,CACxB5H,IAAK6B,KAAKC,MACV2C,KAAMiF,EACNnG,KAAK,QACLiB,QAAU,mBAAcmB,EAAd,EAAEA,sB,0CASnBwB,KAAKzI,QAAWyI,KAAKzI,OAAOsJ,OAK7Bb,KAAKkC,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,oBAL3BrC,KAAKkC,SAAU,CACXd,QAAQ,M,+BAUV,IAAD,SASDpB,KAAKmB,MANLC,EAHC,EAGDA,OACCE,EAJA,EAIAA,SACAf,EALA,EAKAA,OACAE,EANA,EAMAA,OACAgB,EAPA,EAOAA,aACAnB,EARA,EAQAA,SAGL,OACI,6BACI5D,UAAU,UAET0E,EACAE,EAED,kBAAC,EAAD,CACIpB,SAAUF,KAAKE,SACfE,eAAgB,SAAAnB,GAAC,OACb,EAAKiD,SAAS,CAACX,OAAOtC,EAAEE,OAAOyB,MAAMhF,UAEzC2E,OAAQA,EACRF,YAAaL,KAAKmB,MAAMI,OACxBjB,SAAUA,EACVG,OAAQA,EACRD,aAAciB,EACdtB,eAAgB,SAACjB,EAAKhG,EAAK+F,GAAX,OACZ,EAAK4C,aAAa3C,EAAKhG,EAAK+F,MAIpC,6BAASvC,UAAU,yBAEX,6JAKA,4BAAQN,KAAK,UAAb,qB,GAxKYuB,IAAMsD,YAArBC,EAaVM,cAAgB,0D,YCGZgB,MArBf,YAII,IAHAR,EAGD,EAHCA,MACAS,EAED,EAFCA,SACA/F,EACD,EADCA,UAGA,OACI,oCACI,wBAAIA,UAAWA,GAAYsF,GAEvBS,GACI,oCACKA,K,QCuEVC,MAlFf,YAUI,IATAnF,EASD,EATCA,QACAb,EAQD,EARCA,UACAyC,EAOD,EAPCA,OACAb,EAMD,EANCA,QACAqE,EAKD,EALCA,YACAvB,EAID,EAJCA,OACAwB,EAGD,EAHCA,QACAtF,EAED,EAFCA,KACAN,EACD,EADCA,IACD,EAE4BU,oBAAU,GAFtC,mBAEQmF,EAFR,KAEgBC,EAFhB,OAGkCpF,oBAAU,GAH5C,mBAGQ4D,EAHR,KAGmByB,EAHnB,KAKC,OACI,oCACKxF,EACD,0BACIqC,WAAUrC,EAAQ0C,MAAM1C,QACxBhC,GAAIgC,EAAQ0C,MAAM1C,QAClBsC,WAAUtC,EAAQ0C,MAAM3C,MAG3BgE,EAGGnC,EACI,kBAAC,WAAD,CACIrC,MAAO,CACHkG,WAAY,mBAEhBC,QAAS,WACLH,GAAS,IAEbI,OAAQ,WACJJ,GAAS,IAEbT,GAAIlD,EACJgE,cAAe7E,aAAmBvC,SAAWuC,EAAU,WACnDyE,EAAa,kBAAC,IAAD,CAAUV,GAAIlD,MAG/BzC,UAAS,UAAKiG,EAAL,YAAoBE,EAAQ,eAAiB,KAGlDzB,IAEQyB,EACID,GAAWtF,GAAQN,GAAO,OAE9B,uBAAGN,UAAWA,MAM9B,4BACIN,KAAK,SACLM,UAAWiG,EACXrE,QAASA,aAAmBvC,SAAWuC,EAAU,cAG7C8C,IAEQyB,EACID,GAAWtF,GAAQN,GAAO,OAE9B,uBAAGN,UAAWA,SCrE5C0G,EAAQ,CACVC,KAAM,CAAC,CACH9H,GAAI,EACJyB,IAAI,mBACJO,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,SACND,QAAQ,OACRD,KAAK,wBAGb6B,OAAO,eACPzC,UAAU,oBACV,CACAnB,GAAI,EACJyB,IAAK,mBACLO,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,SACND,QAAQ,SACRD,KAAK,wBAGb6B,OAAO,gBACPzC,UAAU,wBAEd4G,YAAa,CACT,CACI/H,GAAI,EACJyB,IAAI,sBACJO,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAQ,UACRD,KAAK,wBAGbZ,UAAU,YACV4B,QAAS,SAAAiF,GAAM,OACXA,GAAQ,KAGhB,CACIhI,GAAI,EACJyB,IAAI,uBACJO,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAQ,SACRD,KAAK,yBAGbZ,UAAU,mBACV4B,QAAS,SAAAiF,GAAM,OACXA,GAAQ,OAMlBC,EAAYJ,EAAMC,KAClBI,EAAmBL,EAAME,YCdhBD,MA/Cf,YAEI,IADAhC,EACD,EADCA,EAAEqC,EACH,EADGA,KAGF,OACI,oCACI,6BAAShH,UAAU,QACdgH,GACG,oCACI,kBAAC,EAAD,CACI1B,MAAO,oCAAE,yCAAF,gBACPS,SAAS,uBAGb,yBAAK/F,UAAU,gBACX,gCACI,yBACIO,IAAKoE,EAAEzJ,IAAI,UACXoF,IAAI,SACJL,MAAM,QAEV,oCACK0E,EAAEzJ,IAAI,YAKXwL,EAAM7J,KAAK,SAAAoK,GAAI,OACX,kBAAC,EAAD,CACI3G,IAAK2G,EAAK3G,IACVnE,IAAK8K,EAAKpI,GACVgC,QAASoG,EAAKpG,QACd4B,OAAQwE,EAAKxE,OACbzC,UAAWiH,EAAKjH,gBAMhC,kBAAC,EAAD,UC1CpBkH,G,YAAajG,IAAMC,aAClBiG,EAAU,CACPC,QAASnG,IAAMC,YACdmG,MAAOpG,IAAMC,aAEhBoG,EAAW,CACT3F,IAAKuF,EACLE,QAASF,EAAWpK,SA0FbyK,MAtFf,YAcI,IAbAC,EAaD,EAbCA,UACAC,EAYD,EAZCA,SACAC,EAWD,EAXCA,UACAC,EAUD,EAVCA,YACAC,EASD,EATCA,WACAC,EAQD,EARCA,WACAjH,EAOD,EAPCA,KACAZ,EAMD,EANCA,UACA8H,EAKD,EALCA,UACAC,EAID,EAJCA,gBACAC,EAGD,EAHCA,iBACAtB,EAED,EAFCA,MACApB,EACD,EADCA,MAWA,OARA2C,qBAAW,WACJF,EACCZ,EAAQe,OAAOpL,QAAQqJ,SAChB6B,GAAoBF,IAC3BX,EAAQC,QAAQtK,QAAQqJ,WAK5B,6BACInG,UAAS,kBAAaA,GACtB2B,IAAKuF,GAEF5B,GAAS,4BAAKA,GAEjB,2BACKuC,GAAcjH,GAGnB,+BACI,4BACIlB,KAAK,SACLM,UAAU,UACV4B,QAAS,WACL,IACIuG,EAAOX,aAAqBnI,SAAWmI,EAAW,aAClDY,EAAMV,aAAqBrI,SAAWqI,EAAW,aAGrDS,EAAMb,GACNc,EAAKd,IAET3F,IAAKwF,EAAQC,SAEZV,GACG,uBAAG1G,UAAU,iBAEjB,8BACK2H,IAIT,4BACI3H,UAAU,SACV2B,IAAKwF,EAAQe,OACbxI,KAAK,SACLkC,QAAS,WAEL,IACIsG,EAAST,aAAoBpI,SAAWoI,EAAU,aAClDW,EAAMV,aAAqBrI,SAAWqI,EAAW,aAErDQ,EAAQZ,GACRc,EAAKd,KAGRZ,GACG,uBAAG1G,UAAU,iBAEjB,8BACK4H,O,MCkGVS,MAvLf,YAaI,IAZAC,EAYD,EAZCA,WACAC,EAWD,EAXCA,KACA5H,EAUD,EAVCA,QACA6H,EASD,EATCA,SACAC,EAQD,EARCA,QACAC,EAOD,EAPCA,UACA9J,EAMD,EANCA,IACA+J,EAKD,EALCA,YACAC,EAID,EAJCA,OACAC,EAGD,EAHCA,SACAC,EAED,EAFCA,OACAC,EACD,EADCA,UACD,EAE8B/H,oBAAS,GAFvC,mBAEQoG,EAFR,KAEgB4B,EAFhB,OAGoChI,oBAAS,GAH7C,mBAGQiI,EAHR,KAGmBC,EAHnB,OAI0BlI,mBAAS,IAJnC,mBAIQjC,EAJR,KAIcoK,EAJd,OAKwBnI,mBAAUC,IAAMC,aAAhCkI,EALR,sBAMoBpI,mBAAUC,IAAMC,aAA5BmI,EANR,oBAkBC,OAVApB,qBAAW,WAEHM,IAASnB,GACTkC,YAAW,WACHF,EAAatM,SACjBsM,EAAatM,QAAQqJ,UACrB,QAKR,wBACInG,UAAS,cACTuJ,aAAc,kBAAMX,aAAkBvJ,SAAWuJ,IAAU,MAC3DY,aAAc,YACLlB,GAAc3H,aAAmBtB,UAClCsB,MAIR,wBACIX,UAAS,UAAKuI,IAASnB,EAAU,GAAG,SAGpC,kBAAC,EAAD,CACIvG,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAO,gBAAW7C,KAAKC,OACvB2C,KACI,mDAEkB,UAAbiI,EAAuB,QAAS,WAKjD7I,UAAU,aACV4B,QAAS,WACLsH,GAAc,GACdI,YAAW,kBACPD,EAASvM,QAAQqJ,UAAS,MAGlCF,YAAW,UAAKgD,EAAa,OAAO,MAGxC,0BACQjJ,UAAS,UAAKiJ,EAAa,GAAG,SAC9BzF,SAAU,SAAAjB,GACNA,EAAEgD,iBACFkD,EAAS1J,GACToK,EAAU,MAId,2BACIxH,IAAK0H,EACLrJ,UAAS,4BAAwBiJ,EAAoB,OAAP,OAArC,YAAsDP,EAAY,aAAc,IACzFhJ,KAAK,OACLrD,KAAK,QACL6H,MAAOnF,EACPqD,SAAU,SAAAG,GAAC,OAAI4G,EAAU5G,EAAEE,OAAOyB,QAClCD,aAAa,MACbD,YAAapF,EAAI1D,IAAI,QACrBuO,WAAYf,IAGhB,kBAAC,EAAD,CACI7H,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAQ,OACRD,KAAK,aAGb8D,OAAQgE,EACR1I,UAAU,eACV4B,QAAS,kBAAMsH,GAAc,IAC7BjD,YAAW,oBAAegD,EAAa,GAAG,OAA/B,YAAyCP,EAAY,oBAAqB,MAIrFC,EAAY9L,KAAK,SAAAyH,GAAK,OAClBA,OAOpB,wBACItE,UAAS,UAAKuI,IAASU,EAAa,GAAG,SAInC7B,GACI,oCACI,kBAAC,EAAD,CACIvG,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAQ,SACRD,KACI,oCAEQmI,GACI,qDAEkB,UAAbF,EAAuB,QAAS,YAQ7D7I,UAAU,eACV4B,QAAS,kBACLoH,EACI,kBAAC,EAAD,CACIxB,UAAWgB,EACXd,UAAW,kBAAMsB,GAAY,IAC7BpI,KAAI,kDAA0CiI,EAA1C,YAAsDjK,EAAI1D,IAAI,SAClEyM,YAAY,MACZC,WAAW,MACX5H,UAAU,wCACV0G,OAAK,EACLoB,WAAS,UASzC,wBACI9H,UAAS,UAAKuI,IAASU,GAAcH,IAAW1B,EAAU,GAAG,SAI7D,kBAAC,EAAD,CACIvG,QACI,kBAAC,EAAD,CACInB,KAAK,OACLoB,MAAM,MACND,QAAQ,QACRD,KAAK,sBAGbZ,UAAU,eACV4B,QAAS,kBAAMjB,aAAmBtB,SAAWsB,IAAW,WC7KxE+I,G,MAAazI,IAAMC,aA8HRyI,MAnHf,YAGI,IAFAC,EAED,EAFCA,KACAnE,EACD,EADCA,GACD,EAE8BzE,oBAAU,GAFxC,mBAEQ6I,EAFR,KAEgBC,EAFhB,OAGkC9I,oBAAU,GAH5C,mBAGQ0H,EAHR,KAGkBqB,EAHlB,OAI8B/I,oBAAU,GAJxC,mBAIQgJ,EAJR,KAIgBC,EAJhB,OAKwBjJ,mBAAU4I,EAAK1O,IAAI,SAL3C,mBAKQmB,EALR,KAKa6N,EALb,OAM0ClJ,oBAAU,GANpD,mBAMQmJ,EANR,KAMsBC,EANtB,OAOgCpJ,oBAAU,GAP1C,mBAOQ4D,EAPR,KAOiByB,EAPjB,OAQ4BrF,mBAAU,IARtC,mBAQQ+C,EARR,KAQesG,EARf,OASmBrJ,mBAASC,IAAMC,aAA1BoJ,EATR,sBAUwBtJ,mBAAU,MAVlC,mBAUQ9C,EAVR,KAUaqM,EAVb,KAkBC,OANAtC,qBAAW,WAEM,OAAT/J,GAzBZ,SAAoBX,EAAUkI,GAE1B,OAAO,IAAI3K,SAAS,SAAEC,EAAUC,GAC5ByK,EAAG/G,aAAcnB,GAAUpC,MAAM,SAAAsC,GAAI,OAAI1C,EAAS0C,EAAK0G,cAuBnDqG,CAAWZ,EAAK/K,GAAK4G,GAAKtK,MAAM,SAAAsP,GAAC,OAAIF,EAASE,GAAK,SAIvD,oCACK7F,EACCoF,GACE,wBACIT,aAAc,kBAAMO,GAAW,IAC/BN,aAAc,kBAAMM,GAAW,IAC/B9J,UAAS,oBAAegK,EAAU,GAAG,QACrCrI,IAAK2I,GAEL,yBAAKtK,UAAU,eAEE,OAAT9B,EACI,kBAAC,EAAD,CAAQ+B,MAAO,GAAIP,KAAK,OACtBxB,EAJd,WAOA,4BACI8B,UAAU,YACV2B,IAAK+H,EACLgB,UAAW,SAAAnI,GACH,QAAQqD,KAAKrD,EAAEpG,MACf2N,GAAaD,GACbO,GAAmBP,IAE3BjI,QAAS,kBAAMyE,EAAa,kBAAC,IAAD,CAAUV,GAAE,gBAAWiE,EAAK/K,QACxD8L,cAAe,SAAApI,GAAC,OAAIA,EAAEgD,mBAEtB,kBAAC,WAAD,CACIqF,YAAa,SAAArI,GACkB,IAAxBA,EAAEsI,YAAYC,QAEbhB,GAAW,GACXM,GAAkB,KAG1BzE,GAAE,gBAAWiE,EAAK/K,KAEjBxC,IAIb,iCAEI,+BACI,kBAAC,EAAD,CACI0M,UAAU,MACVF,SAAS,QACTL,SAAU,WACN/C,EAAGlG,YAAaqK,EAAK/K,IAAK1D,MAAM,WAC5B8O,GAAY,GACZH,GAAY,OAGpBxB,WAAY6B,EACZvB,OAAQ,kBAAMkB,GAAY,IAC1BrB,QAAS,SAAA1J,GACLgL,EAAc,kBAAC,EAAD,CACV9J,MAAO,GACPP,KAAK,WAGT+F,EAAGxG,WACC2K,EAAK/K,GACJE,GACH5D,MAAM,WAGJkP,EAAU,GAAD,mBACDtG,GADC,CACQ,kBAAC,EAAD,CACTpD,QAAS,mBAAcmB,EAAd,EAAEA,WACX3F,IAAK6B,KAAKC,MACV2C,KAAK,kDACLlB,KAAK,eAGbwK,EAASnL,OAGjB2J,UAAWA,EACX/H,QAAS,aACT/B,IAAKgL,EACLrB,KAAMsB,EACNlB,YAAa5E,SCxF1BgH,MA9Bf,YAAsD,IAAjCrQ,EAAgC,EAAhCA,OAAOsM,EAAyB,EAAzBA,KAAKvB,EAAoB,EAApBA,GAC7B,OADiD,EAAjBuF,eAE5B,oCACI,wBAAIhL,UAAU,mBAENgH,IACItM,EAAOyJ,OACP,oCACKzJ,EAAOmC,KAAK,SAAA+M,GAAI,OACb,kBAAC,EAAD,CACIA,KAAMA,EACNzN,IAAKyN,EAAK/K,GACV4G,GAAIA,QAKZ,kBAAC,EAAD,CACI/F,KAAK,QACLkB,KAAK,iCCfhBqK,G,kBAajB,WAAa1H,GAAS,IAAD,8BAEjB,4CAAOA,KAbXkB,MAAQ,CAEJC,OAAQ,CACJC,EAAG,kBAAC,EAAD,CAAQ1E,MAAO,GAAIP,KAAK,QAAQQ,MAAI,EAACC,GAAG,mBAC3CzF,OAAQ,kBAAC,EAAD,CAAQuF,MAAO,GAAIP,KAAK,QAAQQ,MAAI,EAACC,GAAG,oBAEpDwE,EAAG,KACHjK,OAAQ,GACRkK,UAAU,GAMV,EAAK/J,OAASmK,aAAaC,QAAQ,UAAYC,IAAWD,QAAQ,SAElEI,SAASC,MAAQ,eALA,E,iFAUZhC,KAAKzI,OAMNyI,KAAK4H,YALL5H,KAAKkC,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,U,kCAStB,IAAD,OAERrC,KAAKC,MAAMkC,GAAG7K,QAAS0I,KAAKzI,QAC3BM,MAAM,SAAAC,GAECA,EACA,EAAKoK,UAAU,SAAAf,GAAK,MAAK,CACrBC,OAAQ,CAAEC,GAAG,EAAOjK,OAAQ+J,EAAMC,OAAOhK,QACxCiK,EAAGvJ,MACF,WAEF,EAAKmI,MAAMkC,GAAG7H,YAAaxC,EAAKyD,IAAK1D,MAAM,SAAAsC,GAGvC,EAAK+H,SAAU,CACXd,OAAS,CAAEhK,QAAQ,GACnBA,OAAQ+C,UAOpB,EAAK+H,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,a,+BAM7B,IAAD,SAODrC,KAAKmB,MAJLC,EAHC,EAGDA,OACAE,EAJC,EAIDA,SACAlK,EALC,EAKDA,OACAiK,EANC,EAMDA,EAGJ,OACI,6BACI3E,UAAU,QAET4E,EAED,kBAAC,EAAD,CACID,EAAGA,EACHqC,KAAMtC,EAAOC,IAIjB,kBAAC,EAAD,CACIc,GAAInC,KAAKC,MAAMkC,GACf/K,OAAQA,EACRsM,KAAMtC,EAAOhK,OACbsQ,eAAgB,kBAAM,EAAKE,eAE/B,2BAAOlL,UAAU,aACb,kBAAC,EAAD,CACIM,IAAI,kBACJO,QACI,kBAAC,EAAD,CACIA,QAAQ,YACRnB,KAAK,QACLkB,KAAK,sBACLE,MAAM,QAGdd,UAAU,qBACVyC,OAAO,qB,GAvGGxB,IAAMsD,YCJlC4G,I,MAAiB,4DAyJRC,OAvJf,YAA+E,IAA7D1L,EAA4D,EAA5DA,KAAK8D,EAAuD,EAAvDA,SAASwD,EAA8C,EAA9CA,KAAKhH,EAAyC,EAAzCA,UAAUoC,EAA+B,EAA/BA,SAASiJ,EAAsB,EAAtBA,WAAWvD,EAAW,EAAXA,UAAW,EAE7C9G,mBAAS,IAFoC,mBAEnEpF,EAFmE,KAE3D0P,EAF2D,OAG/CtK,mBAAS,IAHsC,mBAGnE+C,EAHmE,KAG5DsG,EAH4D,OAInDrJ,mBAAS,IAJ0C,mBAInE3E,EAJmE,KAI9D6N,EAJ8D,OAKxDlJ,mBAAUC,IAAMC,aAA3BqK,EALmE,oBAmB1E,OAZAtD,qBAAW,WAEHsD,EAAQzO,mBAAmBiF,MAGvB+F,GACAyD,EAAQzO,QAAQqJ,WAOxB,oCACI,0BACAnG,UAAS,kBAAaA,GACtBwD,SAAU,SAAAjB,GACNA,EAAEgD,iBAEF,IAAMpH,EAAO,CACT9B,KAAMA,EACLT,QAASA,GAAWuP,GACpBI,QAASA,EACThJ,EAAGA,GAGR2H,EAAQ,IAEJ,SAAStE,KAAKlG,WACPvB,EAAKvC,QAEhB4H,EAAUrF,KAId,yBAAK6B,UAAU,qBACX,2BACI2B,IAAK4J,EACL7L,KAAK,OACLwE,MAAO7H,EACP2H,YAAW,mBAAe,SAAS4B,KAAKlG,GAAgB,QAAR,SAChDuE,aAAa,MACb7B,SAAU,gBAAEK,EAAF,EAAEA,OAAF,OAAcyH,EAASzH,EAAOyB,UAE5C,2BACI5B,QAAQ,OACRtC,UAAS,UAAO3D,EAAK8H,OAAS,SAAS,WAF3C,SAIY,SAASyB,KAAKlG,GAAgB,QAAR,UAKjC,SAASkG,KAAKlG,GA4Db,KA3DF,kBAAC,EAAD,CACIM,UAAU,OACV3D,KAAK,UACL8F,MACI,oCACI,kBAAC,EAAD,CACItB,QAAQ,cACRnB,KAAK,OACLkB,KAAK,sBACLE,MAAM,QAEV,4BACIqC,WAAS,sBACTD,WAAS,eAET,4BACIxD,KAAK,SACLkC,QAAS,SAAAW,GAAC,OAAKA,EAAEE,OAAOT,WAAWqC,UAEnC,yBACI9D,IAAK4K,GACL7K,IAAI,YACJL,MAAO,QAM3BoC,UAAQ,EACRD,SAAU,SAACI,EAAKhG,EAAK+F,GACjB,GACIC,EAAKtE,MAAQ,KACb,SAAS0H,KAAKpD,EAAK9C,MAEnB4L,EAAY9O,GAEZ,SAAE4F,GACE8H,EAAS,IACT9H,EAAUI,EAAOhG,EAAOH,EAAOkP,GAFnC,CAGKnJ,aAAoB/C,SAAW+C,EAAW,kBAE5C,CAEH,IAAMyD,EAAOrD,EAAKtE,KAAO,IACrB,0BACA,wCAGJmM,EAAU,GAAD,mBAAMtG,GAAN,CACL,kBAAC,EAAD,CACI5H,IAAK6B,KAAKC,MACVyB,KAAK,QACLkB,KAAMiF,EACNlF,QAAS,mBAAcmB,EAAd,EAAEA,oBASnC,kBAAC,EAAD,CACIjB,QAAQ,WACRnB,KAAK,OACLkB,KAAK,mBAET,4BACIlB,KAAK,SACL+J,WAAYzC,EACZhH,UAAagH,EAAO,WAAW,GAC/B9D,WAAY8D,EAAO,WAAW,GAC9B7D,WAAS,kBAGL6D,GACI,2CACa,SAASpB,KAAKlG,GAAiC,SAAxB2L,EAAW,aAQ9DtH,EAAOlH,KAAK,SAAAyH,GAAK,OAAIA,OCvJxBkH,I,MAAc,SAAA7P,GAEhB,KAAMA,aAAmB8P,OAAS,MAAO,GAEzC,IAAIC,EAAS,GAkCb,OAhCA/P,EAAQgQ,SAAS,SAAA5P,GAEb,IAEI,IAAIC,EAAI,KASR,KALIA,EAFkB,kBAAXD,EAEHgB,KAAKC,MAAOjB,GAEZA,GAGAI,MAAOH,EAAEkB,IAAO,OAEpB,IAAI0I,KAAK5J,EAAEkB,MAAQ,MAAM0I,KAAK5J,EAAEG,OAChCH,EAAEkB,IAAMlB,EAAEkB,IAAI0O,QAAQ,IAAM,QAKlB,cAAV5P,EAAEG,MAEDH,EAAEG,IAAM,cAIbuP,GAAM,UAAO1P,EAAEG,IAAT,YAAgBH,EAAEkB,IAAlB,MAER,MAAOD,QAGNyO,IAqCIG,OAlCf,YAMK,IALDrM,EAKA,EALAA,KACAwH,EAIA,EAJAA,KACA8E,EAGA,EAHAA,WACA7L,EAEA,EAFAA,MACA8L,EACA,EADAA,SAGA,OACI,4BACI/L,UAAU,aAETgH,GACG,oCAEK8E,GACG,gCAAY9L,UAAW+L,GAClBD,GAGT,yBACIvL,IAAKf,EAAKtE,IAAI,QACdoF,IAAKd,EAAKtE,IAAI,QACdkF,MAAO,CACHrE,OAAQyP,GAAahM,EAAKtE,IAAI,aAElC+E,MAAOA,GAAS,S,MCkFzB+L,OA/If,YAAkC,IAAhBpC,EAAe,EAAfA,KAAKnE,EAAU,EAAVA,GAAGwG,EAAO,EAAPA,KAAO,EAEAjL,oBAAU,GAFV,mBAEtB6I,EAFsB,KAEdC,EAFc,OAGA9I,oBAAU,GAHV,mBAGtBgJ,EAHsB,KAGdC,EAHc,OAIIjJ,oBAAU,GAJd,mBAItB0H,EAJsB,KAIZqB,EAJY,OAKF/I,mBAAU,IALR,mBAKtB+C,EALsB,KAKfsG,EALe,OAMZrJ,mBAAUC,IAAMC,aAA1BgL,EANsB,sBAOYlL,oBAAU,GAPtB,mBAOtBmJ,EAPsB,KAORC,EAPQ,KAS7B,OACI,oCACMJ,GACE,wBACIT,aAAc,kBAAM2C,EAAOpP,QAAQqP,UAAUrK,OAAO,SACpD0H,aAAc,kBAAM0C,EAAOpP,QAAQqP,UAAUrO,IAAI,SACjDkC,UAAS,kBAAagK,EAAU,GAAG,OAA1B,YAAoCiC,EAAO,OAAO,KAE3D,kBAAC,WAAD,CACIjM,UAAU,cACV2F,GAAE,kBAAaiE,EAAK/K,IACpB8L,cAAe,SAAApI,GAAC,OAAIA,EAAEgD,kBACtBkB,cAAe,SAAAlE,GACiB,IAAxBA,EAAEsI,YAAYC,OACdhB,GAAaD,IAGrBa,UAAW,SAAAnI,GACH,QAAQqD,KAAKrD,EAAEpG,MAEf2N,GAAaD,KAKrB,kBAAC,EAAD,CACIhJ,QAAQ,MACRnB,KAAK,OACLkB,KAAI,UAAMiJ,EAAmB,SAAT,SAAhB,SACJ/I,MAAM,QAEV,kBAAC,GAAD,CACItB,KAAMoK,EACNkC,WACI,yBAEI5I,WAAS,MACTC,WAAS,OACTnD,UAAU,kBAGV,4BACI2B,IAAKuK,EACLlM,UAAU,OAEV4B,QAAS,SAAAW,GACLA,EAAEgD,iBAEF6E,GAAmBP,GACnBC,GAAYD,KAGhB,uBAAG7J,UAAY6J,EAA8B,eAApB,wBAIrCkC,SAAS,eAIjB,kBAAC,EAAD,CACIjD,QAAM,EACND,SAAS,QACTL,SAAU,WACN/C,EAAGtG,cAAeyK,EAAK/K,IAAK1D,MAAM,WAC9B8O,GAAY,GACZH,GAAY,OAGpBxB,WAAY6B,EACZvB,OAAQ,kBAAMkB,GAAY,IAC1BrB,QAAS,SAAA1J,GACLgL,EAAc,kBAAC,EAAD,CACV9J,MAAO,GACPP,KAAK,WAGT+F,EAAG3G,SACC8K,EAAK/K,GACLE,EACA6K,EAAK1O,IAAI,aACXC,MAAM,SAAAiR,GAEJrC,GAAc,GAEVqC,EAAK5Q,QAGL6O,EAAU,GAAD,mBACDtG,GADC,CACQ,kBAAC,EAAD,CACTpD,QAAS,mBAAcmB,EAAd,EAAEA,WACX3F,IAAK6B,KAAKC,MACV2C,KAAK,gDACLlB,KAAK,eAMO,MAAhB0M,EAAKzO,OAIL0M,EAAU,GAAD,mBAAMtG,GAAN,CAAc,kBAAC,EAAD,CACnB5H,IAAK6B,KAAKC,MACVyB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,WACXlB,KAAI,kBAAa7B,EAAb,0CAKRsN,QAAQC,KAAK,yBAA2B1C,EAAK/K,GAAK+K,EAAK1O,IAAI,aAO3EwN,UAAWA,EACX/H,QAAS,WACLmJ,GAAW,IAEflL,IAAKgL,EACLrB,KAAMsB,EACNlB,YAAa5E,O,YCtHtB6C,OApBf,YAAyC,IAAlBC,EAAiB,EAAjBA,OAAOlJ,EAAU,EAAVA,OAE1B,OACI,6BAASqC,UAAU,eACd0G,EAAM7J,KAAK,SAAAoK,GAAI,OACZ,kBAAC,EAAD,CACI3G,IAAK2G,EAAK3G,IACVnE,IAAK8K,EAAKpI,GACVgC,QAASoG,EAAKpG,QACdb,UAAWiH,EAAKjH,UAChB4B,QAAS,kBACLqF,EAAKrF,QAASiF,IAElBZ,YAAW,UAAKtI,GAAUsJ,EAAKpI,GAAK,SAAWlB,GAAWsJ,EAAKpI,GAAgB,GAAX,SAAzD,Y,MCFhB0N,OAbf,YAEI,IADA1N,EACD,EADCA,GAAG2N,EACJ,EADIA,IAAIC,EACR,EADQA,OAAOC,EACf,EADeA,MAGd,OACI,6BACI1M,UAAS,gBAAWyM,IAAW5N,EAAK,SAAS,OAApC,YAA8C6N,EAA9C,MAERF,I,iBCLQG,I,mBAWjB,WAAYpJ,GAAQ,IAAD,8BAEf,4CAAOA,KATXkB,MAAQ,CACJgI,OAAQ,EACPC,MAAO,KACPE,QAAS,EACTC,MAAM,GAOP,EAAKpI,MAAMvG,KAAOqF,EAAMuJ,KAAK3I,OAExBZ,EAAMuJ,KAAK3I,QACZkI,QAAQ/H,MAAM,wDAA0Df,EAAMuJ,MAGlF,EAAKC,aAAwC,kBAAlBxJ,EAAMyJ,SAAwBzJ,EAAMyJ,QAAUL,EAAOM,eAAiB1J,EAAMyJ,QAAU,IAEjH,EAAKE,eAAgB,EAAKH,aAE1B,EAAKI,KAAO,EAAKA,KAAK/H,KAAV,gBACZ,EAAKgI,cAAgB,EAAKA,cAAchI,KAAnB,gBACrB,EAAKiI,cAAe,EAhBL,E,6EAwBf/J,KAAK4J,gBAAkB,GAEvB,IAEMI,GAFUhK,KAAKyJ,aAAezJ,KAAK4J,gBAEV5J,KAAKyJ,aAAc,IAE9CO,EAAa,IACbhK,KAAK6J,OAGL7J,KAAKkC,SAAU,CACXoH,QAASW,KAAKC,MAAMF,O,6BAQxB,IAAD,OAEHhK,KAAK+J,cAAe,EAFjB,MAIsB/J,KAAKmB,MAAzBgI,EAJF,EAIEA,OAAOvO,EAJT,EAISA,KAAK2O,EAJd,EAIcA,KACZY,EAAShB,EAAS,EAAIvO,EAAOuO,EAAS,EAAI,EAG/CnJ,KAAKkC,SAAU,CACXkH,MAAO,SACP,WACAgB,cAAe,EAAKC,WACpBrE,YAAW,WACP,EAAK9D,SAAU,CACXkH,MAAO,KACND,OAAQgB,EACRb,QAAS,IACV,WAEAtD,YAAW,WACFuD,IACD,EAAKc,UAAYC,YAAa,EAAKR,cAAgB,KACvD,EAAKC,cAAe,EAEhB,EAAKQ,sBAAsBxO,WAC3B,EAAKwO,aACL,EAAKA,WAAa,QAEvBlB,EAAOM,gBACV,EAAKC,eAAiB,EAAKH,kBAEhCJ,EAAOM,qB,6BAKV,IAAD,OAEH3J,KAAK+J,cAAe,EAFjB,MAIsB/J,KAAKmB,MAAzBgI,EAJF,EAIEA,OAAOvO,EAJT,EAISA,KAAK2O,EAJd,EAIcA,KACZY,EAAShB,EAAS,GAAK,EAAIA,EAAS,EAAIvO,EAAK,EAGlDoF,KAAKkC,SAAU,CACXkH,MAAO,SACP,WACAgB,cAAe,EAAKC,WACpBrE,YAAW,WACP,EAAK9D,SAAU,CACXkH,MAAO,KACND,OAAQgB,EACRb,QAAS,IACV,WAEAtD,YAAW,WACFuD,IACD,EAAKc,UAAYC,YAAa,EAAKR,cAAgB,KACvD,EAAKC,cAAe,EAEhB,EAAKQ,sBAAsBxO,WAC3B,EAAKwO,aACL,EAAKA,WAAa,QAEvBlB,EAAOM,gBACV,EAAKC,eAAiB,EAAKH,kBAEhCJ,EAAOM,qB,0CAKd3J,KAAKqK,UAAYC,YAAatK,KAAK8J,cAAgB,M,6CAInDM,cAAepK,KAAKqK,a,+BAGd,IAAD,OAGAb,EAAQxJ,KAAKC,MAAbuJ,KAAD,EAC+BxJ,KAAKmB,MAAlCgI,EADF,EACEA,OAAOC,EADT,EACSA,MAAME,EADf,EACeA,QAAQC,EADvB,EACuBA,KAG3B,OACI,yBACI7M,UAAU,SACVuJ,aAAc,WACVmE,cAAe,EAAKC,WACpB,EAAKnI,SAAS,CACVqH,MAAM,KAGdrD,aAAc,WACVkE,cAAe,EAAKC,WACf,EAAKN,aAGN,EAAKQ,WAAa,WACd,EAAKF,UAAYC,YAAa,EAAKR,cAAgB,KAHvD,EAAKO,UAAYC,YAAa,EAAKR,cAAgB,IAMvD,EAAK5H,SAAU,CACXqH,MAAM,MAId,yBAAK7M,UAAU,eAEP8M,EAAKjQ,KAAK,SAAC2P,EAAIrQ,GAAL,OACN,0BACI6D,UAAS,iBAAY7D,IAAQsQ,EAAS,SAAS,IAC/CtQ,IAAKA,EACLyF,QAAS,WACDzF,IAAQsQ,IAGR,EAAKS,eAAiB,EAAKH,aAC3B,EAAKvH,SAAU,CAAEiH,OAAQtQ,EAAMyQ,QAAS,YAQhE,kBAAC,YAAD,CACIA,QAASA,EACTjP,OAAQiP,EAAU,IAAM,SAAS,UACjCkB,MAAO,CACHrB,OAAQ,CACJsB,OAASnB,EACToB,MAAO,cAKjB,6BAAShO,UAAU,kBAEjB,4BACIN,KAAK,SACLM,UAAS,UAAK6M,EAAO,GAAG,UACxBjL,QAAS,WACL8L,cAAe,EAAKC,WACpB,EAAKM,SAGT,uBAAGjO,UAAU,uBAIb8M,EAAKjQ,KAAK,SAAC2P,EAAIrQ,GAAL,OACN,kBAAC,GAAD,CACIA,IAAKA,EACLqQ,IAAKA,EACLC,OAAQA,EACR5N,GAAI1C,EACJuQ,MAAOA,OAKnB,4BACIhN,KAAK,SACLM,UAAS,UAAK6M,EAAO,GAAG,UACxBjL,QAAS,WACL8L,cAAe,EAAKC,WACpB,EAAKR,SAGT,uBAAGnN,UAAU,8B,GAlODiB,IAAMsD,YCA1C,SAAS2J,GAActE,EAAOnE,GAE1B,MAAO,CACHtJ,IAAIyN,EAAK/K,GACR+K,KAAKA,EACLnE,GAAGA,GDLSkH,GAEVM,eAAiB,ICiDbkB,OA1Cf,YAIK,IAHDC,EAGA,EAHAA,MACApH,EAEA,EAFAA,KACAvB,EACA,EADAA,GACA,EAEyBzE,oBAAU,GAFnC,mBAEOqN,EAFP,KAEaC,EAFb,KAIA,OACI,iCACI,wBACItO,UAAU,WAGNgH,GACI,oCAESqH,EAIG,kBAAC,GAAD,CACIrB,QAAS,IACTF,KACIsB,EAAMvR,KAAK,SAAA+M,GAAI,OACX,kBAAC,GAAYsE,GAActE,EAAOnE,SAPlD2I,EAAMvR,KAAK,SAAA+M,GAAI,OACX,kBAAC,GAAYsE,GAActE,EAAOnE,SAiB1D,kBAAC,GAAD,CAAaoB,OAAQyH,EAAU3Q,OAAQ0Q,M,OCCpCE,OAhDf,YAA8C,IAAxB3E,EAAuB,EAAvBA,KAAKpB,EAAkB,EAAlBA,SAASC,EAAS,EAATA,QAAS,EAERzH,oBAAU,GAFF,mBAElC0H,EAFkC,KAExBqB,EAFwB,KAIzC,OACI,4BACI,gCACI,yBACIxJ,IAAKqJ,EAAKpN,KACV8D,IAAI,qBACJL,MAAO,MAEX,oCACK2J,EAAKvN,MAIV,kBAAC,EAAD,CACImM,SAAUA,EACVC,QAAS,SAAC1J,EAAMsK,GAEZU,EAAc,kBAAC,EAAD,CAAQrK,KAAK,MAAMO,MAAO,MAExCqJ,YAAW,WACPS,GAAc,KACbwD,KAAKiB,MAAuB,GAAhBjB,KAAKkB,UAAkB,KAExChG,EAASmB,EAAKvN,KAAO0C,IAEzBwJ,MAAM,EACN3J,IACI,CACI1D,IAAK,SAAUwE,GACX,MAAgB,SAATA,EAAkBkK,EAAKvN,KAAOuN,EAAKpN,OAItDkM,UAAWA,EACXC,YAAa,GACbI,UAAU,yBACVF,SAAS,aCpBd6F,OApBf,YAAmD,IAAhCN,EAA+B,EAA/BA,MAAM9J,EAAyB,EAAzBA,MAAMkE,EAAmB,EAAnBA,SAASC,EAAU,EAAVA,QAEpC,OACI,wBACIzI,UAAS,UAAKsE,EAAQ,QAAQ,GAArB,cAGL8J,EAAMvR,KAAK,SAAC+M,EAAKzN,GAAN,OACP,kBAAC,GAAD,CACIsM,QAAS,SAACkG,EAAY5P,GAAb,OAAuB0J,EAAQkG,EAAa5P,IACrD5C,IAAKA,EACLyN,KAAMA,EACNpB,SAAUA,SCP5BoG,I,OAAU,SAACnJ,EAAG5G,GAEhB,OAAO,IAAI/D,SAAS,SAACC,EAAQC,GAEzByK,EAAGnI,UAAWuB,GACT1D,MAAM,SAAAqE,GACHzE,EAASyE,MAEZnE,OAAO,SAAAC,GAAG,OAAIN,EAAOM,WAmQnBuT,OA9Pf,YAA4C,IAAxBpJ,EAAuB,EAAvBA,GAAGqJ,EAAoB,EAApBA,YAAY1Q,EAAQ,EAARA,MAExBS,EAAMkQ,cAANlQ,GAFgC,EAGQmC,oBAAU,GAHlB,mBAGhCgO,EAHgC,KAGfC,EAHe,OAIZjO,mBAAS,IAJG,mBAIhC+C,EAJgC,KAIzBsG,EAJyB,OAKJrJ,mBAAS,IALL,mBAKhCkO,EALgC,KAKrBC,EALqB,OAMRnO,mBAAU,IANF,mBAMhCoO,EANgC,KAMvBC,EANuB,OAORrO,mBAAS,CACpCxB,MAAK,EACJkF,OAAO,kBAAC,EAAD,CACJzE,MAAO,GACPE,GAAG,iBACHT,KAAK,YAZ0B,mBAOhC/E,EAPgC,KAOvB2U,EAPuB,KAgBvC,OACI,6BAAStP,UAAU,cAEV8O,GACG,4BACK1Q,EAAMlD,IAAI,SAIvB,kBAAC,GAAD,CACIkT,MACKzT,EAAS6E,KAMJ7E,EAAS6E,KALfoP,GAAQnJ,EAAG5G,GAAI1D,MAAM,SAAAqE,GACjB8P,EAAa,CACT9P,KAAKA,EACJkF,QAAO,OAIpBsC,KAAMrM,EAAS+J,OACfe,GAAIA,IAGR,kBAAC,GAAD,CACI/F,KAAK,UAEL8D,SAAU,WAEFwL,IAGAI,EAASjL,QAET8K,EAAqB,kBAAC,EAAD,CAAQvP,KAAK,MAAMO,MAAO,MAE/CnF,QAAQyU,IACJ9D,MAAM+D,KACF/D,MAAO2D,EAASrT,QAAQ,SAAA0T,GAAO,OAC3BA,EAAQpT,KAAK8H,QAAU,GACvBsL,EAAQpT,KAAK8H,OAAS,MACtBA,QAASuL,QACf7S,KAAK,SAAAV,GAAG,OAAIsJ,EAAG9G,WACbE,EAAIuQ,EAASjT,GAAKE,KAAM+S,EAASjT,GAAKK,UAE5CrB,MAAM,SAAAwU,GAEJ,IACCC,EAAiB,GACjBC,EAAgBT,EAChBU,EAAc/L,EAGf4L,EAAUhE,SAAS,SAAAoE,GAEXA,EAASvU,SAETqU,EAAgBA,EAAc9T,QAAQ,SAAAiU,GAAC,OACnCA,EAAE3T,OAAS0T,EAAS1T,QAGxBuT,EAAezS,KAAM4S,EAAS1T,OAIN,MAApB0T,EAASpS,OAITmS,EAAY3S,KAAM,kBAAC,EAAD,CACdhB,IAAK6B,KAAKC,MACV2C,KAAI,UAAKmP,EAAS1T,KAAd,uBACJqD,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,eAIfgO,EAAY3S,KAAM,kBAAC,EAAD,CACdhB,IAAK6B,KAAKC,MACV2C,KAAI,gGACJlB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,cAGfuK,QAAQ/H,MAAM,wCAAyCyL,OAOnEZ,EAAeS,GAAkB,IAGjCvF,EAAWyF,GAGXT,EAAaQ,GAGbZ,GAAqB,GAGrBK,EAAa,CACT9P,MAAK,EACLkF,OAAO,kBAAC,EAAD,CACHzE,MAAO,GACPE,GAAG,iBACHT,KAAK,eAKhBrE,OAAO,SAAAC,GACJ2T,GAAqB,GACrB5C,QAAQ/H,MAAOhJ,OAKnB+O,EAAU,GAAD,mBAAOtG,GAAP,CAAgB,kBAAC,EAAD,CACrB5H,IAAK6B,KAAKC,MACV2C,KAAK,uCACLlB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,kBAIvBM,SAAU,SAACI,EAAKhG,EAAKH,GAEbA,EAAK8H,OAAS,GAAK9H,EAAK8H,QAAU,GAElCkG,EAAU,GAAD,mBAAOtG,GAAP,CAAgB,kBAAC,EAAD,CACrB5H,IAAK6B,KAAKC,MACV2C,KAAK,yBACLlB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,gBAGRsN,EAASnT,MAAM,SAAAwT,GAAO,OAAIA,EAAQpT,OAASA,KAClDgO,EAAU,GAAD,mBAAOtG,GAAP,CAAgB,kBAAC,EAAD,CACrB5H,IAAK6B,KAAKC,MACV2C,KAAK,sCACLlB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,gBAGVsN,EAASjL,QAAU,EAExBkG,EAAU,GAAD,mBAAOtG,GAAP,CAAgB,kBAAC,EAAD,CACrB5H,IAAK6B,KAAKC,MACV2C,KAAK,+DACLlB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,gBAKfuN,EAAY,GAAD,mBAAMD,GAAN,CAAe,CACtB5S,KAAMA,EACNH,KAAMA,OAIlB2K,KAAMgI,EACN3D,WAAY+D,EAASjL,SAGxBJ,EAAOlH,KAAK,SAAAyH,GAAK,OAAIA,KAId8K,EAASjL,OACL,kBAAC,GAAD,CACIsE,QAAS,SAACkG,EAAY5P,GAEdqQ,EAASnT,MAAM,SAAAwT,GAAO,OAAIA,EAAQpT,OAAS0C,KAK3CsL,EAAU,GAAD,mBAAMtG,GAAN,CAAe,kBAAC,EAAD,CACpB5H,IAAK6B,KAAKC,MAAMgS,WAAa1C,KAAKkB,SAASwB,WAC3CvQ,KAAK,QACLiB,QAAS,gBAAEmB,EAAF,EAAEA,OAAOV,EAAT,EAASA,KAAT,OAAoBU,IAAmB,KAARV,KACxCR,KAAK,yCAOTyJ,EAAU,GAAD,mBAAMtG,GAAN,CAAe,kBAAC,EAAD,CACpB5H,IAAK6B,KAAKC,MAAMgS,WAAa1C,KAAKkB,SAASwB,WAC3CvQ,KAAK,UACLiB,QAAS,gBAAEmB,EAAF,EAAEA,OAAOV,EAAT,EAASA,KAAT,OAAoBU,IAAmB,KAARV,KACxCR,KAAI,kBAAa+N,EAAb,yCAA6C5P,QAGrDsQ,EAAaD,EAASvS,KAAK,SAAA4S,GAGvB,OAFGA,EAAQpT,OAASsS,IACpBc,EAAQpT,KAAO0C,GACR0Q,QAInBjH,SAAU,SAAAiH,GAAO,OACbJ,EAAaD,EAASrT,QAAQ,SAAAiU,GAAC,OAAIA,EAAE3T,OAASoT,EAAQpT,UAE1D+R,MAAOgB,IAEX,KAMJF,EAAW/K,OACP,4BAEQ+K,aAAsBzD,MACtByD,EAAWrS,KAAK,SAACR,EAAKF,GAAN,OACZ,wBAAIA,IAAKA,GACL,kBAAC,EAAD,CACIuD,KAAK,UACLiB,QAAS,gBAAEmB,EAAF,EAAEA,OAAOV,EAAT,EAASA,KAAT,OAAoBU,IAAmB,KAARV,KACxCR,KAAI,kBAAavE,EAAb,kDAGV,MAGd,OCnQH6T,G,YAgBjB,WAAY3M,GAAQ,IAAD,8BAEf,4CAAOA,KAhBXkB,MAAQ,CACJC,OAAQ,kBAAC,EAAD,CAAQzE,MAAO,GAAIP,KAAK,QAC/BkF,UAAU,EACVuL,SAAU,kBAAC,EAAD,CAAQjQ,MAAI,EAACD,MAAO,GAAIP,KAAK,OAAOS,GAAG,mBACjD2O,YAAa,kBAAC,EAAD,CAAQ5O,MAAI,EAACD,MAAO,GAAIP,KAAK,KAAKS,GAAG,mBAClD/B,MAAO,KACP2F,OAAQ,IAYTsB,SAASC,MAAQ,gBACjB,EAAK9B,SAAW,EAAKA,SAAS4B,KAAd,gBALD,E,wEAHf,MAAO,U,yDAWU,IAAD,OAEZ9B,KAAKC,MAAM6M,SAAWF,EAAWpS,OAEjCwF,KAAKC,MAAMkC,GAAG/K,OAAOO,IAAKoK,SAASgL,SAASC,KAAKC,MAAM,KAAKC,OAC3DtV,MACAC,MAAM,SAAAiD,GACH,EAAKoH,SAAU,CACXpH,MAAOA,EACN0Q,aAAa,OAK1BxL,KAAKzI,OAASmK,aAAaC,QAAQ,UAAYC,IAAWD,QAAQ,SAElE,IAAMwL,EAAa,CACf/L,QAAQ,EACRE,SAAU,kBAAC,IAAD,CAAUe,GAAG,OAG3BrC,KAAKC,MAAMkC,GAAGlK,SAAU+H,KAAKzI,QACxBM,MAAM,SAAA4U,GAECA,EAASvU,QACT,EAAKgK,SAAU,CACXd,QAAQ,EACRtJ,KAAM2U,EAAS3U,KACd+U,UAAU,IAGf,EAAK3K,SAAUiL,MAItBpV,OAAO,kBACJ,EAAKmK,SAAUiL,Q,kCAKD,IAAD,OAAfpU,EAAe,EAAfA,KAAKkP,EAAU,EAAVA,QAEJnQ,EAAQkI,KAAKmB,MAAbrJ,KAEPkI,KAAKkC,SAAU,CACXd,OAAQ,kBAAC,EAAD,CAAQzE,MAAO,GAAIP,KAAK,UAGhCrD,EAAK8H,QAAU,GAAK9H,EAAK8H,QAAU,IAE/BoH,EAAQzO,mBAAmBiF,OAE3BwJ,EAAQzO,QAAQoH,MAAQ,GACxBqH,EAAQzO,QAAQqJ,SAGpB7C,KAAKC,MAAMkC,GAAG/H,SACVrB,EAAOjB,EAAKyD,IACd1D,MAAM,SAAA4U,GAEAA,EAASvU,QACT,EAAKgK,SAAU,CACXd,QAAQ,EACRgM,UAAU,EACV3M,OAAQ,GACR4M,QAAS,CAAEC,OAAO,EAAQxS,MAAO2R,EAAS3R,SAC1C,WAEA,EAAKqG,MAAMkM,QAAQvS,MAAMlD,MACxBC,MAAO,SAAAiD,GAEJ,EAAKoH,SAAU,CACXmL,QAAS,CACLC,OAAO,EACPxS,MAAOA,WAMvB,EAAKoH,UAAU,SAAAf,GAAK,MAAK,CACrBC,QAAQ,EACRX,OAAO,GAAD,mBAAMU,EAAMV,QAAZ,CACF,kBAAC,EAAD,CACI5H,IAAK6B,KAAKC,MACVyB,KAAK,QACLiB,QAAS,mBAAcmB,EAAd,EAAEA,WACXlB,KAAI,kBAAavE,EAAb,kCAOxBiH,KAAKkC,UAAU,SAAAf,GAAK,MAAK,CACrBV,OAAO,GAAD,mBAAMU,EAAMV,QAAZ,CACF,kBAAC,EAAD,CACI5H,IAAK6B,KAAKC,MACVyB,KAAK,QACLkB,KAAK,yBACLD,QAAS,mBAAcmB,EAAd,EAAEA,eAGnB4C,QAAQ,Q,+BAOZ,IAAC0L,EAAU9M,KAAKC,MAAf6M,OAAD,EAUI9M,KAAKmB,MARLrJ,EAFJ,EAEIA,KACAsJ,EAHJ,EAGIA,OACAyL,EAJJ,EAIIA,SACApM,EALJ,EAKIA,OACA2M,EANJ,EAMIA,SACAC,EAPJ,EAOIA,QACA7B,EARJ,EAQIA,YACA1Q,EATJ,EASIA,MAIR,OACI,oCACI,kBAAC,EAAD,CAAMuG,EAAGvJ,EAAM4L,KAAMmJ,IAEjBC,IAAWF,EAAWpS,MAClB,oCACI,kBAAC,GAAD,CACIkJ,KAAMtC,EACN1E,UAAS,UAAK0Q,EAAW,OAAO,IAChChR,KAAK,QACLoI,WAAS,EACTtE,SAAUF,KAAKE,WAGlBO,EAEG2M,GACI,kBAAC,EAAD,CACIhR,KAAK,UACLkB,KAAM,wCAEF,kBAAC,WAAD,CACI+E,GAAE,iBAAYgL,EAAQvS,MAAMS,KAE3B8R,EAAQC,MAAQD,EAAQvS,MAAMlD,IAAI,QAAU,YAL/C,+CAWlB,kBAAC,EAAD,CACIwE,KAAK,OACLkB,KAAM,oCACF,kBAAC,WAAD,CAAM+E,GAAG,SAAT,uBAQZ,oCACI,kBAAC,GAAD,CACIF,GAAInC,KAAKC,MAAMkC,GACfqJ,YAAaA,EACb1Q,MAAOA,U,GAjMC6C,IAAMsD,WCPzBsM,I,wLAEP,IAAD,EASDvN,KAAKC,MANLuN,EAHC,EAGDA,UACC1O,EAJA,EAIAA,SACA4E,EALA,EAKAA,KACA+J,EANA,EAMAA,cACAC,EAPA,EAOAA,eACAC,EARA,EAQAA,UAGL,OACI,oCAEQjK,GACI,0BACIhH,UAAU,cAEV,6BACI,2CAAgB,2BAAI8Q,GAAa,EAAjB,MAChB,2BACIpR,KAAK,QACLwR,IAAI,IACJC,IAAI,MACJC,aAAcN,GAAa,EAC3B1O,SAAU,SAAAG,GACNA,EAAEgD,iBACFnD,EAAU,CACNjG,IAAK,OACJkV,MAAO,KACPnU,IAAKsB,SAAS+D,EAAEE,OAAOyB,MAAM,SAK9C,6BACI,4CAAiB,2BAAK6M,GAAmC,IAAlBA,EAAuBA,EAAgB,IAA7D,MACjB,2BACIrR,KAAK,QACLwR,IAAI,IACJC,IAAI,OACJC,aAAeL,GAAmC,IAAlBA,EAAuBA,EAAgB,IACvE3O,SAAU,SAAAG,GACNA,EAAEgD,iBACFnD,EAAU,CACNjG,IAAK,WACJkV,MAAO,IACPnU,IAAKsB,SAAS+D,EAAEE,OAAOyB,MAAM,SAK9C,6BACI,0CAAe,2BAAI8M,GAAkB,EAAtB,MACf,2BACItR,KAAK,QACLwR,IAAI,IACJC,IAAI,MACJC,aAAcJ,GAAkB,EAChC5O,SAAU,SAAAG,GACNA,EAAEgD,iBACFnD,EAAU,CACNjG,IAAK,YACJkV,MAAO,IACPnU,IAAKsB,SAAS+D,EAAEE,OAAOyB,aAKxC,6BACI,kDAAuB,2BAAI+M,GAAa,EAAjB,SACvB,2BACIvR,KAAK,QACLwR,IAAI,QACJC,IAAI,OACJC,aAAcH,GAAa,EAC3B7O,SAAU,SAAAG,GACNA,EAAEgD,iBACFnD,EAAU,CACNjG,IAAK,YACJkV,MAAO,MACPnU,IAAKsB,SAAS+D,EAAEE,OAAOyB,mB,GAnF5BjD,IAAMsD,YCQzB+M,I,mBAgBjB,WAAa/N,GAAS,IAAD,8BAEjB,4CAAOA,KAhBXkB,MAAQ,CACJ8M,UAAW,kBAAC,EAAD,CAAQtR,MAAO,GAAIP,KAAK,QAAQS,GAAG,mBAC7CqR,WAAY,kBAAC,EAAD,CAAQvR,MAAO,GAAIP,KAAK,QAAQS,GAAG,uBAC/CsR,WAAY,kBAAC,EAAD,CAAQxR,MAAO,GAAIP,KAAK,KAAKS,GAAG,uBAC5C/E,KAAM,KACNQ,QAAS,KACTgJ,SAAU,KACVkM,UAAW,KACXC,cAAe,KACfC,eAAgB,KAChBU,eAAgB,KAChBC,WAAY,IAOb,EAAKjW,UAAY2J,SAASgL,SAASC,KAAKC,MAAM,KAAKC,MACnD,EAAKoB,cAAgB,EAAKA,cAAcxM,KAAnB,gBACrB,EAAKyM,aAAe,EAAKA,aAAazM,KAAlB,gBACpBC,SAASC,MAAQ,iBAPA,E,oFAejBoI,cAAepK,KAAKwO,UACpBpE,cAAepK,KAAKyO,gB,0CAGH,IAAD,OAKhBzO,KAAKzI,OAASmK,aAAaC,QAAQ,UAAYC,IAAWD,QAAQ,SAE7D3B,KAAKzI,OAQNyI,KAAKC,MAAMkC,GAAG7K,QAAS0I,KAAKzI,QAC3BM,MAAM,SAAAC,GAECA,EAEA,EAAKoK,SAAU,CACXb,EAAGvJ,EACFoW,YAAY,IACb,WAEA,EAAKjO,MAAMkC,GAAG9K,SAASM,IAAK,EAAKS,WAChCR,MACAC,MAAM,SAAAS,GACH,EAAK4J,SAAS,CACV5J,QAASA,EACR2V,WAAW,EACXE,YAAY,EACZX,UAAsF,EAA3EtS,UAAU5C,EAAQV,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,SAAVA,EAAEG,QAAoB,IAAIe,KACjF6T,cAAevS,UAAU5C,EAAQV,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,aAAVA,EAAEG,QAAwB,IAAIe,KACzF8T,eAAgBxS,UAAU5C,EAAQV,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,cAAVA,EAAEG,QAAyB,IAAIe,KAC3FwU,eAAgBlT,UAAU5C,EAAQV,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,eAAVA,EAAEG,QAA0B,IAAIe,OAC7F,WAEA,EAAK4U,SAAWlE,YAAa,EAAKgE,cAAgB,KAClD,EAAKG,aAAenE,YAAa,EAAKiE,aAAe,WAI5DxW,OAAO,SAAAC,GACJ,EAAKkK,SAAU,CACX+L,UAAW,KACVC,WAAY,KACZ5M,SAAU,kBAAC,IAAD,CAAUe,GAAG,cAOpC,EAAKH,SAAU,CACX+L,UAAW,KACVC,WAAY,KACZ5M,SAAU,kBAAC,IAAD,CAAUe,GAAG,WAjDpCrC,KAAKkC,SAAU,CACX+L,UAAW,KACVC,WAAY,KACZ5M,SAAU,kBAAC,IAAD,CAAUe,GAAG,U,qCAwDhCrC,KAAKkC,UAAU,SAAAf,GAAK,MAAK,CAAEkN,WAAYlN,EAAMkN,WAAW,GAAK,EAAIlN,EAAMkN,WAAW,EAAG,Q,sCAGxE,IAAD,OAEL/V,EAAW0H,KAAKmB,MAAhB7I,QAEHoW,EAAiBhN,aAAaC,QAAb,kBAAiCrJ,EAAQiD,KAE9D,IAEImT,EAAiBjV,KAAKC,MAAOgV,GAE/B,MAAO/U,GAEL+U,EAAiB,GANrB,QASSA,IACDA,EAAiB,IAGzB1I,YAAW,WACP,EAAK9D,SAAU,CACXiM,WAAY,kBAAC,EAAD,CAAQxR,MAAO,GAAIP,KAAK,KAAKS,GAAG,2BAEjD,KAEHmD,KAAKC,MAAMkC,GAAGhK,kBACVG,EAAQiD,GAAKmT,GACf7W,MAAM,WAGJ,EAAKoI,MAAMkC,GAAG9K,SAASM,IAAK,EAAKS,WAChCR,MACAC,MAAM,SAAAyD,GACH,EAAK4G,SAAU,CACX5J,QAASgD,EACR6S,YAAY,EACZX,UAAoF,EAAzEtS,UAAUI,EAAI1D,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,SAAVA,EAAEG,QAAoB,IAAIe,KAC7E6T,cAAevS,UAAUI,EAAI1D,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,aAAVA,EAAEG,QAAwB,IAAIe,KACrF8T,eAAgBxS,UAAUI,EAAI1D,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,cAAVA,EAAEG,QAAyB,IAAIe,KACvFwU,eAAgBlT,UAAU5C,EAAQV,IAAI,WAAWe,MAAM,SAAAD,GAAC,MAAc,eAAVA,EAAEG,QAA0B,IAAIe,KAC5FyU,WAAY,a,+BAOnB,IAAD,SAaDrO,KAAKmB,MAVL8M,EAHC,EAGDA,UACCC,EAJA,EAIAA,WACAC,EALA,EAKAA,WACA9M,EANA,EAMAA,EACA/I,EAPA,EAOAA,QACAkV,EARA,EAQAA,UACAC,EATA,EASAA,cACAC,EAVA,EAUAA,eACAU,EAXA,EAWAA,eACAC,EAZA,EAYAA,WAGL,OACI,6BACI3R,UAAU,gBAGV,gCACI,kBAAC,EAAD,CACI2E,EAAGA,EACHqC,KAAMwK,KAId,kBAAC,EAAD,CACI9R,KAAK,OACLkB,KACI,kBAAC,WAAD,CAAM+E,GAAG,SAAT,qBAMR,+BACI,kBAAC,GAAD,CACIqB,KAAMuK,EACN/R,KAAM5D,EACNmQ,SAAS,aACTD,WACI,qCAESyF,GACG,oCACI,2BAAI3V,EAAQV,IAAI,SADpB,KAEM,2BAAI,IAAI8C,KAAKpC,EAAQV,IAAI,aAAa+W,wBAM5DhS,MAAO,OAIf,uBAAGD,UAAU,eAEJyR,GACG,oCACI,0DAC8BE,GAE9B,6BACA,4BACI/P,QAAS,WACL8L,cAAe,EAAKoE,UACpB,EAAKF,gBACL,EAAKE,SAAWlE,YAAa,EAAKgE,cAAgB,KAClD,EAAKpM,SAAU,CAAEmM,WAAY,OALrC,gBAehB,kBAAC,GAAD,CACI3K,KAAMyK,EACNV,cAAeA,EACfD,UAAWA,EACXE,eAAgBA,EAChBC,UAAWS,EACXtP,SAAU,YAAsB,IAApBjG,EAAmB,EAAnBA,IAAIe,EAAe,EAAfA,IAAImU,EAAW,EAAXA,MAEZW,EAAiBhN,aAAaC,QAAb,kBAAiCrJ,EAAQiD,KAE9D,IAEImT,EAAiBjV,KAAKC,MAAOgV,GAC/B,MAAO/U,GAEL+U,EAAiB,GALrB,QAQSA,IACDA,EAAiB,IAGzB,IAAIrV,GAAQ,EACZqV,EAAiBA,EAAenV,KAAK,SAAAd,GAMjC,OAJGA,EAAOI,MAAQA,IACdJ,EAAOmB,IAAMA,EAAImU,EACjB1U,GAAQ,GAELZ,KAGNY,GACDqV,EAAe7U,KAAM,CACjBhB,IAAKA,EACJe,IAAKA,EAAImU,IAGlBrM,aAAaU,QAAb,kBACe9J,EAAQiD,IACnB9B,KAAKK,UAAW4U,IAGpB,IAAME,EAAQ,GAEF,SAAR/V,IACAe,GAAO,GAEXgV,EAAO/V,EAAI,SAAYqC,SAAUtB,GAEjC,EAAKsI,SAAU0M,W,GA1RGjR,IAAMsD,Y,OCuGjC4N,OA5Gf,YAA8B,IAARtT,EAAO,EAAPA,GAAG4G,EAAI,EAAJA,GAAI,EAEEzE,mBAAU,kBAAC,EAAD,CAAQtB,KAAK,QAAQO,MAAO,GAAIE,GAAG,oBAF/C,mBAElBuE,EAFkB,KAEX0N,EAFW,OAGFpR,mBAAU,MAHR,mBAGlB5F,EAHkB,KAGbiX,EAHa,OAIMrR,mBAAU,MAJhB,mBAIlB4D,EAJkB,KAITyB,EAJS,OAKYrF,oBAAU,GALtB,mBAKlBsR,EALkB,KAKNC,EALM,OAMEvR,oBAAU,GANZ,mBAMlBtG,EANkB,KAMX8X,EANW,OAOMxR,mBAAU,IAPhB,mBAOlBrG,EAPkB,KAOT2U,EAPS,OAQYtO,mBAAU,kBAAC,EAAD,CAAQtB,KAAK,QAAQO,MAAO,GAAIE,GAAG,oBARzD,mBAQlB2O,EARkB,KAQN2D,EARM,KA2CzB,OAjCAxK,qBAAW,WAEF7M,GAEDqK,EAAGjL,MAAMS,IAAK4D,GACT3D,MACAC,MAAM,SAAAwJ,GACH0N,EAAS1N,GACTyN,GAAW,GAEX3M,EAAG7H,YAAa+G,EAAE9F,IACb1D,MAAM,SAAAT,GACH8X,EAAW9X,GACX+X,GAAgB,GAEhB/X,EAAOiR,SAAQ,SAAAvN,GAEXqH,EAAG/G,aAAcN,EAAMS,IACtB1D,MAAM,SAAAqE,GACH8P,EAAY,GAAD,mBAAM3U,GAAN,YAAmB6E,iBAOjDnE,OAAO,SAAAC,GAEJ+Q,QAAQ/H,MAAOhJ,SAM3B,wBACI0E,UAAU,eAET4E,EAEGF,GACI,6BACI7F,GAAE,UAAKzD,EAAKyD,IACZ0K,aAAc,kBAAMgJ,GAAgB,IACpC/I,aAAc,kBAAM+I,GAAgB,IACpChM,QAAS,kBAAMgM,GAAgB,IAC/B/L,OAAQ,kBAAM+L,GAAgB,KAE9B,4BACI3Q,QAAS,WACLsD,IAAWQ,QAAQ,QAAUtK,EAAKyD,IAClCmG,aAAaU,QAAQ,QAAUtK,EAAKyD,IACpCwH,EAAa,kBAAC,IAAD,CAAUV,GAAG,aAG9B,gCACI,oCACKvK,EAAKF,IAAI,WAGd,yBACIqF,IAAKnF,EAAKF,IAAI,UACdoF,IAAI,SACJL,MAAM,QAKd,2BACID,UAAS,UAAKsS,EAAc,GAAI,WAI5BxD,GACI,oCACI,4BACI,4BACKpU,EAAOyJ,OADZ,SAC0BzJ,EAAOyJ,OAAS,EAAI,IAAI,IAGlD,4BACKxJ,EAASwJ,OADd,SAC4BxJ,EAASwJ,OAAS,EAAI,IAAI,WCxFjFuO,I,mBAMjB,WAAanP,GAAS,IAAD,uBAEjB,4CAAOA,KANXkB,MAAQ,CACJG,UAAU,GAMV,EAAK/J,OAASmK,aAAaC,QAAQ,WAAaC,IAAWD,QAAQ,UAEnE,IAEI,EAAKpK,OAASkC,KAAKC,MAAO,EAAKnC,QACjC,MAAMoC,GACJ,EAAKpC,OAAS,GATD,OAWZ,EAAKA,SACN,EAAKA,OAAS,IAElBwK,SAASC,MAAQ,kBAdA,E,iFAmBZhC,KAAKzI,OAAOsJ,QACbb,KAAKkC,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,U,+BAQ3B,IAAEf,EAAatB,KAAKmB,MAAlBG,SACAa,EAAMnC,KAAKC,MAAXkC,GAGN,OACI,6BACIzF,UAAU,eAET4E,EAED,4BAEQtB,KAAKzI,OAAOgC,KAAK,SAAAgC,GAAE,OACf,kBAAC,GAAD,CAAa1C,IAAK0C,EAAI4G,GAAIA,EAAI5G,GAAIA,QAK9C,kBAAC,EAAD,CACIa,KAAK,OACLkB,KACI,kBAAC,WAAD,CAAM+E,GAAG,SAAT,0B,GAxDiB1E,IAAMsD,YCA1BoO,I,mBAUjB,WAAapP,GAAS,IAAD,uBAEjB,4CAAOA,KAVXkB,MAAQ,CACJI,OAAQ,GACPjB,SAAU,GACVC,OAAQ8O,EAAW7N,cACnBf,OAAQ,GACRD,aAAc,MAOf,EAAKjJ,OAASmK,aAAaC,QAAQ,WAAaC,IAAWD,QAAQ,UAEnE,IACI,EAAKpK,OAASkC,KAAKC,MAAO,EAAKnC,QACjC,MAAOoC,GACL,EAAKpC,OAAS,GATD,S,sEAeX,IAAD,SAQDyI,KAAKmB,MALLZ,EAHC,EAGDA,OACCE,EAJA,EAIAA,OACAH,EALA,EAKAA,SACAE,EANA,EAMAA,aACAc,EAPA,EAOAA,SAGL,OACI,6BACI5E,UAAU,cAET4E,EAED,wCAEI,0BAAM5E,UAAU,YAAhB,cACA,0BAAMA,UAAU,aAAhB,cAHJ,OAMU,0BAAMA,UAAU,qBAAhB,WAIV,kBAAC,EAAD,CACIwD,SAAU,SAAAjB,GAENA,EAAEgD,iBAFS,IAIJV,EAAU,EAAKJ,MAAfI,OAEP,GACMA,EAAOV,QAAU,GACnBU,EAAOV,QAAS,GAUd,CAAC,IAEIN,EAAU,EAAKY,MAAfZ,OAEP,EAAK2B,SAAU,CACX1B,aAAc,kBAAC,EAAD,CAAQ7D,MAAO,GAAIP,KAAK,UACtC,WAEA,EAAK6D,MAAMkC,GAAGjL,MAAMsD,IAAK,CACrB+G,OAAQA,EACPhB,OAAQA,IACT1I,MAAM,SAAAgD,GAED,EAAKtD,SACN,EAAKA,OAAS,IAElB,EAAKA,OAAOsC,KAAKgB,EAAKU,IAEtBmG,aAAaU,QAAQ,SAAW3I,KAAKK,UAAW,EAAKvC,SACrDqK,IAAWQ,QAAQ,SAAW3I,KAAKK,UAAW,EAAKvC,QAAW,IAAImD,KAAqB,IAAbA,KAAKC,QAC/E,EAAKuH,SAAU,CACXZ,SAAU,kBAAC,IAAD,CAAUe,GAAG,uBAE3BtK,OAAO,SAAAC,GAAG,OAAI+Q,QAAQ/H,MAAOhJ,cA/BrC,EAAKkK,UAAS,SAAAf,GAAK,MAAM,CACrBV,OAAO,GAAD,mBAAOU,EAAMV,QAAb,CAAqB,kBAAC,EAAD,CACvB5H,IAAK6B,KAAKC,MACV2C,KAAK,yBACLlB,KAAK,QACLiB,QAAU,mBAAcmB,EAAd,EAAEA,oBA8B5B4B,eAAgB,SAAAnB,GAAC,OACb,EAAKiD,SAAU,CAAEX,OAAQtC,EAAEE,OAAOyB,MAAMhF,UAE5C2E,OAAQA,EACRD,SAAUA,EACVG,OAAQA,EACRJ,YAAaL,KAAKmB,MAAMI,OACxBf,aAAcA,EACdL,eAAgB,SAACjB,EAAKhG,EAAK+F,GAEvB,GAAIC,EAAKtE,MAAQ,KAAO,QAAQ0H,KAAKpD,EAAK9C,MACtC,EAAK8F,SAAU,CACX3B,OAAQrH,EACPoH,SAAUpB,EAAKnG,WAGjB,CAEH,IAAMwJ,EAAOrD,EAAKtE,MAAQ,IAAM,0BAA0B,mCAE1D,EAAKsH,UAAU,SAAAf,GAAK,MAAM,CACtBV,OAAO,GAAD,mBAAOU,EAAMV,QAAb,CAAsB,kBAAC,EAAD,CACxB5H,IAAK6B,KAAKC,MACV2C,KAAMiF,EACNnG,KAAK,QACLiB,QAAU,mBAAcmB,EAAd,EAAEA,4B,GA1HRb,IAAMsD,YAAzBoO,GAuBV7N,cAAgB,0DCxB3B,IA+De8N,GA/DA,CACX,CACI/T,GAAG,EACHgU,OAAM,EACNC,OAAQtO,EACRjB,MAAO,GACPwP,KAAM,IACN1W,KAAM,QAEV,CACIwC,GAAG,EACHgU,OAAM,EACNC,OAAQ7H,EACR1H,MAAO,GACPwP,KAAM,QACN1W,KAAM,aAEV,CACIwC,GAAG,EACHgU,OAAM,EACNC,OAAQ5C,GACR3M,MAAO,CACH6M,OAAQ,OAEZ2C,KAAM,aACN1W,KAAM,aAEV,CACIwC,GAAG,EACHgU,OAAM,EACNC,OAAQ5C,GACR3M,MAAO,CACH6M,OAAQ,QAEZ2C,KAAM,aACN1W,KAAM,cAEV,CACIwC,GAAG,EACHgU,OAAM,EACNC,OAAQxB,GACR/N,MAAO,GACPwP,KAAM,cACN1W,KAAM,gBAEV,CACIwC,GAAG,EACHgU,OAAM,EACNC,OAAQH,GACRpP,MAAO,GACPwP,KAAM,eACN1W,KAAM,gBAET,CACGwC,GAAG,EACHgU,OAAM,EACNC,OAAQJ,GACRnP,MAAO,GACPwP,KAAM,gBACN1W,KAAM,iBCpCC2W,OAzBf,WAEE,OACE,oCACE,kBAAC,IAAD,KAEIJ,GAAO/V,KAAK,SAAAoW,GAAK,OACf,kBAAC,IAAD,CACE9W,IAAK8W,EAAMpU,GACXkU,KAAME,EAAMF,KACZF,MAAOI,EAAMJ,MACbC,OAAQ,kBACN,kBAACG,EAAMH,OAAP,iBACMG,EAAM1P,MADZ,CAEEkC,GAAIlL,cCPF2Y,QACW,cAA7BC,OAAO9C,SAAS+C,UAEe,UAA7BD,OAAO9C,SAAS+C,UAEhBD,OAAO9C,SAAS+C,SAASC,MACvB,2D,aCXNC,IAASR,OACL,kBAAC,cAAD,KACI,kBAAC,GAAD,OAEFzN,SAASkO,eAAe,Y","file":"static/js/main.bae6d6f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader-timer.8835a88b.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-button.3de4de61.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-azure.df696f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-earth.5f4bc2b1.svg\";","import firebaseCfg from './firebase.config';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nfirebase.initializeApp( firebaseCfg );\r\nconst\r\n  collections = {\r\n    users: firebase.firestore().collection('users')\r\n    ,albums: firebase.firestore().collection('albums')\r\n    ,pictures: firebase.firestore().collection('pictures')\r\n    ,getUser( userID ) {\r\n\r\n        return new Promise( ( resolve , reject ) => (\r\n            this.users.doc( userID ).get()\r\n            .then( user => (\r\n                resolve( user.get('pseudo') ? user: null )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n        ) ) ;\r\n    }\r\n    ,isLogged( userID ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !userID ) return reject();\r\n\r\n          this.getUser( userID )\r\n            .then( user => {\r\n\r\n              if( user ) {\r\n\r\n                return resolve( {success: true ,user: user} ) ;\r\n              } else {\r\n                \r\n                return resolve( {success: false} ) ;\r\n              }\r\n            } )\r\n            .catch( err => reject(err) )\r\n          ;\r\n      } );\r\n\r\n    }\r\n    ,pictureSetFilters( pictureID , filters ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          const delDouble = picture.get('filters').filter( f => {\r\n\r\n              return !filters.find( fDelta => fDelta.key === f.key )\r\n          } ) ;\r\n\r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: [ ...delDouble , ...filters ]\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,pictureSetFilter( pictureID , filter ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n\r\n          let currentFilter = picture.get('filters') ;\r\n          \r\n          let found = false;\r\n          const newFilter = currentFilter.map( current => {\r\n\r\n              try {\r\n                if( typeof current === 'string' )\r\n                  current = JSON.parse(current)\r\n\r\n              } catch( SyntaxError ) {\r\n                \r\n                current = {};\r\n              }\r\n              if(current.key === filter.key) {\r\n                current.val = filter.val;\r\n                found = true;\r\n              }\r\n\r\n              return current ;\r\n\r\n          }  ) ;\r\n\r\n          if( !found ) {\r\n\r\n            newFilter.push( JSON.stringify( {\r\n              key: filter.key\r\n              ,val: filter.val\r\n            } ) ) ;\r\n          }\r\n\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: newFilter.filter( track => {\r\n                try {\r\n                  if( typeof track === 'string' )\r\n                    track = JSON.parse(track);\r\n                }catch( SyntaxError ) {\r\n                  return false;\r\n                }\r\n                return track.key && track.val;\r\n              })\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,getImgsOf( albumID ) {\r\n\r\n      return new Promise( (resolve,reject) => (\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => (\r\n          this.pictures.get()\r\n          .then( QuerySnapshot => (\r\n            resolve(QuerySnapshot.docs.filter( doc => (\r\n              doc.get('album_id') === albumID\r\n            ) ) )\r\n          ) ).catch( err => reject( err ) )\r\n        ) ).catch( err => reject(err) )\r\n       ) ) ;\r\n    }\r\n    ,addAlbum( name , userID  ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if(\r\n          !(name || userID)\r\n        )\r\n          reject({\r\n            status: 401\r\n          });\r\n\r\n        this.getAlbumsOf( userID ).then( docs => {\r\n\r\n          if( docs.find( doc => doc.get('name') === name ) )\r\n            return resolve( {\r\n              success: false\r\n              ,status: 401,\r\n              details: 'already exists' \r\n            } ) ;\r\n\r\n            this.albums.add( {\r\n              user_id: userID\r\n              ,name: name\r\n              ,createAt: Date.now()\r\n              ,size: 0\r\n            } ).then( data => resolve({\r\n              success:true,\r\n              album: data\r\n            }) )\r\n            .catch( err => reject( err ) ) ;\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,albumUp( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          if( !album.get('createAt') ) return reject( { partial: album } );\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))+1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,albumDown( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))-1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,getPictureOf( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        if( !albumID )\r\n          return reject();\r\n\r\n          this.pictures.get()\r\n          .then(  QuerySnapshot => (\r\n            resolve(\r\n              QuerySnapshot.docs\r\n                .filter( doc => (\r\n                  doc.get('album_id') === albumID )\r\n                ) )\r\n            )\r\n          )\r\n      } ) ;\r\n    }\r\n    ,addPicture(\r\n      albumID,\r\n      name,\r\n      picture\r\n    ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !(albumID || name || picture ) )\r\n          return reject();\r\n\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => {\r\n\r\n          this.getPictureOf( albumID ).then( \r\n            pictures => {\r\n             \r\n              if(pictures.find(\r\n                pic => pic.get('name') === name \r\n              )) {\r\n                resolve( {\r\n                  success: false,\r\n                  status: 401\r\n                } ) ;\r\n              } else {\r\n\r\n                this.pictures.add( {\r\n                  album_id: albumID\r\n                  ,blob: picture\r\n                  ,createAt: Date.now()\r\n                  ,name: name\r\n                  ,filters: []\r\n                } ).then( () => {\r\n                  this.albumUp( albumID ).then( () => {\r\n                    resolve( {success: true,id: albumID , name: name , blob: picture } )\r\n                  } ).catch( err => reject( err ) )\r\n                } )\r\n                .catch( err => reject( err ) )\r\n              }\r\n            }\r\n          )\r\n\r\n        } )\r\n        .catch( err => reject( {\r\n          status: 404\r\n        } ) )\r\n         \r\n      } ) ;\r\n\r\n    }\r\n    ,rnameImg( pictureID , rname , pictureAlbumID) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        \r\n        if(\r\n          !(pictureID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refPicture = this.pictures.doc( pictureID ) ;\r\n\r\n          this.pictures.get()\r\n          .then( QuerySnapshot  => {\r\n\r\n            if( \r\n              !QuerySnapshot.docs.find( doc => (\r\n                doc.get('name') === rname &&\r\n                doc.get('album_id') === pictureAlbumID                 \r\n              ) ) \r\n            ) {    \r\n              refPicture.get()\r\n                .then( pic => {\r\n                  refPicture.set({\r\n                    blob: pic.get('blob')\r\n                    ,album_id: pic.get('album_id')\r\n                    ,filters: pic.get('filters') || []\r\n                    ,name: rname\r\n                    ,createAt: pic.get('createAt') || Date.now()\r\n                  }).then( () => resolve( {success:true} ) )\r\n                  .catch( err => reject( err ) ) ;\r\n                } ).catch( err => resolve( {\r\n                  success:false\r\n                  ,status: 404\r\n                  ,err: err\r\n                } ) ) ;\r\n            } else {\r\n              resolve( {\r\n                success: false\r\n                ,status: 401 // 401 Bad Request\r\n                ,details: 'name already exists'\r\n              } )\r\n            }\r\n\r\n          } )\r\n          .catch( () => reject() ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,rnameAlbum( albumID , rname  ) {\r\n\r\n      return new Promise( ( resolve , reject ) => {\r\n\r\n        if(\r\n          !(albumID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          if( album.get('name') === rname ) {\r\n            resolve({\r\n              success: true\r\n            }) ;\r\n          }\r\n\r\n          refAlbum.set({\r\n            name: rname\r\n            ,createAt: album.get('createAt')\r\n            ,size: album.get('size')\r\n            ,user_id: album.get('user_id')\r\n          }).then( () => (\r\n            resolve( { success: true } )\r\n          ) ) ;\r\n\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ; \r\n    }\r\n    ,getAlbumsOf( userID ) {\r\n\r\n      return new Promise( ( resolve , reject ) => (\r\n          this.albums.get()\r\n            .then( QuerySnapshot => (\r\n              resolve( QuerySnapshot.docs.filter( doc => (\r\n                doc.get('user_id').trim() === userID.trim()\r\n              ) ) )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n      )  ) ;\r\n\r\n    }\r\n    ,removePicture: function( pictureID ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !pictureID ) return reject();\r\n\r\n        const refImg = this.pictures.doc( pictureID ) ;\r\n\r\n        if( !refImg || !( refImg.get instanceof Function ) ) return resolve({\r\n          status: 404,\r\n          success: false\r\n        });\r\n\r\n        refImg.get().then( pic => {\r\n\r\n          refImg.delete().then(() => { \r\n\r\n            this.albumDown( pic.get('album_id') ).then( () => {\r\n              resolve({\r\n                success: true\r\n              } )\r\n            } ).catch( err => reject( err ) ) ;\r\n          })\r\n          .catch( () => reject() ) ;\r\n        }) ;\r\n\r\n      });\r\n    }\r\n    ,removeAlbum: function(albumID) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !albumID ) reject({\r\n          status: 401\r\n          ,id: albumID\r\n        });\r\n        \r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        if( !refAlbum || !(refAlbum.get instanceof Function) )\r\n          reject( {\r\n            refAlbum: refAlbum\r\n            ,id: albumID\r\n            ,status: 404\r\n          } );\r\n\r\n        refAlbum.get().then( () => {\r\n            refAlbum.delete()\r\n              .then( () => {\r\n\r\n                this.getPictureOf( albumID ).then( pics => {\r\n\r\n                  pics.map( pic => (\r\n                      this.removePicture( pic.id )\r\n                 ) ) ;\r\n\r\n                  resolve({success: true});\r\n                }  ).catch( err => reject( err ) )\r\n\r\n              } )\r\n              .catch( err => reject( err ) )\r\n          } ).catch( err => reject( err ) )\r\n      } )\r\n    }\r\n  }\r\n;\r\n\r\nexport default collections;\r\n","export default {\r\n    apiKey: \"AIzaSyBTZQaxY4tK4wD1CFIAdZYoBNIFNXjpHZI\",\r\n    authDomain: \"picsy-827e5.firebaseapp.com\",\r\n    databaseURL: \"https://picsy-827e5.firebaseio.com\",\r\n    projectId: \"picsy-827e5\",\r\n    storageBucket: \"picsy-827e5.appspot.com\",\r\n    messagingSenderId: \"228973782937\",\r\n    appId: \"1:228973782937:web:8c6a64e32d37e3c8c7d508\"\r\n};","import React from 'react';\r\nimport './Loader.css';\r\nimport LoaderTime from './loader-timer.svg';\r\nimport LoaderEarth from './loader-earth.svg';\r\nimport LoaderBtn from './loader-button.svg';\r\nimport LoaderAzure from './loader-azure.svg';\r\n\r\nfunction assoceType( type ) {\r\n\r\n    const assoc = {\r\n        'timer': LoaderTime\r\n        ,'btn': LoaderBtn\r\n        ,'button': LoaderBtn\r\n        ,'earth': LoaderEarth\r\n        ,'azure': LoaderAzure\r\n        ,'az': LoaderAzure\r\n    } ;\r\n\r\n    return assoc[ type ] || LoaderTime ;\r\n}\r\n\r\nfunction Loader({\r\n    className\r\n    ,width\r\n    ,full\r\n    ,type\r\n    ,bg\r\n}){\r\n\r\n    return (\r\n        <figure\r\n            className={`Loader ${className} ${full ? 'full' :''}`}\r\n            style={{\r\n                backgroundColor: bg || 'transparent'\r\n            }}\r\n        >\r\n            <img\r\n                alt={`loader ${type}`}\r\n                src={assoceType( type )}\r\n                width={width}\r\n            />\r\n        </figure>\r\n    ) ;\r\n\r\n}\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport './Notif.css';\r\nimport ReactToolTip from 'react-tooltip' ;\r\n\r\nfunction assoceIconType( type ) {\r\n\r\n    const assoc = {\r\n        'warn': 'fas fa-exclamation-triangle'\r\n        ,'warning': 'fas fa-exclamation-triangle'\r\n        ,'error':'fas fa-bomb'\r\n        ,'infos': 'fas fa-info-circle'\r\n        ,'info': 'fas fa-info-circle'\r\n        ,'success': 'fas fa-check-circle'\r\n        ,'bug': 'fas fa-bug'\r\n        , 'mask': 'fas fa-mask' // it's unknow notif\r\n        , 'back': 'fas fa-hand-point-left'\r\n    } ;\r\n\r\n    return assoc[ type ] || assoc['mask'] ;\r\n}\r\n\r\nfunction Notif( {\r\n    type\r\n    ,className\r\n    ,onClose\r\n    ,text\r\n    ,tooltip\r\n    ,place\r\n    ,effect\r\n} ) {\r\n\r\n    const [refNotif] = useState( React.createRef() );\r\n    const [hide,setHide] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (\r\n                    tooltip ? \r\n                    (\r\n                        <ReactToolTip\r\n                            id={tooltip}\r\n                            type={(\r\n                                type === 'infos' ? \r\n                                'info' : type === 'bug' ?\r\n                                'error' : type === 'warn' ? \r\n                                'warning' : type\r\n                            )}\r\n                            getContent={() => (\r\n                                <span style={{\r\n                                    fontSize: \"16px\"\r\n                                    ,display: 'flex'\r\n                                    ,alignItems: 'center'\r\n                                    ,justifyContent: 'space-around'\r\n                                }}>\r\n                                    <i className={assoceIconType(type)}></i>\r\n                                    &nbsp;{text}\r\n                                </span>\r\n                            )}\r\n                            effect={effect || 'solid'}\r\n                            place={place || 'top'}\r\n                        />\r\n                    ) : (\r\n                        <section\r\n                            ref={refNotif}\r\n                            className={`Notif ${className} ${type} ${hide ? 'hide':''}`}\r\n                        >\r\n                            <p>\r\n                                <i className={assoceIconType(type)}></i>\r\n\r\n                                <span>\r\n                                    {text}\r\n                                </span>\r\n                            </p>\r\n\r\n                            {\r\n                                onClose instanceof Function && (\r\n                                    <aside>\r\n                                        <button\r\n                                            onClick={() => onClose( {\r\n                                                ref: refNotif\r\n                                                ,notif: refNotif.current\r\n                                                ,remove() {\r\n\r\n                                                    if( \r\n                                                        refNotif.current instanceof Node &&\r\n                                                        refNotif.current.parentNode instanceof Node\r\n                                                    ) {\r\n                                                    \r\n                                                        refNotif.current.parentNode.removeChild( refNotif.current );\r\n                                                        return true;\r\n                                                    }\r\n                                                    return false;\r\n                                                }\r\n                                                ,hide() {\r\n                                                    setHide( true );\r\n                                                }\r\n                                            })}\r\n                                        >\r\n                                            <i className=\"fas fa-times\"></i>\r\n                                        </button>\r\n                                    </aside>\r\n                                )\r\n                            }    \r\n                        </section>\r\n                    )\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notif;","import React from 'react';\r\n\r\nfunction InputFile({\r\n    className\r\n    ,label\r\n    ,name\r\n    ,id\r\n    ,onChange\r\n    ,autoRead\r\n    ,notif\r\n}){\r\n    return (\r\n        <>\r\n            {label && (\r\n                <label htmlFor={id || name}>\r\n                    {label}\r\n                </label>\r\n            ) }\r\n            <input\r\n                className={className}\r\n                type=\"file\"\r\n                name={name}\r\n                id={id || name}\r\n                onChange={e => {\r\n\r\n                    if( !(onChange instanceof Function) ) return;\r\n\r\n                    const file = e.target.files[0] ;\r\n                    \r\n                    if( autoRead ) {\r\n\r\n                        let blob = null;\r\n\r\n                        const reader = new FileReader();\r\n                        const evt = e;\r\n\r\n                        reader.addEventListener('load' , e => {\r\n\r\n                            blob = e.target.result;\r\n                            onChange( file , blob , evt ) ;\r\n                        } ) ;\r\n\r\n                        reader.readAsDataURL( file );\r\n                    } else {\r\n\r\n                        onChange( file , e ) ;\r\n                    }\r\n                }}\r\n            />\r\n            {notif}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputFile;","import React from 'react';\r\nimport './SignIn.css';\r\nimport Notif from './../Notif/Notif';\r\n\r\nfunction SignIn() {\r\n    return (\r\n        <>\r\n            <Notif\r\n                type=\"info\"\r\n                text=\"dépot github\"\r\n                place=\"top\"\r\n                tooltip=\"git-link\"\r\n            />\r\n        \r\n            <p className=\"sign-in\">\r\n                <span>Application front UI/UX</span>\r\n                &nbsp;développer <span>avec le CRA de Reactjs&nbsp;</span>\r\n                par\r\n                &nbsp;<a data-for=\"git-link\" data-tip=\"lien github\" href=\"https://github.com/Orivoir/picsy\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                        &nbsp;Samuel Gaborieau\r\n                </a>\r\n            </p>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport SignIn from './../SignIn/SignIn';\r\nimport './FormUser.css';\r\n\r\nexport default class FormUser extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            onSubmit\r\n            ,onChangeAvatar\r\n            ,onChangePseudo\r\n            ,valuePseudo\r\n            ,fileName\r\n            ,avatar\r\n            ,loaderSubmit\r\n            ,errors\r\n        } = this.props;\r\n\r\n        return (\r\n            <form\r\n                className=\"FormUser\"\r\n                onSubmit={onSubmit}\r\n            >\r\n                <section>\r\n                    <div className=\"field-wrap-pseudo\">\r\n                        <input\r\n                            placeholder=\"pseudo\"\r\n                            type=\"text\" \r\n                            name=\"pseudo\"\r\n                            autoComplete=\"off\" \r\n                            onChange={onChangePseudo}\r\n                            value={valuePseudo}\r\n                        />\r\n                        <label \r\n                            htmlFor=\"pseudo\" \r\n                            className={`o-hide ${valuePseudo.trim().length ? 'active':''}`}\r\n                        >\r\n                            pseudo\r\n                        </label>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <InputFile\r\n                            className=\"hide\"\r\n                            label={\r\n                                <>\r\n                                    <span className=\"hide micro-system\">\r\n                                        {\r\n                                            fileName ?\r\n                                                fileName.length > 7 ?\r\n                                                fileName.slice( 0 , 7 ) + ' ...' :\r\n                                                fileName :\r\n                                                'avatar'\r\n                                        }\r\n                                    </span>\r\n                                    <figure>\r\n                                        <button \r\n                                            type=\"button\"\r\n                                            onClick={e => {\r\n                                                e.target.parentNode.click();\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={avatar}\r\n                                                alt=\"avatar\"\r\n                                                width={64}\r\n                                            />\r\n                                        </button>\r\n                                        <figcaption>\r\n                                            changer\r\n                                        </figcaption>\r\n                                    </figure>\r\n                                </>\r\n                            }\r\n                            name=\"avatar\"\r\n                            autoRead\r\n                            onChange={onChangeAvatar}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">\r\n                        {loaderSubmit || 'suivant'}\r\n                    </button>\r\n                </section>\r\n            \r\n                <SignIn />\r\n\r\n                {errors.map( error => (\r\n                        error\r\n                ) )}\r\n\r\n            </form>\r\n        ) ;\r\n\r\n    }\r\n\r\n} ;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './Logged.css' ;\r\n\r\nexport default class Logged extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader full type=\"az\" width={256} bg=\"rgba(0,0,0,.93)\" />\r\n        ,u: false\r\n        ,redirect: false\r\n        ,pseudo: \"\"\r\n        ,avatar: Logged.defaultAvatar\r\n        ,errors: []\r\n        ,loaderButton: false\r\n        ,fileName: \"\"\r\n    } ;\r\n\r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n\r\n        this.avatarChange = this.avatarChange.bind( this );\r\n        this.onSubmit = this.onSubmit.bind( this );\r\n\r\n        document.title = 'Picsy | Log in';\r\n    }\r\n\r\n    /**\r\n     * @bind [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onSubmit( e ) {\r\n\r\n        e.preventDefault();\r\n\r\n        const {pseudo} = this.state;\r\n\r\n        if(\r\n            !(pseudo.length >= 2 &&\r\n            pseudo.length <=40)\r\n        ) {\r\n            this.setState(state => ( {\r\n                errors: [ ...state.errors, <Notif\r\n                    key={Date.now()} \r\n                    text=\"pseudo taille invalide\"\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) ) ;\r\n        } else{\r\n\r\n            const {avatar} = this.state;\r\n\r\n            this.setState( {\r\n                loaderButton: <Loader width={16} type=\"btn\" />\r\n            } , () => {\r\n\r\n                this.props.db.users.add( {\r\n                    pseudo: pseudo\r\n                    ,avatar: avatar\r\n                } ).then( data => {\r\n\r\n                    if( !this.userID )\r\n                        this.userID = [];\r\n\r\n                    this.userID.push(data.id);\r\n\r\n                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                    this.setState( {\r\n                        redirect: <Redirect to=\"/account-list\" />\r\n                    } ) ;\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @bind [constructor]\r\n     * @param {File} file \r\n     * @param {string} blob \r\n     * @param {SyntheticEvent} e \r\n     */\r\n    avatarChange( file, blob , e ) {\r\n\r\n        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n            this.setState( {\r\n                avatar: blob\r\n                ,fileName: file.name\r\n            } ) ;\r\n            \r\n        } else {\r\n            \r\n            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n            \r\n            this.setState( state => ( {\r\n                errors: [ ...state.errors , <Notif\r\n                    key={Date.now()} \r\n                    text={mssg}\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID || !this.userID.length ) {\r\n            this.setState( {\r\n                loader: false \r\n            } ) ;\r\n        } else {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/account-list\" />\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader\r\n            ,redirect\r\n            ,avatar\r\n            ,errors\r\n            ,loaderButton\r\n            ,fileName\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"Logged\"\r\n            >\r\n                {loader}\r\n                {redirect}\r\n\r\n                <FormUser\r\n                    onSubmit={this.onSubmit}\r\n                    onChangePseudo={e => (\r\n                        this.setState({pseudo:e.target.value.trim()})\r\n                    )}\r\n                    avatar={avatar}\r\n                    valuePseudo={this.state.pseudo}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    loaderSubmit={loaderButton}\r\n                    onChangeAvatar={(file,blob,e) => (\r\n                        this.avatarChange(file,blob,e)\r\n                    )}\r\n                />\r\n\r\n                <section className=\"banner-sm-screen hide\">\r\n\r\n                        <p>\r\n                            Picsy et Lorem dolore veniam culpa velit sint ,\r\n                            Anim cupidatat mollit consequat et ipsum ipsum eu ullamco eu ullamco elit non.\r\n                        </p>\r\n\r\n                        <button type=\"button\">\r\n                            get started\r\n                        </button>\r\n                </section>\r\n\r\n            </section>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nfunction Title({\r\n    title,\r\n    subtitle,\r\n    className\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            <h1 className={className}>{title}</h1>\r\n            {(\r\n                subtitle && (\r\n                    <blockquote>\r\n                        {subtitle}\r\n                    </blockquote>\r\n                )\r\n            )}\r\n        </>\r\n    ) ;\r\n\r\n}\r\n\r\nexport default Title;","import React,{useState} from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nfunction Icons({\r\n    tooltip,\r\n    className,\r\n    target,\r\n    onClick,\r\n    classHandle,\r\n    loader,\r\n    textAlt,\r\n    text,\r\n    alt\r\n}) {\r\n\r\n    const [focus , setFocus] = useState( false ) ; \r\n    const [redirect , setRedirect] = useState( false ) ; \r\n\r\n    return (\r\n        <>\r\n            {tooltip}\r\n            <span\r\n                data-for={tooltip.props.tooltip}\r\n                id={tooltip.props.tooltip}\r\n                data-tip={tooltip.props.text}\r\n            >\r\n\r\n            {redirect}\r\n\r\n            {\r\n                target ? (\r\n                    <Link\r\n                        style={{\r\n                            transition: '.11s linear all'\r\n                        }}\r\n                        onFocus={() => {\r\n                            setFocus(true);\r\n                        }}\r\n                        onBlur={() => {\r\n                            setFocus(false);\r\n                        }}\r\n                        to={target} \r\n                        onPointerDown={onClick instanceof Function ? onClick : () => {\r\n                            setRedirect( <Redirect to={target} /> );\r\n\r\n                        }}\r\n                        className={`${classHandle} ${focus ? 'access-focus' : ''}`}\r\n                    >\r\n                        {\r\n                            loader || (\r\n                                (\r\n                                    focus ?\r\n                                        textAlt || text || alt || 'here'\r\n                                    :\r\n                                    <i className={className}></i>\r\n                                )\r\n                            )\r\n                        }\r\n                    </Link>\r\n                ) : (\r\n                    <button\r\n                        type=\"button\"\r\n                        className={classHandle}\r\n                        onClick={onClick instanceof Function ? onClick : () => {}}\r\n                    >\r\n                        {\r\n                            loader || (\r\n                                (\r\n                                    focus ?\r\n                                        textAlt || text || alt || 'here'\r\n                                    :\r\n                                    <i className={className}></i>\r\n                                )\r\n                            )\r\n                        }\r\n                    </button>\r\n                )\r\n            }\r\n\r\n            </span>\r\n\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default Icons ;","import React from 'react';\r\nimport Notif from './Notif/Notif';\r\n\r\nconst icons = {\r\n    User: [{\r\n        id: 0,\r\n        alt:\"ajouté compte\",\r\n        tooltip:\r\n            <Notif\r\n                type=\"info\"\r\n                place=\"bottom\"\r\n                tooltip=\"user\"\r\n                text=\"ajouté un compte\"\r\n            />\r\n        ,\r\n        target:\"/add-account\",\r\n        className:\"fas fa-user-plus\"\r\n    } , {\r\n        id: 1,\r\n        alt: \"changé compte\",\r\n        tooltip:\r\n            <Notif\r\n                type=\"info\"\r\n                place=\"bottom\"\r\n                tooltip=\"change\"\r\n                text=\"changé de compte\"\r\n            />\r\n        ,\r\n        target:\"/account-list\",\r\n        className:\"fas fa-person-booth\"\r\n    }] ,\r\n    ChangeAlign: [\r\n        {\r\n            id: 0,\r\n            alt:\"gallerie alignement\",\r\n            tooltip:\r\n                <Notif\r\n                    type=\"info\"\r\n                    place=\"top\"\r\n                    tooltip=\"gallery\"\r\n                    text=\"gallerie alignement\"\r\n                />\r\n            ,\r\n            className:\"fas fa-th\",\r\n            onClick: setter => (\r\n                setter( false )\r\n            )\r\n        } ,\r\n        {\r\n            id: 1,\r\n            alt:\"diaporama alignement\",\r\n            tooltip:\r\n                <Notif\r\n                    type=\"info\"\r\n                    place=\"top\"\r\n                    tooltip=\"slider\"\r\n                    text=\"diaporama alignement\"\r\n                />\r\n            ,\r\n            className:\"fas fa-sliders-h\",\r\n            onClick: setter => (\r\n                setter( true )\r\n            )\r\n        } ,\r\n    ]\r\n} ;\r\n\r\nconst iconsUser = icons.User ;\r\nconst iconsChangeAlign = icons.ChangeAlign ;\r\n\r\nexport { iconsUser,iconsChangeAlign } ;","import React from 'react';\r\nimport './User.css';\r\nimport Title from './../Title/Title';\r\nimport SignIn from './../SignIn/SignIn';\r\nimport Icons from './../Icons/Icons';\r\nimport {iconsUser as icons} from './../icons';\r\n\r\nfunction User({\r\n    u,load\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"User\">\r\n                {load || (\r\n                    <>\r\n                        <Title\r\n                            title={<><strong>Picsy</strong> application</>}\r\n                            subtitle=\"version 0.2.3-beta\"\r\n                        />\r\n                    \r\n                        <div className=\"content-user\">\r\n                            <figure>\r\n                                <img\r\n                                    src={u.get('avatar')}\r\n                                    alt=\"avatar\"\r\n                                    width=\"125\"\r\n                                />\r\n                                <figcaption>\r\n                                    {u.get('pseudo')}\r\n                                </figcaption>\r\n                            </figure>\r\n\r\n                            {\r\n                                icons.map( icon => (\r\n                                    <Icons\r\n                                        alt={icon.alt}\r\n                                        key={icon.id}\r\n                                        tooltip={icon.tooltip}\r\n                                        target={icon.target}\r\n                                        className={icon.className}                                        \r\n                                    />\r\n                                ) )\r\n                            }\r\n                        </div>\r\n                      \r\n                        <SignIn />\r\n                    </>\r\n                )}\r\n            </section>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default User;","import React,{useEffect} from 'react';\r\nimport './Confirm.css'\r\n\r\nconst \r\n    confirmRef = React.createRef()\r\n    ,btnsRef = {\r\n        confirm: React.createRef()\r\n        ,cacel: React.createRef()\r\n    }\r\n    , dataBack = {\r\n        ref: confirmRef,\r\n        confirm: confirmRef.current\r\n    }\r\n;\r\n\r\nfunction Confirm({\r\n    onConfirm,\r\n    onCancel,\r\n    onFinally,\r\n    textConfirm,\r\n    textCancel,\r\n    textGlobal,\r\n    text,\r\n    className,\r\n    autoFocus,\r\n    autoFocusCancel,\r\n    autoFocusConfirm,\r\n    icons,\r\n    title\r\n}) {\r\n\r\n    useEffect( () => {\r\n        if(autoFocusCancel) {\r\n            btnsRef.cancel.current.focus() ;\r\n        } else if( autoFocusConfirm || autoFocus ) {   \r\n            btnsRef.confirm.current.focus() ;\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <section\r\n            className={`Confirm ${className}`}\r\n            ref={confirmRef}\r\n        >\r\n            {( title && <h2>{title}</h2> )}\r\n\r\n            <p>\r\n                {textGlobal || text}\r\n            </p>\r\n\r\n            <aside>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"confirm\"\r\n                    onClick={() => {\r\n                        const\r\n                            conf = onConfirm instanceof Function ? onConfirm: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n\r\n                        conf( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                    ref={btnsRef.confirm}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-check\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textConfirm}\r\n                    </span>\r\n                </button>\r\n                \r\n                <button\r\n                    className=\"cancel\"\r\n                    ref={btnsRef.cancel}\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n\r\n                        const\r\n                            cancel = onCancel instanceof Function ? onCancel: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n                        cancel( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-times\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textCancel}\r\n                    </span>\r\n                </button>\r\n            </aside>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Confirm;\r\n","import React,{useState,useEffect} from 'react';\r\nimport Confirm from './../Confirm/Confirm';\r\nimport './ControlItem.css';\r\nimport Icons from './../Icons/Icons';\r\nimport Notif from './../Notif/Notif';\r\n\r\nfunction ControlItem({\r\n    manualOpen,\r\n    open,\r\n    onClose,\r\n    onRemove,\r\n    onRname,\r\n    loadRname,\r\n    pic,\r\n    errorsRname,\r\n    onOpen,\r\n    itemType,\r\n    closer,\r\n    tipRemove\r\n}) {\r\n\r\n    const [confirm,setConfirm] = useState(false);\r\n    const [inputRname,setInputRname] = useState(false);\r\n    const [rname,setRname] = useState(\"\");\r\n    const [firstControl] = useState( React.createRef() );\r\n    const [rnameRef] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( open && !confirm )\r\n            setTimeout(() => {\r\n                if( firstControl.current )\r\n                firstControl.current.focus()\r\n            } , 250);\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <ul\r\n            className={`ControlItem`}\r\n            onMouseEnter={() => onOpen instanceof Function ? onOpen(): null}\r\n            onMouseLeave={() => {\r\n                if( !manualOpen && onClose instanceof Function) {\r\n                    onClose();\r\n                }\r\n            }}\r\n        >\r\n            <li\r\n                className={`${open && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n\r\n                <Icons\r\n                    tooltip={(\r\n                        <Notif\r\n                            type=\"info\"\r\n                            place=\"top\"\r\n                            tooltip={`rname-${Date.now()}`}\r\n                            text={(\r\n                                <>\r\n                                    renomé l'\r\n                                    {itemType !== 'album' ? 'image': 'album'}\r\n                                </>\r\n                            )}\r\n                        />\r\n                    )}\r\n                    className=\"fas fa-pen\"\r\n                    onClick={() => {\r\n                        setInputRname(true);\r\n                        setTimeout(() => \r\n                            rnameRef.current.focus(), 120\r\n                        );\r\n                    }}\r\n                    classHandle={`${inputRname ? 'hide':''}`}\r\n                />\r\n                \r\n                <form\r\n                        className={`${inputRname ? '':'close'}`}\r\n                        onSubmit={e => {\r\n                            e.preventDefault();\r\n                            onRname( rname );\r\n                            setRname( '' );\r\n                        }}\r\n                    >\r\n\r\n                        <input\r\n                            ref={rnameRef}\r\n                            className={`input-rname rname ${!inputRname ? 'hide':'open'} ${loadRname ? 'load-input': ''}`}\r\n                            type=\"text\"\r\n                            name=\"rname\"\r\n                            value={rname}\r\n                            onChange={e => setRname( e.target.value )}\r\n                            autoComplete=\"off\"\r\n                            placeholder={pic.get('name')}\r\n                            disabled={!!loadRname}\r\n                        />\r\n \r\n                        <Icons\r\n                            tooltip={(\r\n                                <Notif\r\n                                    type=\"info\"\r\n                                    place=\"top\"\r\n                                    tooltip=\"back\"\r\n                                    text=\"fermé\"\r\n                                />\r\n                            )}\r\n                            loader={loadRname}\r\n                            className=\"fas fa-times\"\r\n                            onClick={() => setInputRname(false)}\r\n                            classHandle={`rname-btn ${inputRname ? '':'hide'} ${loadRname ? 'load-btn disabled': ''}`}\r\n                        />\r\n\r\n                        {\r\n                            errorsRname.map( error => (\r\n                                error\r\n                            )  )\r\n                        }\r\n\r\n                </form>\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname ? \"\":\"hide\"}`}\r\n            >\r\n                {\r\n\r\n                    confirm || (\r\n                        <>\r\n                            <Icons\r\n                                tooltip={(\r\n                                    <Notif\r\n                                        type=\"info\"\r\n                                        place=\"top\"\r\n                                        tooltip=\"remove\"\r\n                                        text={(\r\n                                            <>\r\n                                                {\r\n                                                    tipRemove || (\r\n                                                        <>\r\n                                                            supprimé l'\r\n                                                            {itemType !== 'album' ? 'image': 'album'}\r\n                                                        </>\r\n                                                    )\r\n                                                }\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                className=\"fas fa-trash\"\r\n                                onClick={() => (\r\n                                    setConfirm(\r\n                                        <Confirm\r\n                                            onConfirm={onRemove}\r\n                                            onFinally={() => setConfirm( false )}\r\n                                            text={`êtes vous sur de vouloir supprimez l'${itemType} ${pic.get('name')}`}\r\n                                            textConfirm=\"oui\"\r\n                                            textCancel=\"non\"\r\n                                            className=\"confirm-remove confirm-remove-picture\"\r\n                                            icons\r\n                                            autoFocus\r\n                                    />)\r\n                                )}\r\n                            />\r\n                        </>       \r\n                    )\r\n                }\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname && closer && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n                \r\n                \r\n                <Icons\r\n                    tooltip={(\r\n                        <Notif\r\n                            type=\"info\"\r\n                            place=\"top\"\r\n                            tooltip=\"close\"\r\n                            text=\"férmer le menu\"\r\n                        />\r\n                    )}\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => onClose instanceof Function ? onClose(): null}\r\n                />\r\n            </li>\r\n        </ul>\r\n    ) ;\r\n}\r\n\r\nexport default ControlItem;","import React,{useState,useEffect} from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './ItemAlbum.css';\r\n\r\nconst\r\n    btnLinkRef = React.createRef()\r\n;\r\n\r\nfunction getSizeOf( albumID , db ) {\r\n\r\n    return new Promise( ( resolve , reject ) => {\r\n        db.getPictureOf( albumID ).then( docs => resolve( docs.length )  )  ;\r\n    } ) ;\r\n\r\n}\r\n\r\nfunction ItemAlbum({\r\n    item,\r\n    db\r\n}) {\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [name,setName] = useState( item.get('name') );\r\n    const [manualControl,setManualControl] = useState( false );\r\n    const [redirect,setRedirect] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [refItem] = useState(React.createRef());\r\n    const [size,setSize] = useState( null ) ;\r\n\r\n    useEffect( () => {\r\n        \r\n        if( size === null )\r\n            getSizeOf( item.id , db ).then( l => setSize( l || 0 ) )\r\n    } ) ;\r\n\r\n    return (\r\n        <>\r\n            {redirect}\r\n            { visible && (\r\n                <li\r\n                    onMouseEnter={() => setControl(true)}\r\n                    onMouseLeave={() => setControl(false)}\r\n                    className={`AlbumItem ${visible ? '':'hide'}`}\r\n                    ref={refItem}\r\n                >\r\n                    <div className=\"number-item\">\r\n                        {(\r\n                            size === null ?\r\n                                <Loader width={32} type=\"az\" />\r\n                                : size\r\n                        )} images\r\n                    </div>\r\n                    <button\r\n                        className=\"album-btn\"\r\n                        ref={btnLinkRef}\r\n                        onKeyDown={e => {\r\n                            if( /menu/i.test(e.key) )\r\n                                setControl( !control );\r\n                                setManualControl( !control );\r\n                        } }\r\n                        onClick={() => setRedirect( <Redirect to={`album/${item.id}`} /> )}\r\n                        onContextMenu={e => e.preventDefault()}\r\n                    >\r\n                        <Link\r\n                            onPointerUp={e => {\r\n                                if(e.nativeEvent.which === 3 ) {\r\n\r\n                                    setControl(true);\r\n                                    setManualControl( true );\r\n                                }\r\n                            }}\r\n                            to={`album/${item.id}`}\r\n                        >\r\n                            {name}\r\n                        </Link>\r\n                </button>\r\n\r\n                <section>\r\n\r\n                    <aside>      \r\n                        <ControlItem\r\n                            tipRemove=\"abc\"\r\n                            itemType=\"album\"\r\n                            onRemove={() => {\r\n                                db.removeAlbum( item.id ).then( () => {\r\n                                    setVisible( false );\r\n                                    setControl( false );\r\n                                } )\r\n                            }}\r\n                            manualOpen={manualControl}\r\n                            onOpen={() => setControl( true )}\r\n                            onRname={rname => {\r\n                                setLoadRname( <Loader \r\n                                    width={12}\r\n                                    type=\"azure\"\r\n                                /> ) ;\r\n\r\n                                db.rnameAlbum( \r\n                                    item.id\r\n                                    ,rname\r\n                                ).then( () => {\r\n                                \r\n                                    // success\r\n                                    setErrors(\r\n                                        [...errors , <Notif\r\n                                            onClose={({remove}) => remove()} \r\n                                            key={Date.now()}\r\n                                            text=\"l'album à été renomé avec succés\"\r\n                                            type=\"success\"\r\n                                        />]\r\n                                    ) ;\r\n                                    setName( rname );\r\n                                } );\r\n                            }}\r\n                            loadRname={loadRname}\r\n                            onClose={() => {/* silence is <feature /> */}}\r\n                            pic={item}\r\n                            open={control}\r\n                            errorsRname={errors}\r\n                        />\r\n                        \r\n                    </aside>\r\n                </section>\r\n            </li>\r\n        ) }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemAlbum;","import React from 'react';\r\nimport './ListAlbums.css';\r\nimport ItemAlbum from './ItemAlbum';\r\nimport Notif from '../Notif/Notif';\r\nimport './ListAlbums.css';\r\n\r\nfunction ListAlbums({albums,load,db,onChangeAlbums}) {\r\n    return (\r\n        <>\r\n            <ul className=\"ListAlbums list\">\r\n                {\r\n                    load || (\r\n                        albums.length ?\r\n                        <>\r\n                            {albums.map( item => (\r\n                                <ItemAlbum\r\n                                    item={item}\r\n                                    key={item.id}\r\n                                    db={db}\r\n                                /> )\r\n                            )}\r\n                        </>\r\n                        : (\r\n                            <Notif\r\n                                type=\"infos\"\r\n                                text=\"vous n'avez aucun albums\"\r\n                            />\r\n                        )\r\n                        \r\n                    )\r\n                }\r\n            </ul>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ListAlbums;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport User from './../../core/User/User';\r\nimport Icons from './../../core/Icons/Icons';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport ListAlbums from '../../core/ListAlbulms/ListAlbums';\r\nimport './Dash.css';\r\n\r\nexport default class Dash extends React.Component {\r\n\r\n    state = {\r\n\r\n        loader: {\r\n            u: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" /> ,\r\n            albums: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" />\r\n        } ,\r\n        u: null,\r\n        albums: [],\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID') ;\r\n\r\n        document.title = 'Picsy | Dash';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.getAlbums();\r\n            \r\n        }\r\n    }\r\n\r\n    getAlbums() {\r\n        \r\n        this.props.db.getUser( this.userID )\r\n        .then( user => {\r\n\r\n            if( user ) {\r\n                this.setState( state => ({\r\n                    loader: { u: false, albums: state.loader.albums }\r\n                    ,u: user \r\n                } ) , () => {\r\n\r\n                    this.props.db.getAlbumsOf( user.id ).then( docs => {\r\n\r\n\r\n                        this.setState( {\r\n                            loader : { albums: false  },\r\n                            albums: docs\r\n                        })\r\n                    } )\r\n\r\n                }  ) ;\r\n                \r\n            } else {\r\n                this.setState( {\r\n                    redirect: <Redirect to=\"/\" />\r\n                } ) ;\r\n            }\r\n        } ) ;\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader,\r\n            redirect,\r\n            albums,\r\n            u\r\n        } = this.state ;\r\n\r\n        return(\r\n            <section\r\n                className=\"Dash\"\r\n            >\r\n                {redirect}\r\n\r\n                <User \r\n                    u={u}\r\n                    load={loader.u} \r\n                />\r\n\r\n                 \r\n                <ListAlbums\r\n                    db={this.props.db}\r\n                    albums={albums} \r\n                    load={loader.albums}\r\n                    onChangeAlbums={() => this.getAlbums()}\r\n                />\r\n                <aside className=\"add-album\">\r\n                    <Icons\r\n                        alt=\"ajouté album\"\r\n                        tooltip={(\r\n                            <Notif\r\n                                tooltip=\"add-album\"\r\n                                type=\"infos\"\r\n                                text=\"créé un album\"\r\n                                place=\"top\"\r\n                            />\r\n                        )}\r\n                        className=\"fas fa-folder-plus\"\r\n                        target=\"/add-album\"\r\n                    />\r\n                </aside>\r\n\r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport Notif from './../Notif/Notif'; \r\nimport './FormAdd.css';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst defaultPicture = \"https://image0.flaticon.com/icons/png/128/189/189334.png\";\r\n\r\nfunction FormAdd({type,onSubmit,load,className,onChange,imgsLength,autoFocus}){\r\n\r\n    const [picture,setPicture] = useState(\"\");\r\n    const [errors,setErrors] = useState([]);\r\n    const [name,setName] = useState(\"\");\r\n    const [refName] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( refName.current instanceof Node ) {\r\n            // here physical DOM is ok\r\n            \r\n            if( autoFocus ) {\r\n                refName.current.focus();\r\n            }\r\n        }\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <>\r\n            <form\r\n            className={`FormAdd ${className}`}\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n\r\n                const data = {\r\n                    name: name\r\n                    ,picture: picture || defaultPicture\r\n                    ,refName: refName\r\n                    ,e: e\r\n                } ;\r\n\r\n                setName('') ;\r\n\r\n                if( /album/i.test(type) )\r\n                    delete data.picture;\r\n\r\n                onSubmit( data );\r\n            }}\r\n        >\r\n\r\n            <div className=\"field-wrap-pseudo\">\r\n                <input\r\n                    ref={refName}\r\n                    type=\"text\"\r\n                    value={name}\r\n                    placeholder={`nom de l'${!/album/i.test(type) ? 'image':'album' }`}\r\n                    autoComplete=\"off\"\r\n                    onChange={({target}) => setName( target.value ) }\r\n                />\r\n                <label \r\n                    htmlFor=\"name\"\r\n                    className={`${!!name.length ? 'active':'o-hide'}`}\r\n                >\r\n                    nom d'{!/album/i.test(type) ? 'image':'album' }\r\n                </label>\r\n            </div>\r\n\r\n            {\r\n                !/album/i.test(type) ?\r\n                <InputFile\r\n                    className=\"hide\"\r\n                    name=\"picture\"\r\n                    label={\r\n                        <>\r\n                            <Notif\r\n                                tooltip=\"add-picture\"\r\n                                type=\"info\"\r\n                                text=\"ajouté une image\"\r\n                                place=\"top\"\r\n                            />\r\n                            <figure\r\n                                data-tip=\"ajouté une image\"\r\n                                data-for=\"add-picture\"\r\n                            >\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={e =>  e.target.parentNode.click()}\r\n                                >\r\n                                    <img\r\n                                        src={defaultPicture}\r\n                                        alt=\"ajouté\"\r\n                                        width={64}\r\n                                    />\r\n                                </button>\r\n                            </figure>\r\n                        </>\r\n                    }\r\n                    autoRead\r\n                    onChange={(file,blob,e) => {\r\n                        if(\r\n                            file.size <= 1e6 &&\r\n                            /image/i.test(file.type)\r\n                        ) {\r\n                            setPicture( blob );\r\n\r\n                            ( onChange => {\r\n                                setName( '' );\r\n                                onChange( file , blob , name , refName );\r\n                            } )( onChange instanceof Function ? onChange : () => {} ) ;\r\n\r\n                        } else {\r\n\r\n                            const mssg = file.size > 1e6 ? \r\n                                \"fichier trop volumineux\":\r\n                                \"ce fichier n'est pas une image valide\"\r\n                            ;\r\n                            \r\n                            setErrors( [...errors , \r\n                                <Notif\r\n                                    key={Date.now()} \r\n                                    type=\"error\"\r\n                                    text={mssg}\r\n                                    onClose={({remove}) => remove()}\r\n                                />\r\n                            ] ) ;\r\n                        }\r\n                    }}\r\n                />\r\n                : null\r\n            }\r\n\r\n            <Notif\r\n                tooltip=\"disabled\"\r\n                type=\"warn\"\r\n                text=\"chargement ...\"\r\n            />\r\n            <button\r\n                type='submit'\r\n                disabled={!!load}\r\n                className={!!load ? 'disabled':''}\r\n                data-for={!!load ? 'disabled':''}\r\n                data-tip=\"chargement ...\"\r\n            >\r\n                {\r\n                    load || (\r\n                        <span>\r\n                            ajouté {!/album/i.test(type) ? (imgsLength+' images') : '\\'album'}\r\n                        </span>\r\n                    )\r\n                }\r\n                \r\n            </button>\r\n\r\n        </form>\r\n        {errors.map( error => error )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default FormAdd;","import React from 'react';\r\nimport './ImgFilter.css';\r\n\r\nconst buildFilter = filters => {\r\n\r\n    if( !(filters instanceof Array) ) return '';\r\n\r\n    let styles = '';\r\n\r\n    filters.forEach( filter => {\r\n\r\n        try {\r\n\r\n            let f = null;\r\n\r\n            if( typeof filter === 'string' ) {\r\n\r\n                f = JSON.parse( filter ) ;\r\n            } else {\r\n                f = filter;\r\n            }\r\n\r\n            if( !(f.key && f.val) ) return;\r\n            \r\n            if( /%/.test(f.val) && /hue/.test(f.key) ) {\r\n                f.val = f.val.replace('%' , 'deg' );\r\n            }\r\n\r\n            if( \r\n\r\n                f.key === 'hueRotate'\r\n                ) {\r\n                 f.key = 'hue-rotate';\r\n                 \r\n             }\r\n\r\n            styles += `${f.key}(${f.val}) `;\r\n            \r\n        } catch( SyntaxError ) {/* Silence is <feature /> */}\r\n        \r\n    } ) ;\r\n    return styles;\r\n} ;\r\n\r\nfunction ImgFilter( {\r\n    pics,\r\n    load,\r\n    figcaption,\r\n    width,\r\n    classFig\r\n} ) {\r\n\r\n    return (\r\n        <figure\r\n            className=\"ImgFilter\"\r\n        >\r\n            {load || (\r\n                <>\r\n                \r\n                    {figcaption && (\r\n                        <figcaption className={classFig}>\r\n                            {figcaption}\r\n                        </figcaption>\r\n                    )}\r\n                    <img\r\n                        src={pics.get('blob')}\r\n                        alt={pics.get('name')}\r\n                        style={{\r\n                            filter: buildFilter( pics.get('filters') )\r\n                        }}\r\n                        width={width || 300}\r\n                    />\r\n                </>\r\n            )}\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default ImgFilter;\r\n","import React,{useState} from 'react';\r\nimport ImgFilter from './../ImgFilter/ImgFilter';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport './ItemImg.css';\r\n// import ReactToolTip from 'react-tooltip';\r\n\r\nfunction ItemImg({item,db,even}) {\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [btnNav] = useState( React.createRef() );\r\n    const [manualControl,setManualControl] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            { visible && (\r\n                <li\r\n                    onMouseEnter={() => btnNav.current.classList.remove('hide')}\r\n                    onMouseLeave={() => btnNav.current.classList.add('hide')}\r\n                    className={`ItemImg ${visible ? '':'hide'} ${even ? 'even':''}`}\r\n                >\r\n                    <Link\r\n                        className=\"link-filter\"\r\n                        to={`/filter/${item.id}`}\r\n                        onContextMenu={e => e.preventDefault()}\r\n                        onPointerDown={e => {\r\n                            if( e.nativeEvent.which === 3 ) {\r\n                                setControl( !control );\r\n                            }\r\n                        }}\r\n                        onKeyDown={e => {\r\n                            if( /menu/i.test(e.key) ) {\r\n\r\n                                setControl( !control );\r\n                            }\r\n                        }}\r\n                    >\r\n                        \r\n                        <Notif\r\n                            tooltip=\"nav\"\r\n                            type=\"info\"\r\n                            text={`${!control ? 'ouvrir':'fermer'} menu`}\r\n                            place=\"top\"\r\n                        />\r\n                        <ImgFilter\r\n                            pics={item}\r\n                            figcaption={\r\n                                <div\r\n                                    \r\n                                    data-for=\"nav\"\r\n                                    data-tip=\"menu\"\r\n                                    className=\"status-control\"\r\n                                >\r\n\r\n                                    <button\r\n                                        ref={btnNav}\r\n                                        className=\"hide\"\r\n\r\n                                        onClick={e => {\r\n                                            e.preventDefault();\r\n                                            \r\n                                            setManualControl( !control );\r\n                                            setControl(!control);\r\n                                        }}\r\n                                    >\r\n                                        <i className={!control ? \"fas fa-ellipsis-v\":\"fas fa-times\"}></i>\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            classFig=\"fig-picsy\"\r\n                        />\r\n                    </Link>\r\n\r\n                    <ControlItem\r\n                        closer\r\n                        itemType=\"image\"\r\n                        onRemove={() => {\r\n                            db.removePicture( item.id ).then( () => {\r\n                                setVisible( false );   \r\n                                setControl( false );\r\n                            } )\r\n                        }}\r\n                        manualOpen={manualControl}\r\n                        onOpen={() => setControl( true )}\r\n                        onRname={rname => {\r\n                            setLoadRname( <Loader \r\n                                width={12}\r\n                                type=\"azure\"\r\n                            /> ) ;\r\n\r\n                            db.rnameImg(\r\n                                item.id,\r\n                                rname,\r\n                                item.get('album_id')\r\n                            ).then( resp => {\r\n\r\n                                setLoadRname( false );\r\n\r\n                                if( resp.success ) {\r\n\r\n                                    // success\r\n                                    setErrors(\r\n                                        [...errors , <Notif\r\n                                            onClose={({remove}) => remove()} \r\n                                            key={Date.now()}\r\n                                            text=\"image à été renomé avec succés\"\r\n                                            type=\"success\"        \r\n                                        />]\r\n                                    ) ;\r\n\r\n                                } else {\r\n\r\n                                    if( resp.status === 401  ) {\r\n                                        // Bad Request\r\n                                        // this name already exists\r\n                                        // in this album\r\n                                        setErrors( [...errors ,<Notif\r\n                                            key={Date.now()} \r\n                                            type=\"error\"\r\n                                            onClose={({remove}) => remove()}\r\n                                            text={`l'image ${rname} exists déjà dans cet album`}\r\n                                        />] ) ;\r\n\r\n                                    } else { // 404\r\n                                        // here file not exists\r\n                                        console.warn('file rname 404 with : ' , item.id , item.get('name') );\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } ) ;\r\n                        }}\r\n                        loadRname={loadRname}\r\n                        onClose={() => {\r\n                            setControl(false)\r\n                        }}\r\n                        pic={item}\r\n                        open={control}\r\n                        errorsRname={errors}\r\n                    />\r\n                </li>\r\n            )\r\n            }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemImg;","import React from 'react';\r\nimport {iconsChangeAlign as icons} from './../icons';\r\nimport Icons from './../Icons/Icons';\r\nimport './ChangeAlign.css';\r\n\r\nfunction ChangeAlign( {setter,status} ) {\r\n\r\n    return (\r\n        <section className=\"ChangeAlign\">\r\n            {icons.map( icon => (\r\n                <Icons\r\n                    alt={icon.alt}\r\n                    key={icon.id}\r\n                    tooltip={icon.tooltip}\r\n                    className={icon.className}\r\n                    onClick={() => (\r\n                        icon.onClick( setter )\r\n                    ) }\r\n                    classHandle={`${status && icon.id ? 'active': !status && !icon.id ? 'active' : ''} `}\r\n                />\r\n            ) )}\r\n        </section>\r\n    ) ;\r\n}\r\n \r\nexport default ChangeAlign;","import React from 'react';\r\nimport './Slide.css';\r\n\r\nfunction Slide({\r\n    id,img,active,slide\r\n}) {\r\n\r\n    return (\r\n        <section\r\n            className={`Slide ${active === id ? 'active':'hide'} ${slide} `}\r\n        >\r\n            {img}\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Slide;","import React from 'react';\r\nimport Slide from './Slide/Slide';\r\nimport './Slider.css';\r\nimport {Progress} from 'react-sweet-progress';\r\nimport 'react-sweet-progress/lib/style.css'\r\n\r\nexport default class Slider extends React.Component {\r\n    \r\n    static SLIDER_TIMEOUT = 500 ;\r\n\r\n    state = {\r\n        active: 0\r\n        ,slide: null\r\n        ,percent: 0\r\n        ,over: false\r\n    } ;\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n\r\n        this.state.size = props.imgs.length;\r\n\r\n        if( !props.imgs.length ) {\r\n            console.error('Slider props imgs error because is not an iterable : ' , props.imgs );\r\n        }\r\n\r\n        this.startTimeout = typeof props.timeout === 'number' && props.timeout > Slider.SLIDER_TIMEOUT ? props.timeout : 3e3;\r\n\r\n        this.currentTimeout =this.startTimeout  \r\n\r\n        this.next = this.next.bind( this ) ;\r\n        this.percentUpdate = this.percentUpdate.bind( this ) ;\r\n        this.inTransition = false;\r\n    }\r\n\r\n    /**\r\n     * @bind [constructor]\r\n     */\r\n    percentUpdate() {\r\n\r\n        this.currentTimeout -= 50 ;\r\n\r\n        const partial = this.startTimeout - this.currentTimeout\r\n\r\n        const newPercent =  (partial / this.startTimeout)*100;\r\n\r\n        if( newPercent > 100 ) {\r\n            this.next();\r\n        }\r\n        else {\r\n            this.setState( {\r\n                percent: Math.floor(newPercent)\r\n            } ) ;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @bind [constructor]\r\n     */\r\n    next() {\r\n\r\n        this.inTransition = true;\r\n        const \r\n            {active,size,over} = this.state\r\n            ,nextId = active + 1 < size ? active + 1 : 0\r\n        ;\r\n\r\n        this.setState( {\r\n            slide: 'next'\r\n        } , () => {\r\n            clearInterval( this.percentID ) ;\r\n            setTimeout(() => {\r\n                this.setState( {\r\n                    slide: null\r\n                    ,active: nextId\r\n                    ,percent: 0\r\n                } , () => {\r\n\r\n                    setTimeout(() => {\r\n                        if( !over )\r\n                            this.percentID = setInterval( this.percentUpdate , 50 ) ;\r\n                        this.inTransition = false;\r\n\r\n                        if( this.endTransit instanceof Function ) {\r\n                            this.endTransit();\r\n                            this.endTransit = null;\r\n                        }\r\n                    }, Slider.SLIDER_TIMEOUT);\r\n                    this.currentTimeout = this.startTimeout ;\r\n                } )\r\n            }, Slider.SLIDER_TIMEOUT);\r\n        } ) ;\r\n\r\n    }\r\n\r\n    prev() {\r\n        \r\n        this.inTransition = true;\r\n        const \r\n            {active,size,over} = this.state\r\n            ,nextId = active - 1 >= 0 ? active - 1 : size-1\r\n        ;\r\n\r\n        this.setState( {\r\n            slide: 'prev'\r\n        } , () => {\r\n            clearInterval( this.percentID ) ;\r\n            setTimeout(() => {\r\n                this.setState( {\r\n                    slide: null\r\n                    ,active: nextId\r\n                    ,percent: 0\r\n                } , () => {\r\n\r\n                    setTimeout(() => {\r\n                        if( !over )\r\n                            this.percentID = setInterval( this.percentUpdate , 50 ) ;\r\n                        this.inTransition = false;\r\n\r\n                        if( this.endTransit instanceof Function ) {\r\n                            this.endTransit();\r\n                            this.endTransit = null;\r\n                        }\r\n                    }, Slider.SLIDER_TIMEOUT);\r\n                    this.currentTimeout = this.startTimeout ;\r\n                } )\r\n            }, Slider.SLIDER_TIMEOUT);\r\n        } ) ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.percentID = setInterval( this.percentUpdate , 50 ) ; \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval( this.percentID );\r\n    }\r\n\r\n    render() {\r\n\r\n        const\r\n            {imgs} = this.props\r\n            ,{active,slide,percent,over} = this.state\r\n        ;\r\n\r\n        return (\r\n            <div \r\n                className=\"Slider\"\r\n                onMouseEnter={() => {\r\n                    clearInterval( this.percentID );\r\n                    this.setState({\r\n                        over: true\r\n                    } ) ;\r\n                }}\r\n                onMouseLeave={() => {\r\n                    clearInterval( this.percentID );\r\n                    if( !this.inTransition )\r\n                        this.percentID = setInterval( this.percentUpdate , 50 );\r\n                    else {\r\n                        this.endTransit = () => {\r\n                            this.percentID = setInterval( this.percentUpdate , 50 );\r\n                        }\r\n                    }\r\n                    this.setState( {\r\n                        over: false\r\n                    } );\r\n                }}\r\n            >\r\n                <div className=\"points-item\">\r\n                    {\r\n                        imgs.map( (img,key) => (\r\n                            <span \r\n                                className={`points ${key === active ? 'active':''}`}\r\n                                key={key}\r\n                                onClick={() => {\r\n                                    if( key === active ) {\r\n                                        return;\r\n                                    } else {\r\n                                        this.currentTimeout = this.startTimeout;\r\n                                        this.setState( { active: key , percent: 0 } );\r\n                                    }\r\n                                }}\r\n                            >\r\n                            </span>\r\n                        ) )\r\n                    }\r\n                </div>\r\n                <Progress\r\n                    percent={percent} \r\n                    status={percent < 100 ? \"active\":'success'}\r\n                    theme={{\r\n                        active: {\r\n                            symbol:  percent ,\r\n                            color: '#e166b5'\r\n                        }\r\n                    }}\r\n                />\r\n                \r\n                  <section className=\"content-slider\">\r\n                \r\n                    <button\r\n                        type=\"button\"\r\n                        className={`${over ? '':'o-hide'}`}\r\n                        onClick={() => {\r\n                            clearInterval( this.percentID );\r\n                            this.prev();\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa-arrow-left\"></i>\r\n                    </button>\r\n                    \r\n                    {\r\n                        imgs.map( (img,key) => (\r\n                            <Slide\r\n                                key={key}\r\n                                img={img}\r\n                                active={active}\r\n                                id={key}\r\n                                slide={slide}\r\n                            />\r\n                        ) )\r\n                    }\r\n                    \r\n                    <button\r\n                        type=\"button\"\r\n                        className={`${over ? '':'o-hide'}`}\r\n                        onClick={() => {\r\n                            clearInterval( this.percentID );\r\n                            this.next();\r\n                        }}\r\n                    >\r\n                        <i className=\"fas fa-arrow-right\"></i>\r\n                    </button>\r\n                \r\n                </section>\r\n\r\n            </div>\r\n        ) ;\r\n    }\r\n};\r\n","import React ,  {useState} from 'react';\r\nimport ItemImg from './../ItemImg/ItemImg';\r\nimport './ListImg.css';\r\nimport ChangeAlign from './../ChangeAlign/ChangeAlign';\r\nimport Slider from './../Slider/Slider';\r\n\r\nfunction getPropsItem( item , db ) {\r\n\r\n    return {\r\n        key:item.id\r\n        ,item:item\r\n        ,db:db\r\n    }\r\n}\r\n\r\nfunction ListImg( {\r\n    items,\r\n    load,\r\n    db\r\n} ) {\r\n\r\n    const [align,setAlign] = useState( false ) ;\r\n\r\n    return (\r\n        <section>\r\n            <ul\r\n                className=\"ListImg\"\r\n            >\r\n                {\r\n                    load || (\r\n                        <>\r\n                            {\r\n                                !align ? \r\n                                items.map( item => (\r\n                                    <ItemImg {...getPropsItem( item , db )} />\r\n                                ) ) : (\r\n                                    <Slider\r\n                                        timeout={5e3}\r\n                                        imgs={(\r\n                                            items.map( item => (\r\n                                                <ItemImg {...getPropsItem( item , db )} />\r\n                                            ))\r\n                                        )}\r\n                                    />\r\n                                )\r\n                            }\r\n                        </>\r\n                    )\r\n                }\r\n            </ul>\r\n\r\n            <ChangeAlign setter={setAlign} status={align} />\r\n            \r\n        </section>\r\n    ) ;\r\n}\r\n\r\nexport default ListImg;","import React,{useState} from 'react';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\n\r\nfunction PreviewItem({item,onRemove,onRname}){\r\n\r\n    const [loadRname,setLoadRname] = useState( false );\r\n\r\n    return (\r\n        <li>\r\n            <figure>\r\n                <img\r\n                    src={item.blob}\r\n                    alt=\"pré vue d'ajout\"\r\n                    width={128}\r\n                />\r\n                <figcaption>\r\n                    {item.name}\r\n                </figcaption>\r\n\r\n\r\n                <ControlItem\r\n                    onRemove={onRemove}\r\n                    onRname={(rname,rnameRef) => {\r\n\r\n                        setLoadRname( <Loader type=\"btn\" width={24} /> ) ;\r\n                        \r\n                        setTimeout(() => {\r\n                            setLoadRname( false ) ;\r\n                        },  (Math.round( Math.random() * 95 ) + 150 ) );\r\n\r\n                        onRname( item.name , rname );  \r\n                    }}\r\n                    open={true}\r\n                    pic={\r\n                        {\r\n                            get: function( type ) {\r\n                                return type === 'name' ? item.name : item.blob; \r\n                            }\r\n                        }\r\n                    }\r\n                    loadRname={loadRname}\r\n                    errorsRname={[]}\r\n                    tipRemove=\"supprimé de l'ajout\"\r\n                    itemType=\"image\"\r\n                />\r\n\r\n            </figure>\r\n        </li>\r\n    ) ;\r\n}\r\n\r\nexport default PreviewItem;","import React from 'react';\r\nimport './Previews.css';\r\nimport PreviewItem from './PreviewItem';\r\n\r\nfunction Previews({items,error,onRemove,onRname}) {\r\n\r\n    return (\r\n        <ul\r\n            className={`${error ? 'error':''} Previews`}\r\n        >\r\n            {\r\n                items.map( (item,key) => (\r\n                    <PreviewItem\r\n                        onRname={(currentName,rname) => onRname(currentName, rname)}\r\n                        key={key}\r\n                        item={item}\r\n                        onRemove={onRemove}\r\n                    />\r\n                ) )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Previews;","import React,{useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport FormAdd from './../FormAdd/FormAdd';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport ListImg from './../ListImg/ListImg';\r\nimport Previews from './../Previews/Previews';\r\nimport './ShowAlbum.css';\r\n\r\nconst getPics = (db,id) => {\r\n\r\n    return new Promise( (resolve,reject) => {\r\n\r\n        db.getImgsOf( id )\r\n            .then( pics => {\r\n                resolve( pics );\r\n            } )\r\n            .catch( err => reject(err) )\r\n        ;\r\n    } ) ;\r\n}\r\n\r\nfunction ShowAlbum({db,loaderAlbum,album}) {\r\n    \r\n    const {id} = useParams();\r\n    const [loaderAddPicture,setLoaderAddPicture] = useState( false );\r\n    const [errors,setErrors] = useState([]);\r\n    const [successFor,setSuccessFor] = useState([]);\r\n    const [previews,setPreviews] = useState( [] );\r\n    const [pictures,setPictures] = useState({\r\n        pics:false\r\n        ,loader:<Loader\r\n            width={64}\r\n            bg=\"rgba(0,0,0,.9)\"\r\n            type=\"timer\"\r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className=\"ShowAlbum\">\r\n            {\r\n                !loaderAlbum && (\r\n                    <h2>\r\n                        {album.get('name')}\r\n                    </h2>\r\n                )\r\n            }\r\n            <ListImg\r\n                items={\r\n                    !pictures.pics ?\r\n                    getPics(db,id).then( pics => {\r\n                        setPictures( {\r\n                            pics:pics\r\n                            ,loader:false\r\n                        } )\r\n                    } ) : pictures.pics\r\n                }\r\n                load={pictures.loader}\r\n                db={db}\r\n            />\r\n\r\n            <FormAdd\r\n                type=\"picture\"\r\n                // voidForm={voidForm}\r\n                onSubmit={() => {\r\n                    \r\n                    if( loaderAddPicture ) return ;\r\n\r\n                    if( // if: user have send file.s\r\n                        previews.length\r\n                    ) {\r\n                        setLoaderAddPicture( <Loader type=\"btn\" width={16} />);\r\n\r\n                        Promise.all( // resolve promise.s add picture.s\r\n                            Array.from(\r\n                                Array( previews.filter( preview => (\r\n                                    preview.name.length >= 2 &&\r\n                                    preview.name.length < 42\r\n                                ) ).length ).keys()\r\n                            ).map( key => db.addPicture(\r\n                                id, previews[key].name, previews[key].blob\r\n                            ) )\r\n                        ).then( responses => {\r\n\r\n                            let\r\n                             finalSucessFor = [],\r\n                             finalPreviews = previews,\r\n                             finalErrors = errors\r\n                            ;\r\n\r\n                            responses.forEach( response => {\r\n                                \r\n                                if( response.success ) {\r\n\r\n                                    finalPreviews = finalPreviews.filter( p => (\r\n                                        p.name !== response.name\r\n                                    ) ) ;\r\n\r\n                                    finalSucessFor.push( response.name ) ;\r\n\r\n                                } else {\r\n                                    \r\n                                    if( response.status === 401 ) {\r\n                                        // Bad request\r\n\r\n                                        // rname here\r\n                                        finalErrors.push( <Notif\r\n                                            key={Date.now()}\r\n                                            text={`${response.name} existe déjà `}\r\n                                            type=\"error\"\r\n                                            onClose={({remove}) => remove()}\r\n                                        /> ) ;\r\n                                    } else {\r\n\r\n                                        finalErrors.push( <Notif\r\n                                            key={Date.now()}\r\n                                            text={`une erreur de réseaux et survenue , check README.md ERROR_CODE[10b2] branch => v0.2.2-beta`}\r\n                                            type=\"error\"\r\n                                            onClose={({remove}) => remove()}\r\n                                        /> ) ;\r\n\r\n                                        console.error('unknow error in add image response : ', response )\r\n                                    }\r\n                                }\r\n\r\n                            } ) ;\r\n                            \r\n                            // notif success pictures add\r\n                            setSuccessFor( finalSucessFor || [] );\r\n                            \r\n                            // notif errors pictures add\r\n                            setErrors( finalErrors ) ;\r\n                            \r\n                            // contains pictures errors \r\n                            setPreviews( finalPreviews) ;\r\n                            \r\n                            // off loader submit form\r\n                            setLoaderAddPicture( false ) ;\r\n\r\n                            // force reload all pictures to next render\r\n                            setPictures( {\r\n                                pics:false,\r\n                                loader:<Loader\r\n                                    width={64}\r\n                                    bg=\"rgba(0,0,0,.9)\"\r\n                                    type=\"timer\"\r\n                                /> \r\n                            } ) ;\r\n\r\n                        } )\r\n                        .catch( err => {\r\n                            setLoaderAddPicture( false ) ;\r\n                            console.error( err ) ;\r\n                        } ) ;\r\n                    }\r\n                    else { // not file.s send\r\n\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"vous n'avez pas envoyé de fichier\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                }}\r\n                onChange={(file,blob,name) => {\r\n                    \r\n                    if( name.length < 2 || name.length >= 42 ) {\r\n\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"taille de nom invalide\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n\r\n                    } else if( previews.find( preview => preview.name === name ) ) {\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"ce nom d'image éxiste déjà\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                    else if( previews.length >= 3 ) {\r\n                        \r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"Vous ne pouvez pas ajouté plus d'images en 1 seule fois .\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                    else {\r\n                        \r\n                        setPreviews( [...previews,{\r\n                            blob: blob,\r\n                            name: name\r\n                        }] ) ;\r\n                    }\r\n                } }\r\n                load={loaderAddPicture}\r\n                imgsLength={previews.length}\r\n            />\r\n\r\n            {errors.map( error => error )}\r\n\r\n            {\r\n                (\r\n                    previews.length ? (\r\n                        <Previews\r\n                            onRname={(currentName,rname) => {\r\n                                \r\n                                if( previews.find( preview => preview.name === rname ) ) {\r\n                                    // here re name value already exists\r\n\r\n                                    // notif error\r\n\r\n                                    setErrors( [...errors , <Notif\r\n                                        key={Date.now().toString() + Math.random().toString()}\r\n                                        type=\"error\"\r\n                                        onClose={({remove,hide}) => !remove() ? hide(): null}\r\n                                        text=\"ce nom d'image existe déjà\"\r\n                                    />] ) ;\r\n\r\n\r\n                                } else {\r\n\r\n                                    \r\n                                    setErrors( [...errors , <Notif\r\n                                        key={Date.now().toString() + Math.random().toString()}\r\n                                        type=\"success\" // lol\r\n                                        onClose={({remove,hide}) => !remove() ? hide(): null}\r\n                                        text={`l'image ${currentName} à été re nomé en ${rname}`}\r\n                                    />] ) ;\r\n\r\n                                    setPreviews( previews.map( preview => {\r\n                                        if(preview.name === currentName)\r\n                                        preview.name = rname ;\r\n                                        return preview;\r\n                                    } ) ) ;\r\n                                }\r\n                            }}\r\n                            onRemove={preview => (\r\n                                setPreviews( previews.filter( p => p.name !== preview.name ) )\r\n                            )}\r\n                            items={previews}\r\n                        />\r\n                    ) : null\r\n                )\r\n            }\r\n\r\n            {\r\n                (\r\n                    successFor.length ? (\r\n                        <ul>\r\n                            {\r\n                                successFor instanceof Array ? \r\n                                successFor.map( (name,key) => (\r\n                                    <li key={key}>\r\n                                        <Notif\r\n                                            type=\"success\"\r\n                                            onClose={({remove,hide}) => !remove() ? hide(): null}\r\n                                            text={`L'image ${name} à été ajouté avec succés`}\r\n                                        />\r\n                                    </li>\r\n                                ) ) : null\r\n                            }\r\n                        </ul>\r\n                    ) : null\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowAlbum;","import React from 'react';\r\nimport FormAdd from './../../core/FormAdd/FormAdd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ShowAlbum from '../../core/ShowAlbum/ShowAlbum';\r\n\r\nexport default class AlbumRoute extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader width={16} type=\"btn\" />\r\n        ,redirect: false\r\n        ,loadUser: <Loader full width={48} type=\"time\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderAlbum: <Loader full width={48} type=\"az\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,album: null\r\n        ,errors: []\r\n    } ;\r\n\r\n    static add() {\r\n\r\n        return \"add\";\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n\r\n        document.title = 'Picsy | Album' ;\r\n        this.onSubmit = this.onSubmit.bind( this );\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        if( this.props.action !== AlbumRoute.add() ) {\r\n            \r\n            this.props.db.albums.doc( document.location.hash.split('/').pop() )\r\n            .get()\r\n            .then( album => {\r\n                this.setState( {\r\n                    album: album\r\n                    ,loaderAlbum: false\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID');\r\n\r\n        const notGetUser = {\r\n            loader: false,\r\n            redirect: <Redirect to=\"/\" /> \r\n        } ;\r\n\r\n        this.props.db.isLogged( this.userID )\r\n            .then( response => {\r\n\r\n                if( response.success ) {\r\n                    this.setState( {\r\n                        loader: false,\r\n                        user: response.user\r\n                        ,loadUser: false\r\n                    } );\r\n                } else {\r\n                    this.setState( notGetUser ) ;\r\n                }\r\n\r\n            } )\r\n            .catch( () => (\r\n                this.setState( notGetUser )\r\n            ) )\r\n        ;\r\n    }\r\n\r\n    onSubmit({name,refName}) {\r\n\r\n        const {user} = this.state;\r\n\r\n        this.setState( {\r\n            loader: <Loader width={16} type=\"btn\" />\r\n        } )\r\n\r\n        if( name.length >= 2 && name.length <= 42 ) {\r\n\r\n            if( refName.current instanceof Node ) {\r\n\r\n                refName.current.value = '';\r\n                refName.current.focus() ;\r\n            }\r\n\r\n            this.props.db.addAlbum(\r\n                name , user.id\r\n            ).then( response => {\r\n\r\n                if( response.success )\r\n                    this.setState( {\r\n                        loader: false,\r\n                        formHide: true,\r\n                        errors: [],\r\n                        created: { ready: false , album: response.album}\r\n                    } , () => {\r\n\r\n                        this.state.created.album.get()\r\n                        .then(  album => {\r\n\r\n                            this.setState( {\r\n                                created: {\r\n                                    ready: true,\r\n                                    album: album\r\n                                }\r\n                            } ) ;\r\n                        } )\r\n                    } ) ;\r\n                else\r\n                    this.setState( state => ({\r\n                        loader: false,\r\n                        errors: [...state.errors , (\r\n                            <Notif\r\n                                key={Date.now()}\r\n                                type=\"error\"\r\n                                onClose={({remove}) => remove()}\r\n                                text={`l'album ${name} existe déjà`}\r\n                            />\r\n                        )]\r\n                    } )) ;\r\n            } ) ;\r\n        }\r\n        else\r\n            this.setState( state => ({\r\n                errors: [...state.errors , (\r\n                    <Notif\r\n                        key={Date.now()}\r\n                        type=\"error\"\r\n                        text=\"taille de nom invalide\"\r\n                        onClose={({remove}) => remove()}\r\n                    />\r\n                )] ,\r\n                loader: false\r\n            }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            {action} = this.props\r\n            ,{\r\n                user,\r\n                loader,\r\n                loadUser,\r\n                errors,\r\n                formHide,\r\n                created,\r\n                loaderAlbum,\r\n                album\r\n            } = this.state\r\n        ;\r\n\r\n        return(\r\n            <>\r\n                <User u={user} load={loadUser} />\r\n                {\r\n                    action === AlbumRoute.add() ? (\r\n                        <>\r\n                            <FormAdd\r\n                                load={loader}\r\n                                className={`${formHide ? 'hide':''}`}\r\n                                type=\"album\"\r\n                                autoFocus\r\n                                onSubmit={this.onSubmit}\r\n                            />\r\n                            \r\n                            {errors}\r\n                            {\r\n                                formHide && (\r\n                                    <Notif\r\n                                        type=\"success\"\r\n                                        text={<span>\r\n                                            l'album\r\n                                            <Link\r\n                                                to={`/album/${created.album.id}`}\r\n                                            >\r\n                                                {created.ready ? created.album.get('name') : \".. .. ..\"}\r\n                                            </Link> à été créé avec succés\r\n                                        </span>}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <Notif \r\n                                type=\"back\"\r\n                                text={<>\r\n                                    <Link to=\"/dash\">\r\n                                        Tableau de bord\r\n                                    </Link>\r\n                                </>}\r\n                            />\r\n                        </>\r\n                    )  : (\r\n                        // show album\r\n                        <>\r\n                            <ShowAlbum\r\n                                db={this.props.db}\r\n                                loaderAlbum={loaderAlbum}\r\n                                album={album}\r\n                            />\r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './FormFilter.css'\r\n\r\nexport default class FormFilter extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            blurValue\r\n            ,onChange\r\n            ,load\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotate\r\n        } = this.props\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    load || (\r\n                        <form\r\n                            className=\"FormFilter\"\r\n                        >\r\n                            <div>\r\n                                <label>flootage <i>{blurValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={blurValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'blur'\r\n                                            ,unity: 'px'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>contraste <i>{(contrastValue || contrastValue === 0) ? contrastValue : 100}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"1000\"\r\n                                    defaultValue={(contrastValue || contrastValue === 0) ? contrastValue : 100}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'contrast'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>grisage <i>{grayscaleValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={grayscaleValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'grayscale'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>rotation teinte <i>{hueRotate || 0}°</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"-8000\"\r\n                                    max=\"8000\"\r\n                                    defaultValue={hueRotate || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'hueRotate'\r\n                                            ,unity: 'deg'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }\r\n            </>\r\n        ) ;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ImgFilter from './../../core/ImgFilter/ImgFilter';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport FormFilter from './../../core/FormFilter/FormFilter';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport docCookies from 'doc-cookies';\r\nimport './PictureRoute.css';\r\n\r\nexport default class PictureRoute extends React.Component {\r\n    \r\n    state = {\r\n        loaderImg: <Loader width={64} type=\"earth\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderUser: <Loader width={64} type=\"timer\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,user: null\r\n        ,picture: null\r\n        ,redirect: null\r\n        ,blurValue: null\r\n        ,contrastValue: null\r\n        ,grayscaleValue: null\r\n        ,hueRotateValue: null\r\n        ,timeUpdate: 20\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.pictureID = document.location.hash.split('/').pop() ;\r\n        this.updatePicture = this.updatePicture.bind( this );\r\n        this.timeUpdateUp = this.timeUpdateUp.bind( this );\r\n        document.title = 'Picsy | filtre';\r\n    }\r\n    \r\n    /**\r\n     * @method componentWillUnmount [cyclelife]\r\n     * @description free intervals alloc\r\n     */\r\n    componentWillUnmount() {\r\n        clearInterval( this.updateID ) ;\r\n        clearInterval( this.timeUpdateID ) ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        // check logged\r\n        // get img with id in url\r\n        // open intervals\r\n        \r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID') ;\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                loaderImg: null\r\n                ,loaderUser: null\r\n                ,redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n\r\n                    this.setState( {\r\n                        u: user \r\n                        ,loaderUser: false\r\n                    } , () => {\r\n                        \r\n                        this.props.db.pictures.doc( this.pictureID )\r\n                        .get()\r\n                        .then( picture => {\r\n                            this.setState({\r\n                                picture: picture\r\n                                ,loaderImg: false\r\n                                ,loaderForm: false\r\n                                ,blurValue: parseInt((picture.get('filters').find( f => f.key === 'blur' ) || {}).val)*2\r\n                                ,contrastValue: parseInt((picture.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                                ,grayscaleValue: parseInt((picture.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                                ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                            } , () => {\r\n                                // go interval update img after get image\r\n                                this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                this.timeUpdateID = setInterval( this.timeUpdateUp , 1e3 );\r\n                            } );\r\n                            \r\n                        } )\r\n                        .catch( err => {\r\n                            this.setState( {\r\n                                loaderImg: null\r\n                                ,loaderUser: null\r\n                                ,redirect: <Redirect to=\"/\" />\r\n                            } ) ;   \r\n                        } );\r\n\r\n                    }  ) ;\r\n                    \r\n                } else {\r\n                    this.setState( {\r\n                        loaderImg: null\r\n                        ,loaderUser: null\r\n                        ,redirect: <Redirect to=\"/\" />\r\n                    } ) ;\r\n                }\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    timeUpdateUp() {\r\n        this.setState( state => ({ timeUpdate: state.timeUpdate-1 >= 0 ? state.timeUpdate-1: 0 }) );\r\n    }\r\n \r\n    updatePicture() {\r\n\r\n        const {picture} = this.state;\r\n\r\n        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n        try {\r\n\r\n            currentFilters = JSON.parse( currentFilters ) ;\r\n\r\n        } catch( SyntaxError ) {\r\n\r\n            currentFilters = [] ;\r\n        }\r\n        finally {\r\n            if( !currentFilters )\r\n                currentFilters = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState( {\r\n                loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n            } ) ;\r\n        }, 420);\r\n\r\n        this.props.db.pictureSetFilters(\r\n            picture.id , currentFilters\r\n        ).then( () => {\r\n\r\n\r\n            this.props.db.pictures.doc( this.pictureID )\r\n            .get()\r\n            .then( pic => {\r\n                this.setState( {\r\n                    picture: pic\r\n                    ,loaderForm: false\r\n                    ,blurValue: parseInt((pic.get('filters').find( f => f.key === 'blur' ) || {}).val) * 2\r\n                    ,contrastValue: parseInt((pic.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                    ,grayscaleValue: parseInt((pic.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                    ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                    ,timeUpdate: 20\r\n                } )\r\n            } )\r\n        } )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loaderImg\r\n            ,loaderUser\r\n            ,loaderForm\r\n            ,u\r\n            ,picture\r\n            ,blurValue\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotateValue\r\n            ,timeUpdate\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"PictureRoute\"\r\n            >\r\n\r\n                <header>\r\n                    <User\r\n                        u={u}\r\n                        load={loaderUser}\r\n                    />\r\n                </header>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n                <aside>\r\n                    <ImgFilter\r\n                        load={loaderImg}\r\n                        pics={picture}\r\n                        classFig=\"fig-filter\"\r\n                        figcaption={\r\n                            <>\r\n                                {\r\n                                    !loaderImg && (\r\n                                        <>\r\n                                            <b>{picture.get('name')}</b> \r\n                                            - <i>{new Date(picture.get('createAt')).toLocaleDateString()}</i>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        }\r\n                        width={512} // default width\r\n                    />\r\n                </aside>\r\n\r\n                <p className=\"update-pic\">\r\n                    {\r\n                        !loaderForm && (\r\n                            <>\r\n                                <span>\r\n                                    Recalcul de l'image dans {timeUpdate} \r\n                                </span>\r\n                                <br />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        clearInterval( this.updateID );\r\n                                        this.updatePicture();\r\n                                        this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                        this.setState( { timeUpdate: 20 } );\r\n                                    }}\r\n                                >\r\n                                    maintenant\r\n                                </button>\r\n                            </>\r\n                        )\r\n                    }\r\n                </p>\r\n\r\n                <FormFilter\r\n                    load={loaderForm}\r\n                    contrastValue={contrastValue}\r\n                    blurValue={blurValue}\r\n                    grayscaleValue={grayscaleValue}\r\n                    hueRotate={hueRotateValue}\r\n                    onChange={({key,val,unity}) => {\r\n\r\n                        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n                        try {\r\n\r\n                            currentFilters = JSON.parse( currentFilters ) ;\r\n                        } catch( SyntaxError ) {\r\n\r\n                            currentFilters = [] ;\r\n                        }\r\n                        finally {\r\n                            if( !currentFilters )\r\n                                currentFilters = [];\r\n                        }\r\n\r\n                        let found = false;\r\n                        currentFilters = currentFilters.map( filter => {\r\n\r\n                            if(filter.key === key) {\r\n                                filter.val = val+unity;\r\n                                found = true;\r\n                            }\r\n                            return filter;\r\n                        } ) ;\r\n\r\n                        if( !found )\r\n                            currentFilters.push( {\r\n                                key: key\r\n                                ,val: val+unity\r\n                            } )\r\n\r\n                        localStorage.setItem( \r\n                            `filters-${picture.id}` ,\r\n                            JSON.stringify( currentFilters )\r\n                        ) ;\r\n\r\n                        const delta = {};\r\n\r\n                        if( key === 'blur' )\r\n                            val *= 2;\r\n\r\n                        delta[ key+'Value' ] = parseInt( val );\r\n\r\n                        this.setState( delta );\r\n                    }}\r\n                />\r\n            \r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport docCookies from 'doc-cookies'; \r\nimport {Redirect} from 'react-router-dom';\r\nimport './AccountItem.css';\r\n\r\nfunction AccountItem({id,db}){\r\n\r\n    const [loader,setLoader] = useState( <Loader type=\"earth\" width={32} bg=\"rgba(0,0,0,.9)\" /> );\r\n    const [user,setUser] = useState( null ) ;\r\n    const [redirect,setRedirect] = useState( null ) ;\r\n    const [showDetails,setShowDetails] = useState( false );\r\n    const [albums,setAlbums] = useState( false );\r\n    const [pictures,setPictures] = useState( [] ) ;\r\n    const [loaderAlbum,setLoaderAlbum] = useState( <Loader type=\"earth\" width={32} bg=\"rgba(0,0,0,.9)\" /> ) ;\r\n\r\n    useEffect( () => {\r\n\r\n        if( !user ) {\r\n\r\n            db.users.doc( id )\r\n                .get()\r\n                .then( u => {\r\n                    setUser( u ) ;\r\n                    setLoader( false ) ;\r\n\r\n                    db.getAlbumsOf( u.id )\r\n                        .then( albums => {\r\n                            setAlbums( albums );\r\n                            setLoaderAlbum( false );\r\n    \r\n                            albums.forEach(album => {\r\n\r\n                                db.getPictureOf( album.id )\r\n                                .then( pics => {\r\n                                    setPictures( [...pictures, ...pics] ) ;\r\n                                } ) ;\r\n                            });\r\n\r\n                        } )\r\n\r\n                } )\r\n                .catch( err => {\r\n\r\n                    console.error( err );\r\n                } )\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <li\r\n            className=\"AccountItem\"\r\n        >\r\n            {redirect}\r\n            {\r\n                loader || (\r\n                    <section\r\n                        id={`${user.id}`}\r\n                        onMouseEnter={() => setShowDetails( true )}\r\n                        onMouseLeave={() => setShowDetails( false )}\r\n                        onFocus={() => setShowDetails( true )}\r\n                        onBlur={() => setShowDetails( false )}\r\n                    >\r\n                        <button\r\n                            onClick={() => {\r\n                                docCookies.setItem('useID' , user.id ) ;\r\n                                localStorage.setItem('useID' , user.id ) ;\r\n                                setRedirect( <Redirect to=\"/dash\" />) ;\r\n                            }}\r\n                        >\r\n                            <figure>\r\n                                <figcaption>\r\n                                    {user.get('pseudo')}\r\n                                </figcaption>\r\n\r\n                                <img\r\n                                    src={user.get('avatar')}\r\n                                    alt=\"avatar\"\r\n                                    width=\"64\"\r\n                                />\r\n\r\n                            </figure>\r\n\r\n                            <aside\r\n                                className={`${showDetails ? '': 'o-hide'}`}\r\n                            >\r\n                                                            \r\n                                {\r\n                                    loaderAlbum || (\r\n                                        <>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    {albums.length} album{albums.length > 1 ? 's':''}\r\n                                                </li>\r\n                                                \r\n                                                <li>\r\n                                                    {pictures.length} image{pictures.length > 1 ? 's':''}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </>\r\n                                    )\r\n                                }\r\n\r\n                            </aside>\r\n\r\n                        </button>\r\n\r\n                    </section>\r\n                )\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AccountItem;","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AccountItem from './AccountItem';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport './AccountList.css';\r\n\r\nexport default class AccountList extends React.Component {\r\n\r\n    state = {\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID )\r\n        } catch(SyntaxError) {\r\n            this.userID = [];\r\n        }\r\n        if( !this.userID )\r\n            this.userID = [];\r\n        \r\n        document.title = 'Picsy | comptes';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID.length ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            { redirect } = this.state\r\n            ,{db} = this.props\r\n        ;\r\n\r\n        return (\r\n            <section\r\n                className=\"AccountList\"\r\n            >\r\n                {redirect}\r\n\r\n                <ul>\r\n                    {\r\n                        this.userID.map( id => (\r\n                            <AccountItem key={id} db={db} id={id} />\r\n                        ) )\r\n                    }\r\n                </ul>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            Tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n    \r\n};\r\n","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './AddAccount.css';\r\n\r\nexport default class AddAccount extends React.Component {\r\n\r\n    state = {\r\n        pseudo: \"\"\r\n        ,fileName: \"\"\r\n        ,avatar: AddAccount.defaultAvatar\r\n        ,errors: []\r\n        ,loaderSubmit: null\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n        \r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n    }\r\n    \r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    render() {\r\n\r\n        const {\r\n            avatar\r\n            ,errors\r\n            ,fileName\r\n            ,loaderSubmit\r\n            ,redirect\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"AddAccount\"\r\n            >\r\n                {redirect}\r\n\r\n                <h1>\r\n                    Ajouté\r\n                    <span className=\"one-word\">&nbsp;un&nbsp;</span>\r\n                    <span className=\"user-word\">\r\n                        utlisateur\r\n                    </span>\r\n                    &nbsp;<span className=\"hide account-word\">\r\n                        compte\r\n                    </span>\r\n                </h1>\r\n                <FormUser\r\n                    onSubmit={e => {\r\n\r\n                        e.preventDefault();\r\n\r\n                        const {pseudo} = this.state;\r\n                \r\n                        if(\r\n                            !(pseudo.length >= 2 &&\r\n                            pseudo.length <=40)\r\n                        ) {\r\n                            this.setState(state => ( {\r\n                                errors: [ ...state.errors, <Notif\r\n                                    key={Date.now()} \r\n                                    text=\"pseudo taille invalide\"\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) ) ;\r\n                        } else{\r\n                \r\n                            const {avatar} = this.state;\r\n                \r\n                            this.setState( {\r\n                                loaderSubmit: <Loader width={16} type=\"btn\" />\r\n                            } , () => {\r\n                \r\n                                this.props.db.users.add( {\r\n                                    pseudo: pseudo\r\n                                    ,avatar: avatar\r\n                                } ).then( data => { \r\n\r\n                                    if( !this.userID )\r\n                                        this.userID = [];\r\n                \r\n                                    this.userID.push(data.id);\r\n\r\n                                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                                    this.setState( {\r\n                                        redirect: <Redirect to=\"/account-list\" />\r\n                                    } ) ;\r\n                                } ).catch( err => console.error( err ) ) ;\r\n                            } ) ;\r\n                        }\r\n                    }}\r\n                    onChangePseudo={e => (\r\n                        this.setState( { pseudo: e.target.value.trim()} )\r\n                    )}\r\n                    avatar={avatar}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    valuePseudo={this.state.pseudo}\r\n                    loaderSubmit={loaderSubmit}\r\n                    onChangeAvatar={(file,blob,e) => {\r\n                        \r\n                        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n                            this.setState( {\r\n                                avatar: blob\r\n                                ,fileName: file.name\r\n                            } ) ;\r\n                            \r\n                        } else {\r\n                            \r\n                            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n                            \r\n                            this.setState( state => ( {\r\n                                errors: [ ...state.errors , <Notif\r\n                                    key={Date.now()} \r\n                                    text={mssg}\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) )\r\n                        }\r\n                \r\n                    }}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n};\r\n","import Logged from './../pages/Logged/Logged';\r\nimport Dash from './../pages/Dash/Dash';\r\nimport AlbumRoute from './../pages/AlbumRoute/AlbumRoute';\r\nimport PictureRoute from './../pages/PictureRoute/PictureRoute';\r\nimport AccountList from './../pages/AccountList/AccountList';\r\nimport AddAccount from './../pages/AddAccount/AddAccount';\r\n\r\nconst routes = [\r\n    {\r\n        id:0,\r\n        exact:true,\r\n        render: Logged,\r\n        props: {},\r\n        path: \"/\",\r\n        name: \"Home\"\r\n    },\r\n    {\r\n        id:1,\r\n        exact:false,\r\n        render: Dash,\r\n        props: {},\r\n        path: \"/dash\",\r\n        name: \"dashboard\"\r\n    },\r\n    {\r\n        id:2,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"add\"\r\n        },\r\n        path: \"/add-album\",\r\n        name: \"album add\"\r\n    },\r\n    {\r\n        id:3,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"show\"\r\n        },\r\n        path: \"/album/:id\",\r\n        name: \"show album\"\r\n    },\r\n    {\r\n        id:5,\r\n        exact:false,\r\n        render: PictureRoute,\r\n        props: {},\r\n        path: \"/filter/:id\",\r\n        name: \"filter album\"\r\n    },\r\n    {\r\n        id:6,\r\n        exact:false,\r\n        render: AddAccount,\r\n        props: {},\r\n        path: \"/add-account\",\r\n        name: \"filter album\"\r\n    }\r\n    ,{\r\n        id:6,\r\n        exact:false,\r\n        render: AccountList,\r\n        props: {},\r\n        path: \"/account-list\",\r\n        name: \"liste compte\"\r\n    }\r\n] ;\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport collections from './core/firebase/firebase';\r\nimport routes from './core/routes';\r\nimport {Switch,Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {\r\n          routes.map( route => (\r\n            <Route \r\n              key={route.id}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              render={() => (\r\n                <route.render\r\n                  {...route.props}\r\n                  db={collections}\r\n                />\r\n              )}\r\n            />\r\n          ) )\r\n        }\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  // SecurityError\n  // if ('serviceWorker' in navigator) {\n  //   navigator.serviceWorker.ready.then(registration => {\n  //     registration.unregister();\n  //   });\n  // }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}