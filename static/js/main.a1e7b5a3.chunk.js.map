{"version":3,"sources":["core/firebase/firebase.js","core/firebase/firebase.config.js","core/Loader/Loader.js","core/Notif/Notif.js","core/InputFile/InputFile.js","core/SignIn/SignIn.js","core/FormUser/FormUser.jsx","pages/Logged/Logged.jsx","core/User/User.js","core/Confirm/Confirm.js","core/ControlItem/ControlItem.js","core/ListAlbulms/ItemAlbum.js","core/ListAlbulms/ListAlbums.js","pages/Dash/Dash.jsx","core/FormAdd/FormAdd.js","core/ImgFilter/ImgFilter.js","core/ItemImg/ItemImg.js","core/ListImg/ListImg.js","core/ShowAlbum/ShowAlbum.js","pages/AlbumRoute/AlbumRoute.jsx","core/FormFilter/FormFilter.jsx","pages/PictureRoute/PictureRoute.jsx","pages/AccountList/AccountItem.js","pages/AccountList/AccountList.jsx","pages/AddAccount/AddAccount.jsx","core/routes.js","App.js","serviceWorker.js","index.js","core/Loader/loader-timer.svg","core/Loader/loader-button.svg","core/Loader/loader-azure.svg","core/Loader/loader-earth.svg"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collections","users","collection","albums","pictures","getUser","userID","Promise","resolve","reject","doc","get","then","user","catch","err","pictureSetFilters","pictureID","filters","picture","refPicture","delDouble","filter","f","find","fDelta","key","set","name","createAt","album_id","blob","success","pictureSetFilter","currentFilter","found","newFilter","map","current","JSON","parse","SyntaxError","val","push","stringify","track","getImgsOf","albumID","QuerySnapshot","docs","addAlbum","status","getAlbumsOf","details","add","user_id","Date","now","size","albumUp","refAlbum","album","parseInt","albumDown","getPictureOf","addPicture","pic","rnameImg","rname","pictureAlbumID","rnameAlbum","trim","removePicture","refImg","Function","delete","removeAlbum","id","pics","assoceType","type","LoaderTime","LoaderBtn","LoaderEarth","LoaderAzure","Loader","className","width","full","bg","style","backgroundColor","alt","src","assoceIconType","assoc","Notif","onClose","text","useState","React","createRef","refNotif","hide","setHide","ref","onClick","notif","remove","Node","parentNode","removeChild","InputFile","label","onChange","autoRead","htmlFor","e","file","target","files","reader","FileReader","evt","addEventListener","result","readAsDataURL","SignIn","getContent","fontSize","effect","place","data-for","data-tip","href","FormUser","this","props","onSubmit","onChangeAvatar","onChangePseudo","valuePseudo","fileName","avatar","loaderSubmit","errors","placeholder","autoComplete","value","length","slice","click","error","Component","Logged","state","loader","u","redirect","pseudo","defaultAvatar","loaderButton","localStorage","getItem","docCookies","avatarChange","bind","document","title","preventDefault","setState","db","data","setItem","to","test","mssg","console","log","User","load","class","confirmRef","btnsRef","confirm","cacel","dataBack","Confirm","onConfirm","onCancel","onFinally","textConfirm","textCancel","textGlobal","autoFocus","autoFocusCancel","autoFocusConfirm","icons","useEffect","cancel","focus","conf","fin","ControlItem","manualOpen","open","onRemove","onRname","loadRname","errorsRname","onOpen","itemType","closer","setConfirm","inputRname","setInputRname","setRname","firstControl","rnameRef","setTimeout","onMouseEnter","onMouseLeave","onContextMenu","disabled","btnLinkRef","ItemAlbum","item","control","setControl","setLoadRname","visible","setVisible","setName","manualControl","setManualControl","setRedirect","setErrors","refItem","onKeyDown","onPointerUp","nativeEvent","which","ListAlbums","Dash","FormAdd","voidForm","setPicture","refName","margin","buildFilter","Array","styles","forEach","replace","ImgFilter","figcaption","classFig","ItemImg","even","btnNav","classList","onPointerDown","resp","warn","ListImg","items","getPics","ShowAlbum","loaderAlbum","useParams","loaderAddPicture","setLoaderAddPicture","setVoidForm","setPictures","AlbumRoute","loadUser","action","location","hash","split","pop","formHide","createWithName","FormFilter","blurValue","contrastValue","grayscaleValue","hueRotate","min","max","defaultValue","unity","PictureRoute","loaderImg","loaderUser","loaderForm","hueRotateValue","timeUpdate","updatePicture","timeUpdateUp","clearInterval","updateID","timeUpdateID","setInterval","currentFilters","toLocaleDateString","delta","AccountItem","setLoader","setUser","showDetails","setShowDetails","AccountList","AddAccount","routes","exact","render","path","App","route","Boolean","window","hostname","match","ReactDOM","getElementById","module","exports"],"mappings":"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","file":"static/js/main.a1e7b5a3.chunk.js","sourcesContent":["import firebaseCfg from './firebase.config';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nfirebase.initializeApp( firebaseCfg );\r\nconst\r\n  collections = {\r\n    users: firebase.firestore().collection('users')\r\n    ,albums: firebase.firestore().collection('albums')\r\n    ,pictures: firebase.firestore().collection('pictures')\r\n    ,getUser( userID ) {\r\n\r\n        return new Promise( ( resolve , reject ) => (\r\n            this.users.doc( userID ).get()\r\n            .then( user => (\r\n                resolve( user.get('pseudo') ? user: null )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n        ) ) ;\r\n    }\r\n    ,pictureSetFilters( pictureID , filters ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          const delDouble = picture.get('filters').filter( f => {\r\n\r\n              return !filters.find( fDelta => fDelta.key === f.key )\r\n          } ) ;\r\n\r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: [ ...delDouble , ...filters ]\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,pictureSetFilter( pictureID , filter ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n\r\n          let currentFilter = picture.get('filters') ;\r\n          \r\n          let found = false;\r\n          const newFilter = currentFilter.map( current => {\r\n\r\n              try {\r\n                if( typeof current === 'string' )\r\n                  current = JSON.parse(current)\r\n\r\n              } catch( SyntaxError ) {\r\n                \r\n                current = {};\r\n              }\r\n              if(current.key === filter.key) {\r\n                current.val = filter.val;\r\n                found = true;\r\n              }\r\n\r\n              return current ;\r\n\r\n          }  ) ;\r\n\r\n          if( !found ) {\r\n\r\n            newFilter.push( JSON.stringify( {\r\n              key: filter.key\r\n              ,val: filter.val\r\n            } ) ) ;\r\n          }\r\n\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: newFilter.filter( track => {\r\n                try {\r\n                  if( typeof track === 'string' )\r\n                    track = JSON.parse(track);\r\n                }catch( SyntaxError ) {\r\n                  return false;\r\n                }\r\n                return track.key && track.val;\r\n              })\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,getImgsOf( albumID ) {\r\n\r\n      return new Promise( (resolve,reject) => (\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => (\r\n          this.pictures.get()\r\n          .then( QuerySnapshot => (\r\n            resolve(QuerySnapshot.docs.filter( doc => (\r\n              doc.get('album_id') === albumID\r\n            ) ) )\r\n          ) ).catch( err => reject( err ) )\r\n        ) ).catch( err => reject(err) )\r\n       ) ) ;\r\n    }\r\n    ,addAlbum( name , userID  ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if(\r\n          !(name || userID)\r\n        )\r\n          reject({\r\n            status: 401\r\n          });\r\n\r\n        this.getAlbumsOf( userID ).then( docs => {\r\n\r\n          if( docs.find( doc => doc.get('name') === name ) )\r\n            return resolve( {\r\n              success: false\r\n              ,status: 401,\r\n              details: 'already exists' \r\n            } ) ;\r\n\r\n            this.albums.add( {\r\n              user_id: userID\r\n              ,name: name\r\n              ,createAt: Date.now()\r\n              ,size: 0\r\n            } ).then( () => resolve({\r\n              success:true\r\n            }) )\r\n            .catch( err => reject( err ) ) ;\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,albumUp( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))+1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,albumDown( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))-1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,getPictureOf( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        if( !albumID )\r\n          return reject();\r\n\r\n          this.pictures.get()\r\n          .then(  QuerySnapshot => (\r\n            resolve(\r\n              QuerySnapshot.docs\r\n                .filter( doc => (\r\n                  doc.get('album_id') === albumID )\r\n                ) )\r\n            )\r\n          )\r\n      } ) ;\r\n    }\r\n    ,addPicture(\r\n      albumID,\r\n      name,\r\n      picture\r\n    ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !(albumID || name || picture ) )\r\n          return reject();\r\n\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => {\r\n\r\n          this.getPictureOf( albumID ).then( \r\n            pictures => {\r\n             \r\n              if(pictures.find(\r\n                pic => pic.get('name') === name \r\n              )) {\r\n                resolve( {\r\n                  success: false,\r\n                  status: 401\r\n                } ) ;\r\n              } else {\r\n\r\n\r\n\r\n                this.pictures.add( {\r\n                  album_id: albumID\r\n                  ,blob: picture\r\n                  ,createAt: Date.now()\r\n                  ,name: name\r\n                  ,filters: []\r\n                } ).then( () => {\r\n                  this.albumUp( albumID ).then( () => {\r\n                    resolve( {success: true} )\r\n                  } ).catch( err => reject( err ) )\r\n                } )\r\n                .catch( err => reject( err ) )\r\n              }\r\n            }\r\n          )\r\n\r\n        } )\r\n        .catch( err => reject( {\r\n          status: 404\r\n        } ) )\r\n         \r\n      } ) ;\r\n\r\n    }\r\n    ,rnameImg( pictureID , rname , pictureAlbumID) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        \r\n        if(\r\n          !(pictureID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refPicture = this.pictures.doc( pictureID ) ;\r\n\r\n          this.pictures.get()\r\n          .then( QuerySnapshot  => {\r\n\r\n            if( \r\n              !QuerySnapshot.docs.find( doc => (\r\n                doc.get('name') === rname &&\r\n                doc.get('album_id') === pictureAlbumID                 \r\n              ) ) \r\n            ) {    \r\n              refPicture.get()\r\n                .then( pic => {\r\n                  refPicture.set({\r\n                    blob: pic.get('blob')\r\n                    ,album_id: pic.get('album_id')\r\n                    ,filters: pic.get('filters') || []\r\n                    ,name: rname\r\n                    ,createAt: pic.get('createAt') || Date.now()\r\n                  }).then( () => resolve( {success:true} ) )\r\n                  .catch( err => reject( err ) ) ;\r\n                } ).catch( err => resolve( {\r\n                  success:false\r\n                  ,status: 404\r\n                  ,err: err\r\n                } ) ) ;\r\n            } else {\r\n              resolve( {\r\n                success: false\r\n                ,status: 401 // 401 Bad Request\r\n                ,details: 'name already exists'\r\n              } )\r\n            }\r\n\r\n          } )\r\n          .catch( () => reject() ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,rnameAlbum( albumID , rname  ) {\r\n\r\n      return new Promise( ( resolve , reject ) => {\r\n\r\n        if(\r\n          !(albumID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          if( album.get('name') === rname ) {\r\n            resolve({\r\n              success: true\r\n            }) ;\r\n          }\r\n\r\n          refAlbum.set({\r\n            name: rname\r\n            ,createAt: album.get('createAt')\r\n            ,size: album.get('size')\r\n            ,user_id: album.get('user_id')\r\n          }).then( () => (\r\n            resolve( { success: true } )\r\n          ) ) ;\r\n\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ; \r\n    }\r\n    ,getAlbumsOf( userID ) {\r\n\r\n      return new Promise( ( resolve , reject ) => (\r\n          this.albums.get()\r\n            .then( QuerySnapshot => (\r\n              resolve( QuerySnapshot.docs.filter( doc => (\r\n                doc.get('user_id').trim() === userID.trim()\r\n              ) ) )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n      )  ) ;\r\n\r\n    }\r\n    ,removePicture: function( pictureID ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !pictureID ) return reject();\r\n\r\n        const refImg = this.pictures.doc( pictureID ) ;\r\n\r\n        if( !refImg || !( refImg.get instanceof Function ) ) return resolve({\r\n          status: 404,\r\n          success: false\r\n        });\r\n\r\n        refImg.get().then( pic => {\r\n\r\n          refImg.delete().then(() => { \r\n\r\n            this.albumDown( pic.get('album_id') ).then( () => {\r\n              resolve({\r\n                success: true\r\n              } )\r\n            } ).catch( err => reject( err ) ) ;\r\n          })\r\n          .catch( () => reject() ) ;\r\n        }) ;\r\n\r\n      });\r\n    }\r\n    ,removeAlbum: function(albumID) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !albumID ) reject({\r\n          status: 401\r\n          ,id: albumID\r\n        });\r\n        \r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        if( !refAlbum || !(refAlbum.get instanceof Function) )\r\n          reject( {\r\n            refAlbum: refAlbum\r\n            ,id: albumID\r\n            ,status: 404\r\n          } );\r\n\r\n        refAlbum.get().then( () => {\r\n            refAlbum.delete()\r\n              .then( () => {\r\n\r\n                this.getPictureOf( albumID ).then( pics => {\r\n\r\n                  pics.map( pic => (\r\n                      this.removePicture( pic.id )\r\n                 ) ) ;\r\n\r\n                  resolve({success: true});\r\n                }  ).catch( err => reject( err ) )\r\n\r\n              } )\r\n              .catch( err => reject( err ) )\r\n            ;\r\n          } ).catch( err => reject( err ) )\r\n      } )\r\n    }\r\n  }\r\n;\r\n\r\nexport default collections;\r\n","export default {\r\n    apiKey: \"AIzaSyBTZQaxY4tK4wD1CFIAdZYoBNIFNXjpHZI\",\r\n    authDomain: \"picsy-827e5.firebaseapp.com\",\r\n    databaseURL: \"https://picsy-827e5.firebaseio.com\",\r\n    projectId: \"picsy-827e5\",\r\n    storageBucket: \"picsy-827e5.appspot.com\",\r\n    messagingSenderId: \"228973782937\",\r\n    appId: \"1:228973782937:web:8c6a64e32d37e3c8c7d508\"\r\n};","import React from 'react';\r\nimport './Loader.css';\r\nimport LoaderTime from './loader-timer.svg';\r\nimport LoaderEarth from './loader-earth.svg';\r\nimport LoaderBtn from './loader-button.svg';\r\nimport LoaderAzure from './loader-azure.svg';\r\n\r\nfunction assoceType( type ) {\r\n\r\n    const assoc = {\r\n        'timer': LoaderTime\r\n        ,'btn': LoaderBtn\r\n        ,'button': LoaderBtn\r\n        ,'earth': LoaderEarth\r\n        ,'azure': LoaderAzure\r\n        ,'az': LoaderAzure\r\n    } ;\r\n\r\n    return assoc[ type ] || LoaderTime ;\r\n}\r\n\r\nfunction Loader({\r\n    className\r\n    ,width\r\n    ,full\r\n    ,type\r\n    ,bg\r\n}){\r\n\r\n    return (\r\n        <figure\r\n            className={`Loader ${className} ${full ? 'full' :''}`}\r\n            style={{\r\n                backgroundColor: bg || 'transparent'\r\n            }}\r\n        >\r\n            <img\r\n                alt={`loader ${type}`}\r\n                src={assoceType( type )}\r\n                width={width}\r\n            />\r\n        </figure>\r\n    ) ;\r\n\r\n}\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport './Notif.css';\r\n\r\nfunction assoceIconType( type ) {\r\n\r\n    const assoc = {\r\n        'warn': 'fas fa-exclamation-triangle'\r\n        ,'warning': 'fas fa-exclamation-triangle'\r\n        ,'error':'fas fa-bomb'\r\n        ,'infos': 'fas fa-info-circle'\r\n        ,'success': 'fas fa-check-circle'\r\n        ,'bug': 'fas fa-bug'\r\n        , 'mask': 'fas fa-mask'\r\n        , 'back': 'fas fa-hand-point-left'\r\n    } ;\r\n\r\n    return assoc[ type ] || assoc['mask'] ;\r\n}\r\n\r\nfunction Notif( {\r\n    type\r\n    ,className\r\n    ,onClose\r\n    ,text\r\n} ) {\r\n\r\n    const [refNotif] = useState( React.createRef() );\r\n    const [hide,setHide] = useState( false );\r\n\r\n    return (\r\n        <section\r\n            ref={refNotif}\r\n            className={`Notif ${className} ${type} ${hide ? 'hide':''}`}\r\n        >\r\n            <p>\r\n                <i className={assoceIconType(type)}></i>\r\n\r\n                <span>\r\n                    {text}\r\n                </span>\r\n            </p>\r\n\r\n            {\r\n                onClose instanceof Function && (\r\n                    <aside>\r\n                        <button\r\n                            onClick={() => onClose( {\r\n                                ref: refNotif\r\n                                ,notif: refNotif.current\r\n                                ,remove() {\r\n\r\n                                    if( \r\n                                        refNotif.current instanceof Node &&\r\n                                        refNotif.current.parentNode instanceof Node\r\n                                    ) {\r\n                                    \r\n                                        refNotif.current.parentNode.removeChild( refNotif.current );\r\n                                        return true;\r\n                                    }\r\n                                    return false;\r\n                                }\r\n                                ,hide() {\r\n                                    setHide( true );\r\n                                }\r\n                            })}\r\n                        >\r\n                            <i className=\"fas fa-times\"></i>\r\n                        </button>\r\n                    </aside>\r\n                )\r\n            }\r\n            \r\n\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Notif;","import React from 'react';\r\n\r\nfunction InputFile({\r\n    className\r\n    ,label\r\n    ,name\r\n    ,id\r\n    ,onChange\r\n    ,autoRead\r\n    ,notif\r\n}){\r\n    return (\r\n        <>\r\n            {label && (\r\n                <label htmlFor={id || name}>\r\n                    {label}\r\n                </label>\r\n            ) }\r\n            <input\r\n                className={className}\r\n                type=\"file\"\r\n                name={name}\r\n                id={id || name}\r\n                onChange={e => {\r\n\r\n                    if( !(onChange instanceof Function) ) return;\r\n\r\n                    const file = e.target.files[0] ;\r\n                    \r\n                    if( autoRead ) {\r\n\r\n                        let blob = null;\r\n\r\n                        const reader = new FileReader();\r\n                        const evt = e;\r\n\r\n                        reader.addEventListener('load' , e => {\r\n\r\n                            blob = e.target.result;\r\n                            onChange( file , blob , evt ) ;\r\n                        } ) ;\r\n\r\n                        reader.readAsDataURL( file );\r\n                    } else {\r\n\r\n                        onChange( file , e ) ;\r\n                    }\r\n                }}\r\n            />\r\n            {notif}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputFile;","import React from 'react';\r\nimport './SignIn.css';\r\nimport ReactToolTip from 'react-tooltip';\r\n\r\nfunction SignIn() {\r\n    return (\r\n        <>\r\n          <ReactToolTip \r\n                id=\"git-link\"\r\n                type=\"info\"\r\n                getContent={()=> (\r\n                    <span style={{\r\n                        fontSize: \"16px\"\r\n                    }}>\r\n                        <i className=\"fas fa-info-circle\"></i>\r\n                        &nbsp;dépot github\r\n                    </span>\r\n                )} \r\n                effect=\"solid\"\r\n                place=\"top\"\r\n            />\r\n        \r\n            <p className=\"sign-in\">\r\n                Application front UI/UX développer <span>avec le CRA de Reactjs&nbsp;</span>\r\n                par\r\n                \r\n                &nbsp;<a data-for=\"git-link\" data-tip=\"lien github\" href=\"https://github.com/Orivoir/picsy\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                        &nbsp;Samuel Gaborieau\r\n                </a>\r\n            </p>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport SignIn from './../SignIn/SignIn';\r\nimport './FormUser.css';\r\n\r\nexport default class FormUser extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            onSubmit\r\n            ,onChangeAvatar\r\n            ,onChangePseudo\r\n            ,valuePseudo\r\n            ,fileName\r\n            ,avatar\r\n            ,loaderSubmit\r\n            ,errors\r\n        } = this.props;\r\n\r\n        return (\r\n            <form\r\n                className=\"FormUser\"\r\n                onSubmit={onSubmit}\r\n            >\r\n                <section>\r\n                    <div className=\"field-wrap-pseudo\">\r\n                        <input\r\n                            placeholder=\"pseudo\"\r\n                            type=\"text\" \r\n                            name=\"pseudo\"\r\n                            autoComplete=\"off\" \r\n                            onChange={onChangePseudo}\r\n                            value={valuePseudo}\r\n                        />\r\n                        <label \r\n                            htmlFor=\"pseudo\" \r\n                            className={`o-hide ${valuePseudo.trim().length ? 'active':''}`}\r\n                        >\r\n                            pseudo\r\n                        </label>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <InputFile\r\n                            className=\"hide\"\r\n                            label={\r\n                                <>\r\n                                    <span className=\"hide micro-system\">\r\n                                        {\r\n                                            fileName ?\r\n                                                fileName.length > 7 ?\r\n                                                fileName.slice( 0 , 7 ) + ' ...' :\r\n                                                fileName :\r\n                                                'avatar'\r\n                                        }\r\n                                    </span>\r\n                                    <figure>\r\n                                        <button \r\n                                            type=\"button\"\r\n                                            onClick={e => {\r\n                                                e.target.parentNode.click();\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={avatar}\r\n                                                alt=\"avatar\"\r\n                                                width={64}\r\n                                            />\r\n                                        </button>\r\n                                        <figcaption>\r\n                                            changer\r\n                                        </figcaption>\r\n                                    </figure>\r\n                                </>\r\n                            }\r\n                            name=\"avatar\"\r\n                            autoRead\r\n                            onChange={onChangeAvatar}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">\r\n                        {loaderSubmit || 'suivant'}\r\n                    </button>\r\n                </section>\r\n            \r\n                <SignIn />\r\n\r\n                {errors.map( error => (\r\n                        error\r\n                ) )}\r\n\r\n            </form>\r\n        ) ;\r\n\r\n    }\r\n\r\n} ;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './Logged.css' ;\r\n\r\nexport default class Logged extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader full type=\"az\" width={256} bg=\"rgba(0,0,0,.93)\" />\r\n        ,u: false\r\n        ,redirect: false\r\n        ,pseudo: \"\"\r\n        ,avatar: Logged.defaultAvatar\r\n        ,errors: []\r\n        ,loaderButton: false\r\n        ,fileName: \"\"\r\n    } ;\r\n\r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n\r\n        this.avatarChange = this.avatarChange.bind( this );\r\n        this.onSubmit = this.onSubmit.bind( this );\r\n\r\n        document.title = 'Picsy | Log in';\r\n    }\r\n\r\n    /**\r\n     * @bind [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onSubmit( e ) {\r\n\r\n        e.preventDefault();\r\n\r\n        const {pseudo} = this.state;\r\n\r\n        if(\r\n            !(pseudo.length >= 2 &&\r\n            pseudo.length <=40)\r\n        ) {\r\n            this.setState(state => ( {\r\n                errors: [ ...state.errors, <Notif\r\n                    key={Date.now()} \r\n                    text=\"pseudo taille invalide\"\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) ) ;\r\n        } else{\r\n\r\n            const {avatar} = this.state;\r\n\r\n            this.setState( {\r\n                loaderButton: <Loader width={16} type=\"btn\" />\r\n            } , () => {\r\n\r\n                this.props.db.users.add( {\r\n                    pseudo: pseudo\r\n                    ,avatar: avatar\r\n                } ).then( data => {\r\n\r\n                    if( !this.userID )\r\n                        this.userID = [];\r\n\r\n                    this.userID.push(data.id);\r\n\r\n                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                    this.setState( {\r\n                        redirect: <Redirect to=\"/account-list\" />\r\n                    } ) ;\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @bind [constructor]\r\n     * @param {File} file \r\n     * @param {string} blob \r\n     * @param {SyntheticEvent} e \r\n     */\r\n    avatarChange( file, blob , e ) {\r\n\r\n        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n            this.setState( {\r\n                avatar: blob\r\n                ,fileName: file.name\r\n            } ) ;\r\n            \r\n        } else {\r\n            \r\n            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n            \r\n            this.setState( state => ( {\r\n                errors: [ ...state.errors , <Notif\r\n                    key={Date.now()} \r\n                    text={mssg}\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID || !this.userID.length ) {\r\n            this.setState( {\r\n                loader: false \r\n            } ) ;\r\n        } else {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/account-list\" />\r\n            } ) ;\r\n            console.log('SHOW ACCOUNT LIST');\r\n            \r\n            // this.props.db.getUser(this.userID)\r\n            // .then( user => {\r\n\r\n            //     if( user ) {\r\n            //         this.setState( {\r\n            //             redirect: <Redirect to=\"/dash\" />\r\n            //         } ) ;\r\n                    \r\n            //     } else {\r\n            //         this.setState( {\r\n            //             loader: false\r\n            //         } ) ;\r\n            //     }\r\n            // } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader\r\n            ,redirect\r\n            ,avatar\r\n            ,errors\r\n            ,loaderButton\r\n            ,fileName\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"Logged\"\r\n            >\r\n                {loader}\r\n                {redirect}\r\n\r\n                <FormUser\r\n                    onSubmit={this.onSubmit}\r\n                    onChangePseudo={e => (\r\n                        this.setState({pseudo:e.target.value.trim()})\r\n                    )}\r\n                    avatar={avatar}\r\n                    valuePseudo={this.state.pseudo}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    loaderSubmit={loaderButton}\r\n                    onChangeAvatar={(file,blob,e) => (\r\n                        this.avatarChange(file,blob,e)\r\n                    )}\r\n                />\r\n\r\n                <section className=\"banner-sm-screen hide\">\r\n\r\n                        <p>\r\n                            Picsy et Lorem dolore veniam culpa velit sint ,\r\n                            Anim cupidatat mollit consequat et ipsum ipsum eu ullamco eu ullamco elit non.\r\n                        </p>\r\n\r\n                        <button type=\"button\">\r\n                            get started\r\n                        </button>\r\n                </section>\r\n\r\n            </section>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './User.css';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ReactToolTip from 'react-tooltip' ;\r\nimport SignIn from './../SignIn/SignIn';\r\n\r\nconst defaultAvatar = \"\";\r\n\r\nfunction User({u,load}) {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"User\">\r\n                {load || (\r\n                    <>\r\n                        <h1>\r\n                            <strong>Picsy</strong> application\r\n                            version 0.2.0-beta\r\n                        </h1>\r\n                        <div className=\"content-user\">\r\n                            <figure>\r\n                            <img\r\n                                src={u.get('avatar') || defaultAvatar}\r\n                                alt=\"avatar\"\r\n                                width=\"125\"\r\n                            />\r\n                            <figcaption>\r\n                                {u.get('pseudo')}\r\n                            </figcaption>\r\n                        </figure>\r\n                            \r\n                            <ReactToolTip \r\n                                id=\"user\"\r\n                                type=\"info\"\r\n                                getContent={()=> (\r\n                                    <p style={{\r\n                                        fontSize: \"16px\"\r\n                                    }}>\r\n                                        <i className=\"fas fa-info-circle\"></i>\r\n                                        &nbsp;ajouté un compte\r\n                                    </p>\r\n                                )} \r\n                                effect=\"solid\"\r\n                                place=\"bottom\"\r\n                            />\r\n                            \r\n                            <p data-for=\"user\" data-tip=\"<em>ajouté</em> un compte\">\r\n                                <Link to=\"/add-account\">\r\n                                    <i className=\"fas fa-user-plus\"></i>\r\n                                </Link>\r\n                            </p>\r\n\r\n                            \r\n                            <ReactToolTip \r\n                                id=\"change\"\r\n                                type=\"info\"\r\n                                getContent={()=> (\r\n                                    <p style={{\r\n                                        fontSize: \"16px\"\r\n                                    }}>\r\n                                        <i className=\"fas fa-info-circle\"></i>\r\n                                        &nbsp;changé de compte\r\n                                    </p>\r\n                                )} \r\n                                effect=\"solid\"\r\n                                place=\"bottom\"\r\n                            />\r\n\r\n                            <p\r\n                                data-for=\"change\"\r\n                                data-tip=\"changer de compte\"\r\n                            >\r\n                                <Link to=\"/account-list\">\r\n                                    <i class=\"fas fa-person-booth\"></i>\r\n                                </Link>\r\n                            </p>\r\n                        </div>\r\n                        <SignIn />\r\n                    </>\r\n                )}\r\n            </section>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default User;","import React,{useEffect} from 'react';\r\nimport './Confirm.css'\r\n\r\nconst \r\n    confirmRef = React.createRef()\r\n    ,btnsRef = {\r\n        confirm: React.createRef()\r\n        ,cacel: React.createRef()\r\n    }\r\n    , dataBack = {\r\n        ref: confirmRef,\r\n        confirm: confirmRef.current\r\n    }\r\n;\r\n\r\nfunction Confirm({\r\n    onConfirm,\r\n    onCancel,\r\n    onFinally,\r\n    textConfirm,\r\n    textCancel,\r\n    textGlobal,\r\n    text,\r\n    className,\r\n    autoFocus,\r\n    autoFocusCancel,\r\n    autoFocusConfirm,\r\n    icons,\r\n    title\r\n}) {\r\n\r\n    useEffect( () => {\r\n        if(autoFocusCancel) {\r\n            btnsRef.cancel.current.focus() ;\r\n        } else if( autoFocusConfirm || autoFocus ) {   \r\n            btnsRef.confirm.current.focus() ;\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <section\r\n            className={`Confirm ${className}`}\r\n            ref={confirmRef}\r\n        >\r\n            {( title && <h2>{title}</h2> )}\r\n\r\n            <p>\r\n                {textGlobal || text}\r\n            </p>\r\n\r\n            <aside>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"confirm\"\r\n                    onClick={() => {\r\n                        const\r\n                            conf = onConfirm instanceof Function ? onConfirm: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n\r\n                        conf( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                    ref={btnsRef.confirm}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-check\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textConfirm}\r\n                    </span>\r\n                </button>\r\n                \r\n                <button\r\n                    className=\"cancel\"\r\n                    ref={btnsRef.cancel}\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n\r\n                        const\r\n                            cancel = onCancel instanceof Function ? onCancel: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n                        cancel( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-times\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textCancel}\r\n                    </span>\r\n                </button>\r\n            </aside>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Confirm;\r\n","import React,{useState,useEffect} from 'react';\r\nimport Confirm from './../Confirm/Confirm';\r\nimport './ControlItem.css';\r\nimport ReactToolTip from 'react-tooltip';\r\n\r\nfunction ControlItem({\r\n    manualOpen,\r\n    open,\r\n    onClose,\r\n    onRemove,\r\n    onRname,\r\n    loadRname,\r\n    pic,\r\n    errorsRname,\r\n    onOpen,\r\n    itemType,\r\n    closer\r\n}) {\r\n\r\n    const [confirm,setConfirm] = useState(false);\r\n    const [inputRname,setInputRname] = useState(false);\r\n    const [rname,setRname] = useState(\"\");\r\n    const [firstControl] = useState( React.createRef() );\r\n    const [rnameRef] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( open && !confirm )\r\n            setTimeout(() => {\r\n                if( firstControl.current )\r\n                firstControl.current.focus()\r\n            } , 250);\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <ul\r\n            className={`ControlItem`}\r\n            onMouseEnter={() => onOpen()}\r\n            onMouseLeave={() => {\r\n                if( !manualOpen ) {\r\n                    onClose()\r\n                }\r\n            }}\r\n        >\r\n            <li\r\n                className={`${open && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n                \r\n                <ReactToolTip \r\n                    id=\"rname\"\r\n                    type=\"info\"\r\n                    getContent={()=> (\r\n                        <p style={{\r\n                            fontSize: \"16px\"\r\n                        }}>\r\n                            <i className=\"fas fa-info-circle\"></i>\r\n                            &nbsp;renomé l'{itemType !== 'album' ? 'image': 'album'}\r\n                        </p>\r\n                    )} \r\n                    effect=\"solid\"\r\n                    place=\"top\"\r\n                />\r\n                <button\r\n                    data-for=\"rname\"\r\n                    data-tip=\"renomé\"\r\n                    onContextMenu={e => e.preventDefault()}\r\n                    ref={firstControl}\r\n                    className={`${inputRname ? 'hide':''}`}\r\n                    onClick={() => {\r\n                        setInputRname(true);\r\n                        setTimeout(() => \r\n                            rnameRef.current.focus(), 120\r\n                        );\r\n                    }}\r\n                >\r\n                    <i className=\"fas fa-pen\"></i>\r\n                </button>\r\n\r\n                \r\n                <form\r\n                        className={`${inputRname ? '':'close'}`}\r\n                        onSubmit={e => {\r\n                            e.preventDefault();\r\n                            onRname( rname );\r\n                        }}\r\n                    >\r\n\r\n                        <input\r\n                            ref={rnameRef}\r\n                            className={`input-rname rname ${!inputRname ? 'hide':'open'}`}\r\n                            type=\"text\"\r\n                            name=\"rname\"\r\n                            onChange={e => setRname( e.target.value )}\r\n                            autoComplete=\"off\"\r\n                            placeholder={pic.get('name')}\r\n                            disabled={!!loadRname}\r\n                        />\r\n \r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => setInputRname(false)}\r\n                            className={`rname-btn ${inputRname ? '':'hide'}`}\r\n                        >\r\n                            {\r\n                                loadRname ||\r\n                                <i className=\"fas fa-times\"></i>\r\n                            }\r\n                        </button>\r\n\r\n                        {\r\n                            errorsRname.map( error => (\r\n                                error\r\n                            )  )\r\n                        }\r\n\r\n                </form>\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname ? \"\":\"hide\"}`}\r\n            >\r\n                {\r\n\r\n                    confirm || (\r\n                        <>\r\n                            <ReactToolTip \r\n                                id=\"remove\"\r\n                                type=\"info\"\r\n                                getContent={()=> (\r\n                                    <p style={{\r\n                                        fontSize: \"16px\"\r\n                                    }}>\r\n                                        <i className=\"fas fa-info-circle\"></i>\r\n                                        &nbsp;supprimé l'{itemType !== 'album' ? 'image': 'album'}\r\n                                    </p>\r\n                                )} \r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                            />\r\n                            <button\r\n                                data-tip=\"supprimé\"\r\n                                data-for=\"remove\"\r\n                                onClick={() =>\r\n                                    setConfirm(\r\n                                        <Confirm\r\n                                            onConfirm={() => {\r\n                                                onRemove();\r\n                                            }}\r\n                                            onFinally={() => setConfirm( false )}\r\n                                            text={`êtes vous sur de vouloir supprimez l'${itemType} ${pic.get('name')}`}\r\n                                            textConfirm=\"oui\"\r\n                                            textCancel=\"non\"\r\n                                            className=\"confirm-remove confirm-remove-picture\"\r\n                                            // title=\"Suppréssion\"\r\n                                            icons\r\n                                            autoFocus\r\n                                    />\r\n                                )}\r\n                            >\r\n                                <i className=\"fas fa-trash\"></i>\r\n                            </button>\r\n                        </>       \r\n                    )\r\n                }\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname && closer && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n                \r\n                <ReactToolTip \r\n                    id=\"close\"\r\n                    type=\"info\"\r\n                    getContent={()=> (\r\n                        <p style={{\r\n                            fontSize: \"16px\"\r\n                        }}>\r\n                            <i className=\"fas fa-info-circle\"></i>\r\n                            &nbsp;fermé le menu\r\n                        </p>\r\n                    )} \r\n                    effect=\"solid\"\r\n                    place=\"top\"\r\n                />\r\n                <button\r\n                    data-for=\"close\"\r\n                    data-tip=\"fermé le menu\"\r\n                    onClick={() => onClose instanceof Function ? onClose(): null}\r\n                >\r\n                    <i className=\"fas fa-times\"></i>\r\n                </button>\r\n            </li>\r\n        </ul>\r\n    ) ;\r\n}\r\n\r\nexport default ControlItem;","import React,{useState} from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './ItemAlbum.css';\r\n\r\nconst\r\n    btnLinkRef = React.createRef()\r\n;\r\n\r\nfunction ItemAlbum({\r\n    item,\r\n    db\r\n}) {\r\n\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [name,setName] = useState( item.get('name') );\r\n    const [manualControl,setManualControl] = useState( false );\r\n    const [redirect,setRedirect] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [refItem] = useState(React.createRef());\r\n\r\n    return (\r\n        <>\r\n            {redirect}\r\n            { visible && (\r\n                <li\r\n                onMouseEnter={() => setControl(true)}\r\n                onMouseLeave={() => setControl(false)}\r\n                className={`AlbumItem ${visible ? '':'hide'}`}\r\n                ref={refItem}\r\n            >\r\n                <div className=\"number-item\">\r\n                    {item.get('size')} images\r\n                </div>\r\n                <button\r\n                    className=\"album-btn\"\r\n                    ref={btnLinkRef}\r\n                    onKeyDown={e => {\r\n                        if( /menu/i.test(e.key) )\r\n                            setControl( true );\r\n                            setManualControl( true );\r\n                    } }\r\n                    onClick={() => setRedirect( <Redirect to={`album/${item.id}`} /> )}\r\n                    onContextMenu={e => e.preventDefault()}\r\n                >\r\n                    <Link\r\n                        onPointerUp={e => {\r\n                            if(e.nativeEvent.which === 3 ) {\r\n\r\n                                setControl(true);\r\n                                setManualControl( true );\r\n                            }\r\n                        }}\r\n                        to={`album/${item.id}`}\r\n                    >\r\n                        {name}\r\n                    </Link>\r\n                </button>\r\n\r\n                <section>\r\n\r\n                    <aside>      \r\n                        <ControlItem\r\n                            itemType=\"album\"\r\n                            onRemove={() => {\r\n                                db.removeAlbum( item.id ).then( () => {\r\n                                    setVisible( false );\r\n                                    setControl( false );\r\n                                } )\r\n                            }}\r\n                            manualOpen={manualControl}\r\n                            onOpen={() => setControl( true )}\r\n                            onRname={rname => {\r\n                                setLoadRname( <Loader \r\n                                    width={12}\r\n                                    type=\"azure\"\r\n                                /> ) ;\r\n\r\n                                db.rnameAlbum( \r\n                                    item.id\r\n                                    ,rname\r\n                                ).then( () => {\r\n                                \r\n                                    // success\r\n                                    setErrors(\r\n                                        [...errors , <Notif\r\n                                            onClose={({remove}) => remove()} \r\n                                            key={Date.now()}\r\n                                            text=\"l'album à été renomé avec succés\"\r\n                                            type=\"success\"\r\n                                        />]\r\n                                    ) ;\r\n                                    setName( rname );\r\n                                } );\r\n                            }}\r\n                            loadRname={loadRname}\r\n                            onClose={() => {/* silence is <feature /> */}}\r\n                            pic={item}\r\n                            open={control}\r\n                            errorsRname={errors}\r\n                        />\r\n                        \r\n                    </aside>\r\n                </section>\r\n            </li>\r\n            ) }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemAlbum;","import React  from 'react';\r\nimport './ListAlbums.css';\r\nimport ItemAlbum from './ItemAlbum';\r\nimport Notif from '../Notif/Notif';\r\nimport './ListAlbums.css';\r\n\r\nfunction ListAlbums({albums,load,db}) {\r\n\r\n    return (\r\n        <ul className=\"ListAlbums list\">\r\n            {\r\n                load || (\r\n                    albums.length ?\r\n                    albums.map( item => (\r\n                        <ItemAlbum\r\n                            item={item}\r\n                            key={item.id}\r\n                            db={db}\r\n                        />\r\n                    )) : (\r\n                        <Notif \r\n                            type=\"infos\"\r\n                            text=\"vous n'avez aucun albums\"\r\n                        />\r\n                    )\r\n                    \r\n                )\r\n            }\r\n        </ul>\r\n    ) ;\r\n}\r\n\r\nexport default ListAlbums;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport User from './../../core/User/User';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport ListAlbums from '../../core/ListAlbulms/ListAlbums';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport './Dash.css';\r\n\r\nexport default class Dash extends React.Component {\r\n\r\n    state = {\r\n\r\n        loader: {\r\n            u: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" /> ,\r\n            albums: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" />\r\n        } ,\r\n        u: null,\r\n        albums: [],\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID') ;\r\n\r\n        document.title = 'Picsy | Dash';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n                    this.setState( state => ({\r\n                        loader: { u: false, albums: state.loader.albums }\r\n                        ,u: user \r\n                    } ) , () => {\r\n\r\n                        this.props.db.getAlbumsOf( user.id ).then( docs => {\r\n\r\n                            this.setState( state => ({\r\n                                loader : { u: state.loader.u, albums: false  },\r\n                                albums: docs\r\n                            }))\r\n                        } )\r\n\r\n                    }  ) ;\r\n                    \r\n                } else {\r\n                    this.setState( {\r\n                        loader: {u: false, albums: false},\r\n                        redirect: <Redirect to=\"/\" />\r\n                    } ) ;\r\n                }\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader,\r\n            redirect,\r\n            albums,\r\n            u\r\n        } = this.state ;\r\n\r\n        return(\r\n            <section\r\n                className=\"Dash\"\r\n            >\r\n                {redirect}\r\n\r\n                <User \r\n                    u={u}\r\n                    load={loader.u} \r\n                />\r\n\r\n                 \r\n                <ListAlbums\r\n                    db={this.props.db}\r\n                    albums={albums} \r\n                    load={loader.albums}\r\n                />\r\n\r\n                <ReactTooltip\r\n                    id=\"add-album\"\r\n                    type=\"info\"\r\n                    getContent={()=> (\r\n                        <p style={{\r\n                            fontSize: \"16px\"\r\n                        }}>\r\n                            <i className=\"fas fa-info-circle\"></i>\r\n                            &nbsp;créé un album\r\n                        </p>\r\n                    )} \r\n                    effect=\"solid\"\r\n                    place=\"top\"\r\n                />\r\n                <aside className=\"add-album\">\r\n                    <p>\r\n                        <Link\r\n                            data-for=\"add-album\"\r\n                            data-tip=\"créé un album\"\r\n                            to=\"/add-album\"\r\n                        >\r\n                            <i className=\"fas fa-folder-plus\"></i>\r\n                        </Link>\r\n                    </p>\r\n                </aside>\r\n\r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport Notif from './../Notif/Notif';\r\nimport './FormAdd.css';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nfunction FormAdd({type,onSubmit,load,className,voidForm}){\r\n\r\n    const [picture,setPicture] = useState(\"https://image0.flaticon.com/icons/png/128/189/189334.png\");\r\n    const [errors,setErrors] = useState([]);\r\n    const [name,setName] = useState(\"\");\r\n    const [refName] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( voidForm ) {\r\n            refName.current.value = \"\";\r\n        }\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <>\r\n            <form\r\n            className={`FormAdd ${className}`}\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n\r\n                const data = {\r\n                    name: name\r\n                    ,picture: picture\r\n                    ,e: e\r\n                } ;\r\n\r\n                if( /album/i.test(type) )\r\n                    delete data.picture;\r\n\r\n                onSubmit( data );\r\n            }}\r\n        >\r\n\r\n            <div className=\"field-wrap-pseudo\">\r\n                <input\r\n                    ref={refName}\r\n                    type=\"text\"\r\n                    placeholder={`nom de l'${!/album/i.test(type) ? 'image':'album' }`}\r\n                    autoComplete=\"off\"\r\n                    onChange={({target}) => setName( target.value ) }\r\n                />\r\n                <label \r\n                    htmlFor=\"name\"\r\n                    className={`${!!name.length ? 'active':'o-hide'}`}\r\n                >\r\n                    nom d'{!/album/i.test(type) ? 'image':'album' }\r\n                </label>\r\n            </div>\r\n\r\n            {\r\n                !/album/i.test(type) ?\r\n                <InputFile\r\n                    className=\"hide\"\r\n                    name=\"picture\"\r\n                    label={\r\n                        <>\r\n                        <ReactTooltip\r\n                                id=\"add-picture\"\r\n                                type=\"info\"\r\n                                getContent={()=> (\r\n                                    <p style={{\r\n                                        fontSize: \"16px\"\r\n                                        ,margin: 0\r\n                                    }}>\r\n                                        <i className=\"fas fa-info-circle\"></i>\r\n                                        &nbsp;ajouté une image\r\n                                    </p>\r\n                                )}    \r\n                                effect=\"solid\"\r\n                                place=\"top\"\r\n                            />\r\n                            <figure\r\n                                data-tip=\"ajouté une image\"\r\n                                data-for=\"add-picture\"\r\n                            >\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={e =>  e.target.parentNode.click()}\r\n                                >\r\n                                    <img\r\n                                        src={picture}\r\n                                        alt=\"ajouté\"\r\n                                        width={64}\r\n                                    />\r\n                                </button>\r\n                            </figure>\r\n                        </>\r\n                    }\r\n                    autoRead\r\n                    onChange={(file,blob,e) => {\r\n                        if(\r\n                            file.size <= 1e6 &&\r\n                            /image/i.test(file.type)\r\n                        ) {\r\n                            setPicture( blob );\r\n                        } else {\r\n\r\n                            const mssg = file.size > 1e6 ? \r\n                                \"fichier trop volumineux\":\r\n                                \"ce fichier n'est pas une image valide\"\r\n                            ;\r\n                            \r\n                            setErrors( [...errors , \r\n                                <Notif\r\n                                    key={Date.now()} \r\n                                    type=\"error\"\r\n                                    text={mssg}\r\n                                    onClose={({remove}) => remove()}\r\n                                />\r\n                            ] ) ;\r\n                        }\r\n                    }}\r\n                />\r\n                : null\r\n            }\r\n\r\n            <button\r\n                type='submit'\r\n                disabled={!!load}\r\n            >\r\n                {\r\n                    load || (\r\n                        <span>\r\n                            ajouté l'{!/album/i.test(type) ? 'image' : 'album'}\r\n                        </span>\r\n                    )\r\n                }\r\n                \r\n            </button>\r\n\r\n        </form>\r\n        {errors.map( error => error )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default FormAdd;","import React from 'react';\r\nimport './ImgFilter.css';\r\n\r\nconst buildFilter = filters => {\r\n\r\n    if( !(filters instanceof Array) ) return '';\r\n\r\n    let styles = '';\r\n\r\n    filters.forEach( filter => {\r\n\r\n        try {\r\n\r\n            let f = null;\r\n\r\n            if( typeof filter === 'string' ) {\r\n\r\n                f = JSON.parse( filter ) ;\r\n            } else {\r\n                f = filter;\r\n            }\r\n\r\n            if( !(f.key && f.val) ) return;\r\n            \r\n            if( /%/.test(f.val) && /hue/.test(f.key) ) {\r\n                f.val = f.val.replace('%' , 'deg' );\r\n            }\r\n\r\n            if( \r\n\r\n                f.key === 'hueRotate'\r\n                ) {\r\n                 f.key = 'hue-rotate';\r\n                 \r\n             }\r\n\r\n            styles += `${f.key}(${f.val}) `;\r\n            \r\n        } catch( SyntaxError ) {/* Silence is <feature /> */}\r\n        \r\n    } ) ;\r\n    return styles;\r\n} ;\r\n\r\nfunction ImgFilter( {\r\n    pics,\r\n    load,\r\n    figcaption,\r\n    width,\r\n    classFig\r\n} ) {\r\n\r\n    return (\r\n        <figure\r\n            className=\"ImgFilter\"\r\n        >\r\n            {load || (\r\n                <>\r\n                \r\n                    {figcaption && (\r\n                        <figcaption className={classFig}>\r\n                            {figcaption}\r\n                        </figcaption>\r\n                    )}\r\n                    <img\r\n                        src={pics.get('blob')}\r\n                        alt={pics.get('name')}\r\n                        style={{\r\n                            filter: buildFilter( pics.get('filters') )\r\n                        }}\r\n                        width={width || 300}\r\n                    />\r\n                </>\r\n            )}\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default ImgFilter;\r\n","import React,{useState} from 'react';\r\nimport ReactToolTip from 'react-tooltip';\r\nimport ImgFilter from './../ImgFilter/ImgFilter';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport './ItemImg.css';\r\n\r\nfunction ItemImg({item,db,even}) {\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [btnNav] = useState( React.createRef() );\r\n    const [manualControl,setManualControl] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            { visible && (\r\n                <li\r\n                onMouseEnter={() => btnNav.current.classList.remove('hide')}\r\n                onMouseLeave={() => btnNav.current.classList.add('hide')}\r\n                className={`ItemImg ${visible ? '':'hide'} ${even ? 'even':''}`}\r\n            >\r\n                <Link\r\n                    className=\"link-filter\"\r\n                    to={`/filter/${item.id}`}\r\n                    onContextMenu={e => e.preventDefault()}\r\n                    onPointerDown={e => {\r\n                        if( e.nativeEvent.which === 3 ) {\r\n                            setControl( !control );\r\n                        }\r\n                    }}\r\n                    onKeyDown={e => {\r\n                        if( /menu/i.test(e.key) ) {\r\n\r\n                            setControl( !control );\r\n                        }\r\n                    }}\r\n                >\r\n                    <ReactToolTip \r\n                        id=\"nav\"\r\n                        type=\"info\"\r\n                        getContent={()=> (\r\n                            <span style={{\r\n                                fontSize: \"16px\"\r\n                            }}>\r\n                                <i className=\"fas fa-info-circle\"></i>\r\n                                &nbsp; {!control ? 'ouvrir':'fermer'} menu\r\n                            </span>\r\n                        )} \r\n                        effect=\"solid\"\r\n                        place=\"top\"\r\n                    />\r\n                    <ImgFilter\r\n                        pics={item}\r\n                        figcaption={\r\n                            <div\r\n                                \r\n                                data-for=\"nav\"\r\n                                data-tip=\"menu\"\r\n                                className=\"status-control\"\r\n                            >\r\n\r\n                                <button\r\n                                    ref={btnNav}\r\n                                    className=\"hide\"\r\n\r\n                                    onClick={e => {\r\n                                        e.preventDefault();\r\n                                        \r\n                                        setManualControl( !control );\r\n                                        setControl(!control);\r\n                                    }}\r\n                                >\r\n                                    <i className={!control ? \"fas fa-ellipsis-v\":\"fas fa-times\"}></i>\r\n                                </button>\r\n                            </div>\r\n                        }\r\n                        classFig=\"fig-picsy\"\r\n                    />\r\n                </Link>\r\n\r\n                <ControlItem\r\n                    closer\r\n                    itemType=\"image\"\r\n                    onRemove={() => {\r\n                        db.removePicture( item.id ).then( () => {\r\n                            setVisible( false );   \r\n                            setControl( false );\r\n                        } )\r\n                    }}\r\n                    manualOpen={manualControl}\r\n                    onOpen={() => setControl( true )}\r\n                    onRname={rname => {\r\n                        setLoadRname( <Loader \r\n                            width={12}\r\n                            type=\"azure\"\r\n                        /> ) ;\r\n\r\n                        db.rnameImg(\r\n                            item.id,\r\n                            rname,\r\n                            item.get('album_id')\r\n                        ).then( resp => {\r\n\r\n                            setLoadRname( false );\r\n\r\n                            if( resp.success ) {\r\n\r\n                                // success\r\n                                setErrors(\r\n                                    [...errors , <Notif\r\n                                        onClose={({remove}) => remove()} \r\n                                        key={Date.now()}\r\n                                        text=\"image à été renomé avec succés\"\r\n                                        type=\"success\"        \r\n                                    />]\r\n                                ) ;\r\n\r\n                            } else {\r\n\r\n                                if( resp.status === 401  ) {\r\n                                    // Bad Request\r\n                                    // this name already exists\r\n                                    // in this album\r\n                                    setErrors( [...errors ,<Notif\r\n                                        key={Date.now()} \r\n                                        type=\"error\"\r\n                                        onClose={({remove}) => remove()}\r\n                                        text={`l'image ${rname} exists déjà dans cet album`}\r\n                                    />] ) ;\r\n\r\n                                } else { // 404\r\n                                    // here file not exists\r\n                                    console.warn('file rname 404 with : ' , item.id , item.get('name') );\r\n                                }\r\n\r\n                            }\r\n\r\n                        } ) ;\r\n                    }}\r\n                    loadRname={loadRname}\r\n                    onClose={() => {\r\n                        setControl(false)\r\n                    }}\r\n                    pic={item}\r\n                    open={control}\r\n                    errorsRname={errors}\r\n                />\r\n            </li>\r\n            )\r\n            }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemImg;","import React from 'react';\r\nimport ItemImg from './../ItemImg/ItemImg';\r\nimport './ListImg.css';\r\n\r\nfunction ListImg( {\r\n    items,\r\n    load,\r\n    db\r\n} ) {\r\n\r\n    return (\r\n        <ul\r\n            className=\"ListImg\"\r\n        >\r\n            {\r\n                load || (\r\n                    items.map( (item,key) => (\r\n                        <ItemImg\r\n                            key={item.id}\r\n                            item={item}\r\n                            db={db}\r\n                            even={!!(key%2)}\r\n                        />\r\n                    ) )\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListImg;","import React,{useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport FormAdd from './../FormAdd/FormAdd';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport ListImg from './../ListImg/ListImg';\r\nimport './ShowAlbum.css';\r\n\r\nconst getPics = (db,id) => {\r\n\r\n    return new Promise( (resolve,reject) => {\r\n\r\n        db.getImgsOf( id )\r\n            .then( pics => {\r\n                resolve( pics );\r\n            } )\r\n            .catch( err => reject(err) )\r\n        ;\r\n    } ) ;\r\n}\r\n\r\nfunction ShowAlbum({db,loaderAlbum,album}) {\r\n    \r\n    const {id} = useParams();\r\n    const [loaderAddPicture,setLoaderAddPicture] = useState( false );\r\n    const [errors,setErrors] = useState([]);\r\n    const [voidForm,setVoidForm] = useState( false );\r\n    const [pictures,setPictures] = useState({\r\n        pics:false\r\n        ,loader:<Loader\r\n            width={64}\r\n            bg=\"rgba(0,0,0,.9)\"\r\n            type=\"timer\"\r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className=\"ShowAlbum\">\r\n            {\r\n                !loaderAlbum && (\r\n                    <h2>\r\n                        {album.get('name')}\r\n                    </h2>\r\n                )\r\n            }\r\n            <ListImg\r\n                items={\r\n                    !pictures.pics ?\r\n                    getPics(db,id).then( pics => {\r\n                        setPictures( {\r\n                            pics:pics\r\n                            ,loader:false\r\n                        } )\r\n                    } ) : pictures.pics\r\n                }\r\n                load={pictures.loader}\r\n                db={db}\r\n            />\r\n\r\n            <FormAdd\r\n                type=\"picture\"\r\n                voidForm={voidForm}\r\n                onSubmit={({name,picture}) => {\r\n                    \r\n                    if(\r\n                        name.length <= 42 &&\r\n                        name.length >= 2 &&\r\n                        picture\r\n                    ) {\r\n                        setLoaderAddPicture( <Loader type=\"btn\" width={16} />);\r\n                        db.addPicture(id,name, picture)\r\n                        .then( ({success}) => {\r\n\r\n                            setLoaderAddPicture(false);\r\n\r\n                            if( success ) {\r\n                                setVoidForm( true );\r\n                                setTimeout(() => {\r\n                                    setVoidForm( false );\r\n                                }, 100);\r\n                                setPictures({\r\n                                    pics:null,loader:<Loader\r\n                                    width={64}\r\n                                    bg=\"rgba(0,0,0,.9)\"\r\n                                    type=\"timer\"\r\n                                />})\r\n\r\n                            } else {\r\n                                setErrors( [ ...errors , <Notif\r\n                                    key={Date.now()}\r\n                                    text=\"nom déjà existant\"\r\n                                    type=\"error\"\r\n                                    onClose={({remove}) => remove()}\r\n                                /> ] ) ;\r\n                            }\r\n\r\n                        } ) ;\r\n                    }\r\n                    else {\r\n\r\n                        const mssg = picture ? \"taille de nom invalide\":\"vous n'avez pas envoyé de fichier\"\r\n\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text={mssg}\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                }}\r\n                load={loaderAddPicture}\r\n            />\r\n            {errors.map( error => error )}\r\n\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowAlbum;","import React from 'react';\r\nimport FormAdd from './../../core/FormAdd/FormAdd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ShowAlbum from '../../core/ShowAlbum/ShowAlbum';\r\n\r\nexport default class AlbumRoute extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader width={16} type=\"btn\" />\r\n        ,redirect: false\r\n        ,loadUser: <Loader full width={48} type=\"time\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderAlbum: <Loader full width={48} type=\"az\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,album: null\r\n        ,errors: []\r\n    } ;\r\n\r\n    static add() {\r\n\r\n        return \"add\";\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID');\r\n\r\n        document.title = 'Picsy | Album' ;\r\n\r\n        if( this.props.action !== AlbumRoute.add() ) {\r\n            \r\n            this.props.db.albums.doc( document.location.hash.split('/').pop() )\r\n            .get()\r\n            .then( album => {\r\n                this.setState( {\r\n                    album: album\r\n                    ,loaderAlbum: false\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                loader: false,\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n\r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n                    this.setState( {\r\n                        loader: false,\r\n                        user: user\r\n                        ,loadUser: false\r\n                    } );\r\n                } else {\r\n                    this.setState( {\r\n                        loader: false,\r\n                        redirect: <Redirect to=\"/\" /> \r\n                    } ) ;\r\n                }\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            {action} = this.props\r\n            ,{\r\n                user,\r\n                loader,\r\n                loadUser,\r\n                errors,\r\n                formHide,\r\n                createWithName,\r\n                loaderAlbum,\r\n                album\r\n            } = this.state\r\n        ;\r\n\r\n        return(\r\n            <>\r\n                <User u={user} load={loadUser} />\r\n                {\r\n                    action === AlbumRoute.add() ? (\r\n                        <>\r\n                            <FormAdd\r\n                                load={loader}\r\n                                className={`${formHide ? 'hide':''}`}\r\n                                type=\"album\"\r\n                                onSubmit={({name}) => {\r\n\r\n                                    this.setState( {\r\n                                        loader: <Loader width={16} type=\"btn\" />\r\n                                    } )\r\n\r\n                                    if( name.length >= 2 && name.length <= 42 )\r\n\r\n                                        this.props.db.addAlbum( \r\n                                            name , user.id\r\n                                        ).then( data => {\r\n                                                 \r\n                                            if( data.success )\r\n                                                this.setState( {\r\n                                                    loader: false,\r\n                                                    formHide: true,\r\n                                                    errors: [],\r\n                                                    createWithName: name\r\n                                                } ) ;\r\n                                            else\r\n                                                this.setState( state => ({\r\n                                                    loader: false,\r\n                                                    errors: [...state.errors , (\r\n                                                        <Notif\r\n                                                            key={Date.now()}\r\n                                                            type=\"error\"\r\n                                                            onClose={({remove}) => remove()}\r\n                                                            text={`l'album ${name} existe déjà`}\r\n                                                        />\r\n                                                    )]\r\n                                                } )) ;\r\n                                        } ) ;\r\n                                    else\r\n                                        this.setState( state => ({\r\n                                            errors: [...state.errors , (\r\n                                                <Notif\r\n                                                    key={Date.now()}\r\n                                                    type=\"error\"\r\n                                                    text=\"taille de nom invalide\"\r\n                                                    onClose={({remove}) => remove()}\r\n                                                />\r\n                                            )] ,\r\n                                            loader: false\r\n                                        }));\r\n                                }}\r\n                            />\r\n                            {errors}\r\n                            {\r\n                                formHide && (\r\n                                    <Notif\r\n                                        type=\"success\"\r\n                                        text={<span>\r\n                                            l'album\r\n                                            &nbsp;<Link\r\n                                                to={`/`}\r\n                                            >\r\n                                            {createWithName}\r\n                                            </Link> à été créé avec succés\r\n                                        </span>}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <Notif \r\n                                type=\"back\"\r\n                                text={<>\r\n                                    <Link to=\"/dash\">\r\n                                        Tableau de bord\r\n                                    </Link>\r\n                                </>}\r\n                            />\r\n                        </>\r\n                    )  : (\r\n                        // show album\r\n                        <>\r\n                            <ShowAlbum\r\n                                db={this.props.db}\r\n                                loaderAlbum={loaderAlbum}\r\n                                album={album}\r\n                            />\r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './FormFilter.css'\r\n\r\nexport default class FormFilter extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            blurValue\r\n            ,onChange\r\n            ,load\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotate\r\n        } = this.props\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    load || (\r\n                        <form\r\n                            className=\"FormFilter\"\r\n                        >\r\n                            <div>\r\n                                <label>flootage <i>{blurValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={blurValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'blur'\r\n                                            ,unity: 'px'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>contraste <i>{(contrastValue || contrastValue === 0) ? contrastValue : 100}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"1000\"\r\n                                    defaultValue={(contrastValue || contrastValue === 0) ? contrastValue : 100}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'contrast'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>grisage <i>{grayscaleValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={grayscaleValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'grayscale'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>rotation teinte <i>{hueRotate || 0}°</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"-8000\"\r\n                                    max=\"8000\"\r\n                                    defaultValue={hueRotate || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'hueRotate'\r\n                                            ,unity: 'deg'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }\r\n            </>\r\n        ) ;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ImgFilter from './../../core/ImgFilter/ImgFilter';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport FormFilter from './../../core/FormFilter/FormFilter';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport docCookies from 'doc-cookies';\r\nimport './PictureRoute.css';\r\n\r\nexport default class PictureRoute extends React.Component {\r\n    \r\n    state = {\r\n        loaderImg: <Loader width={64} type=\"earth\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderUser: <Loader width={64} type=\"timer\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,user: null\r\n        ,picture: null\r\n        ,redirect: null\r\n        ,blurValue: null\r\n        ,contrastValue: null\r\n        ,grayscaleValue: null\r\n        ,hueRotateValue: null\r\n        ,timeUpdate: 20\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.pictureID = document.location.hash.split('/').pop() ;\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID');\r\n        this.updatePicture = this.updatePicture.bind( this );\r\n        this.timeUpdateUp = this.timeUpdateUp.bind( this );\r\n        document.title = 'Picsy | filtre';\r\n    }\r\n\r\n    componentWillUnmount() {\r\n\r\n        clearInterval( this.updateID ) ;\r\n        clearInterval( this.timeUpdateID ) ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        // check logged\r\n        // get img with id in url\r\n        \r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                loaderImg: null\r\n                ,loaderUser: null\r\n                ,redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n\r\n                    this.setState( {\r\n                        u: user \r\n                        ,loaderUser: false\r\n                    } , () => {\r\n                        \r\n                        this.props.db.pictures.doc( this.pictureID )\r\n                        .get()\r\n                        .then( picture => {\r\n                            this.setState({\r\n                                picture: picture\r\n                                ,loaderImg: false\r\n                                ,loaderForm: false\r\n                                ,blurValue: parseInt((picture.get('filters').find( f => f.key === 'blur' ) || {}).val)*2\r\n                                ,contrastValue: parseInt((picture.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                                ,grayscaleValue: parseInt((picture.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                                ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                            } , () => {\r\n                                // go interval update img after get image\r\n                                this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                this.timeUpdateID = setInterval( this.timeUpdateUp , 1e3 );\r\n                            } );\r\n                            \r\n                        } )\r\n                        .catch( err => {\r\n                            this.setState( {\r\n                                loaderImg: null\r\n                                ,loaderUser: null\r\n                                ,redirect: <Redirect to=\"/\" />\r\n                            } ) ;   \r\n                        } );\r\n\r\n                    }  ) ;\r\n                    \r\n                } else {\r\n                    this.setState( {\r\n                        loaderImg: null\r\n                        ,loaderUser: null\r\n                        ,redirect: <Redirect to=\"/\" />\r\n                    } ) ;\r\n                }\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    timeUpdateUp() {\r\n        this.setState( state => ({ timeUpdate: state.timeUpdate-1 >= 0 ? state.timeUpdate-1: 0 }) );\r\n    }\r\n \r\n    updatePicture() {\r\n\r\n        const {picture} = this.state;\r\n\r\n        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n        try {\r\n\r\n            currentFilters = JSON.parse( currentFilters ) ;\r\n\r\n        } catch( SyntaxError ) {\r\n\r\n            currentFilters = [] ;\r\n        }\r\n        finally {\r\n            if( !currentFilters )\r\n                currentFilters = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState( {\r\n                loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n            } ) ;\r\n        }, 420);\r\n\r\n        this.props.db.pictureSetFilters(\r\n            picture.id , currentFilters\r\n        ).then( () => {\r\n\r\n\r\n            this.props.db.pictures.doc( this.pictureID )\r\n            .get()\r\n            .then( pic => {\r\n                this.setState( {\r\n                    picture: pic\r\n                    ,loaderForm: false\r\n                    ,blurValue: parseInt((pic.get('filters').find( f => f.key === 'blur' ) || {}).val) * 2\r\n                    ,contrastValue: parseInt((pic.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                    ,grayscaleValue: parseInt((pic.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                    ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                    ,timeUpdate: 20\r\n                } )\r\n            } )\r\n        } )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loaderImg\r\n            ,loaderUser\r\n            ,loaderForm\r\n            ,u\r\n            ,picture\r\n            ,blurValue\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotateValue\r\n            ,timeUpdate\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"PictureRoute\"\r\n            >\r\n\r\n                <header>\r\n                    <User\r\n                        u={u}\r\n                        load={loaderUser}\r\n                    />\r\n                </header>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n                <aside>\r\n                    <ImgFilter\r\n                        load={loaderImg}\r\n                        pics={picture}\r\n                        classFig=\"fig-filter\"\r\n                        figcaption={\r\n                            <>\r\n                                {\r\n                                    !loaderImg && (\r\n                                        <>\r\n                                            <b>{picture.get('name')}</b> \r\n                                            - <i>{new Date(picture.get('createAt')).toLocaleDateString()}</i>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        }\r\n                        width={512} // default width\r\n                    />\r\n                </aside>\r\n\r\n                <p className=\"update-pic\">\r\n                    {\r\n                        !loaderForm && (\r\n                            <>\r\n                                <span>\r\n                                    Recalcul de l'image dans {timeUpdate} \r\n                                </span>\r\n                                <br />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        clearInterval( this.updateID );\r\n                                        this.updatePicture();\r\n                                        this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                        this.setState( { timeUpdate: 20 } );\r\n                                    }}\r\n                                >\r\n                                    maintenant\r\n                                </button>\r\n                            </>\r\n                        )\r\n                    }\r\n                </p>\r\n\r\n                <FormFilter\r\n                    load={loaderForm}\r\n                    contrastValue={contrastValue}\r\n                    blurValue={blurValue}\r\n                    grayscaleValue={grayscaleValue}\r\n                    hueRotate={hueRotateValue}\r\n                    onChange={({key,val,unity}) => {\r\n\r\n                        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n                        try {\r\n\r\n                            currentFilters = JSON.parse( currentFilters ) ;\r\n                        } catch( SyntaxError ) {\r\n\r\n                            currentFilters = [] ;\r\n                        }\r\n                        finally {\r\n                            if( !currentFilters )\r\n                                currentFilters = [];\r\n                        }\r\n\r\n                        let found = false;\r\n                        currentFilters = currentFilters.map( filter => {\r\n\r\n                            if(filter.key === key) {\r\n                                filter.val = val+unity;\r\n                                found = true;\r\n                            }\r\n                            return filter;\r\n                        } ) ;\r\n\r\n                        if( !found )\r\n                            currentFilters.push( {\r\n                                key: key\r\n                                ,val: val+unity\r\n                            } )\r\n\r\n                        localStorage.setItem( \r\n                            `filters-${picture.id}` ,\r\n                            JSON.stringify( currentFilters )\r\n                        ) ;\r\n\r\n                        const delta = {};\r\n\r\n                        if( key === 'blur' )\r\n                            val *= 2;\r\n\r\n                        delta[ key+'Value' ] = parseInt( val );\r\n\r\n                        this.setState( delta );\r\n                    }}\r\n                />\r\n            \r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport docCookies from 'doc-cookies';\r\nimport ReactToolTip from 'react-tooltip';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './AccountItem.css';\r\n\r\nfunction AccountItem({id,db}){\r\n\r\n    const [loader,setLoader] = useState( <Loader type=\"earth\" width={32} bg=\"rgba(0,0,0,.9)\" /> );\r\n    const [user,setUser] = useState( null ) ;\r\n    const [redirect,setRedirect] = useState( null ) ;\r\n    const [showDetails,setShowDetails] = useState( false );\r\n\r\n    useEffect( () => {\r\n\r\n        if( !user ) {\r\n\r\n            db.users.doc( id )\r\n                .get()\r\n                .then( u => {\r\n                    setUser( u ) ;\r\n                    setLoader( false ) ;\r\n                } )\r\n                .catch( err => {\r\n\r\n                    console.error( err );\r\n                } )\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <li\r\n            className=\"AccountItem\"\r\n        >\r\n            {redirect}\r\n            {\r\n                loader || (\r\n                    <section\r\n                        id={`${user.id}`}\r\n                        onMouseEnter={() => setShowDetails( true )}\r\n                        onMouseLeave={() => setShowDetails( false )}\r\n                    >\r\n                        <button\r\n                            onClick={() => {\r\n                                docCookies.setItem('useID' , user.id ) ;\r\n                                localStorage.setItem('useID' , user.id ) ;\r\n                                setRedirect( <Redirect to=\"/dash\" />) ;\r\n                            }}\r\n                        >\r\n                            <figure>\r\n                                <figcaption>\r\n                                    {user.get('pseudo')}\r\n                                </figcaption>\r\n\r\n                                <img\r\n                                    src={user.get('avatar')}\r\n                                    alt=\"avatar\"\r\n                                    width=\"64\"\r\n                                />\r\n\r\n                            </figure>\r\n\r\n                            <aside\r\n                                className={`${showDetails ? '': 'o-hide'}`}\r\n                            >\r\n                            \r\n                                <i className=\"fas fa-running\"></i>\r\n                                &nbsp;les données de détails de compte<br />\r\n                                en sueur\r\n                                \r\n                                <ReactToolTip \r\n                                    id=\"pls\"\r\n                                    type=\"error\"\r\n                                    getContent={()=> (\r\n                                        <p style={{\r\n                                            fontSize: \"16px\"\r\n                                        }}>\r\n                                            <i className=\"fas fa-bug\"></i>\r\n                                            &nbsp;Les requêtes réseaux en PLS\r\n                                        </p>\r\n                                    )}\r\n                                    effect=\"solid\"\r\n                                    place=\"right\"\r\n                                />\r\n                                &nbsp;<i data-for=\"pls\" data-tip=\"en pls\" className=\"fab fa-accessible-icon\"></i>\r\n                                    \r\n                            </aside>\r\n\r\n                        </button>\r\n\r\n\r\n                    </section>\r\n                )\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AccountItem;","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AccountItem from './AccountItem';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport './AccountList.css';\r\n\r\nexport default class AccountList extends React.Component {\r\n\r\n    state = {\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID )\r\n        } catch(SyntaxError) {\r\n            this.userID = [];\r\n        }\r\n        if( !this.userID )\r\n            this.userID = [];\r\n        \r\n        document.title = 'Picsy | comptes';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID.length ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            { redirect } = this.state\r\n            ,{db} = this.props\r\n        ;\r\n\r\n        return (\r\n            <section\r\n                className=\"AccountList\"\r\n            >\r\n                {redirect}\r\n\r\n                <ul>\r\n                    {\r\n                        this.userID.map( id => (\r\n                            <AccountItem key={id} db={db} id={id} />\r\n                        ) )\r\n                    }\r\n                </ul>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            Tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n    \r\n};\r\n","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './AddAccount.css';\r\n\r\nexport default class AddAccount extends React.Component {\r\n\r\n    state = {\r\n        pseudo: \"\"\r\n        ,fileName: \"\"\r\n        ,avatar: AddAccount.defaultAvatar\r\n        ,errors: []\r\n        ,loaderSubmit: null\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n        \r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n    }\r\n    \r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    render() {\r\n\r\n        const {\r\n            avatar\r\n            ,errors\r\n            ,fileName\r\n            ,loaderSubmit\r\n            ,redirect\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"AddAccount\"\r\n            >\r\n                {redirect}\r\n\r\n                <h1>Ajouté un utilisateur</h1>\r\n                <FormUser\r\n                    onSubmit={e => {\r\n\r\n                        e.preventDefault();\r\n\r\n                        const {pseudo} = this.state;\r\n                \r\n                        if(\r\n                            !(pseudo.length >= 2 &&\r\n                            pseudo.length <=40)\r\n                        ) {\r\n                            this.setState(state => ( {\r\n                                errors: [ ...state.errors, <Notif\r\n                                    key={Date.now()} \r\n                                    text=\"pseudo taille invalide\"\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) ) ;\r\n                        } else{\r\n                \r\n                            const {avatar} = this.state;\r\n                \r\n                            this.setState( {\r\n                                loaderSubmit: <Loader width={16} type=\"btn\" />\r\n                            } , () => {\r\n                \r\n                                this.props.db.users.add( {\r\n                                    pseudo: pseudo\r\n                                    ,avatar: avatar\r\n                                } ).then( data => { \r\n\r\n                                    if( !this.userID )\r\n                                        this.userID = [];\r\n                \r\n                                    this.userID.push(data.id);\r\n\r\n                                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                                    this.setState( {\r\n                                        redirect: <Redirect to=\"/account-list\" />\r\n                                    } ) ;\r\n                                } ).catch( err => console.error( err ) ) ;\r\n                            } ) ;\r\n                        }\r\n                    }}\r\n                    onChangePseudo={e => (\r\n                        this.setState( { pseudo: e.target.value.trim()} )\r\n                    )}\r\n                    avatar={avatar}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    valuePseudo={this.state.pseudo}\r\n                    loaderSubmit={loaderSubmit}\r\n                    onChangeAvatar={(file,blob,e) => {\r\n                        \r\n                        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n                            this.setState( {\r\n                                avatar: blob\r\n                                ,fileName: file.name\r\n                            } ) ;\r\n                            \r\n                        } else {\r\n                            \r\n                            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n                            \r\n                            this.setState( state => ( {\r\n                                errors: [ ...state.errors , <Notif\r\n                                    key={Date.now()} \r\n                                    text={mssg}\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) )\r\n                        }\r\n                \r\n                    }}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n};\r\n","import Logged from './../pages/Logged/Logged';\r\nimport Dash from './../pages/Dash/Dash';\r\nimport AlbumRoute from './../pages/AlbumRoute/AlbumRoute';\r\nimport PictureRoute from './../pages/PictureRoute/PictureRoute';\r\nimport AccountList from './../pages/AccountList/AccountList';\r\nimport AddAccount from './../pages/AddAccount/AddAccount';\r\n\r\nconst routes = [\r\n    {\r\n        id:0,\r\n        exact:true,\r\n        render: Logged,\r\n        props: {},\r\n        path: \"/\",\r\n        name: \"Home\"\r\n    },\r\n    {\r\n        id:1,\r\n        exact:false,\r\n        render: Dash,\r\n        props: {},\r\n        path: \"/dash\",\r\n        name: \"dashboard\"\r\n    },\r\n    {\r\n        id:2,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"add\"\r\n        },\r\n        path: \"/add-album\",\r\n        name: \"album add\"\r\n    },\r\n    {\r\n        id:3,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"show\"\r\n        },\r\n        path: \"/album/:id\",\r\n        name: \"show album\"\r\n    },\r\n    {\r\n        id:5,\r\n        exact:false,\r\n        render: PictureRoute,\r\n        props: {},\r\n        path: \"/filter/:id\",\r\n        name: \"filter album\"\r\n    },\r\n    {\r\n        id:6,\r\n        exact:false,\r\n        render: AddAccount,\r\n        props: {\r\n            action: \"filter\"\r\n        },\r\n        path: \"/add-account\",\r\n        name: \"filter album\"\r\n    }\r\n    ,{\r\n        id:6,\r\n        exact:false,\r\n        render: AccountList,\r\n        props: {},\r\n        path: \"/account-list\",\r\n        name: \"liste compte\"\r\n    }\r\n] ;\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport collections from './core/firebase/firebase';\r\nimport routes from './core/routes';\r\nimport {Switch,Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {\r\n          routes.map( route => (\r\n            <Route \r\n              key={route.id}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              render={() => (\r\n                <route.render\r\n                  {...route.props}\r\n                  db={collections}\r\n                />\r\n              )}\r\n            />\r\n          ) )\r\n        }\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  // SecurityError\n  // if ('serviceWorker' in navigator) {\n  //   navigator.serviceWorker.ready.then(registration => {\n  //     registration.unregister();\n  //   });\n  // }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/loader-timer.8835a88b.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-button.3de4de61.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-azure.df696f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-earth.5f4bc2b1.svg\";"],"sourceRoot":""}