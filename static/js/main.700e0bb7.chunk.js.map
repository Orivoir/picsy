{"version":3,"sources":["core/Loader/loader-timer.svg","core/Loader/loader-button.svg","core/Loader/loader-azure.svg","core/Loader/loader-earth.svg","core/firebase/firebase.js","core/firebase/firebase.config.js","core/Loader/Loader.js","core/Notif/Notif.js","core/InputFile/InputFile.js","core/SignIn/SignIn.js","core/FormUser/FormUser.jsx","pages/Logged/Logged.jsx","core/Title/Title.js","core/Icons/Icons.js","core/icons.js","core/User/User.js","core/Confirm/Confirm.js","core/ControlItem/ControlItem.js","core/ListAlbulms/ItemAlbum.js","core/ListAlbulms/ListAlbums.js","pages/Dash/Dash.jsx","core/FormAdd/FormAdd.js","core/ImgFilter/ImgFilter.js","core/ItemImg/ItemImg.js","core/ListImg/ListImg.js","core/Previews/Previews.js","core/ShowAlbum/ShowAlbum.js","pages/AlbumRoute/AlbumRoute.jsx","core/FormFilter/FormFilter.jsx","pages/PictureRoute/PictureRoute.jsx","pages/AccountList/AccountItem.js","pages/AccountList/AccountList.jsx","pages/AddAccount/AddAccount.jsx","core/routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","collections","users","collection","albums","pictures","getUser","userID","Promise","resolve","reject","doc","get","then","user","catch","err","isLogged","success","pictureSetFilters","pictureID","filters","picture","refPicture","delDouble","filter","f","find","fDelta","key","set","name","createAt","album_id","blob","pictureSetFilter","currentFilter","found","newFilter","map","current","JSON","parse","SyntaxError","val","push","stringify","track","getImgsOf","albumID","QuerySnapshot","docs","addAlbum","status","getAlbumsOf","details","add","user_id","Date","now","size","albumUp","refAlbum","album","partial","parseInt","albumDown","getPictureOf","addPicture","pic","id","rnameImg","rname","pictureAlbumID","rnameAlbum","trim","removePicture","refImg","Function","delete","removeAlbum","pics","assoceType","type","LoaderTime","LoaderBtn","LoaderEarth","LoaderAzure","Loader","className","width","full","bg","style","backgroundColor","alt","src","assoceIconType","assoc","Notif","onClose","text","tooltip","place","effect","useState","React","createRef","refNotif","hide","setHide","getContent","fontSize","display","alignItems","justifyContent","ref","onClick","notif","remove","Node","parentNode","removeChild","InputFile","label","onChange","autoRead","htmlFor","e","file","target","files","reader","FileReader","evt","addEventListener","result","readAsDataURL","SignIn","data-for","data-tip","href","FormUser","this","props","onSubmit","onChangeAvatar","onChangePseudo","valuePseudo","fileName","avatar","loaderSubmit","errors","placeholder","autoComplete","value","length","slice","click","error","Component","Logged","state","loader","u","redirect","pseudo","defaultAvatar","loaderButton","localStorage","getItem","docCookies","avatarChange","bind","document","title","preventDefault","setState","db","data","setItem","to","test","mssg","console","log","Title","subtitle","Icons","classHandle","iconsUser","User","load","icons","icon","confirmRef","btnsRef","confirm","cacel","dataBack","Confirm","onConfirm","onCancel","onFinally","textConfirm","textCancel","textGlobal","autoFocus","autoFocusCancel","autoFocusConfirm","useEffect","cancel","focus","conf","fin","ControlItem","manualOpen","open","onRemove","onRname","loadRname","errorsRname","onOpen","itemType","closer","setConfirm","inputRname","setInputRname","setRname","firstControl","rnameRef","setTimeout","onMouseEnter","onMouseLeave","disabled","btnLinkRef","ItemAlbum","item","control","setControl","setLoadRname","visible","setVisible","setName","manualControl","setManualControl","setRedirect","setErrors","refItem","onKeyDown","onContextMenu","onPointerUp","nativeEvent","which","ListAlbums","Dash","defaultPicture","FormAdd","voidForm","imgsLength","setPicture","refName","buildFilter","Array","styles","forEach","replace","ImgFilter","figcaption","classFig","ItemImg","even","btnNav","classList","onPointerDown","resp","warn","ListImg","items","Previews","getPics","ShowAlbum","loaderAlbum","useParams","loaderAddPicture","setLoaderAddPicture","successFor","setSuccessFor","setVoidForm","sendPreview","setSendPreview","previews","setPreviews","setPictures","tempPreviews","finish","total","preview","response","p","from","keys","AlbumRoute","loadUser","action","location","hash","split","pop","notGetUser","formHide","createWithName","FormFilter","blurValue","contrastValue","grayscaleValue","hueRotate","min","max","defaultValue","unity","PictureRoute","loaderImg","loaderUser","loaderForm","hueRotateValue","timeUpdate","updatePicture","timeUpdateUp","clearInterval","updateID","timeUpdateID","setInterval","currentFilters","toLocaleDateString","delta","AccountItem","setLoader","setUser","showDetails","setShowDetails","setAlbums","setLoaderAlbum","AccountList","AddAccount","routes","exact","render","path","App","route","Boolean","window","hostname","match","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.700e0bb7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loader-timer.8835a88b.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-button.3de4de61.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-azure.df696f68.svg\";","module.exports = __webpack_public_path__ + \"static/media/loader-earth.5f4bc2b1.svg\";","import firebaseCfg from './firebase.config';\r\nimport * as firebase from 'firebase';\r\n\r\n\r\nfirebase.initializeApp( firebaseCfg );\r\nconst\r\n  collections = {\r\n    users: firebase.firestore().collection('users')\r\n    ,albums: firebase.firestore().collection('albums')\r\n    ,pictures: firebase.firestore().collection('pictures')\r\n    ,getUser( userID ) {\r\n\r\n        return new Promise( ( resolve , reject ) => (\r\n            this.users.doc( userID ).get()\r\n            .then( user => (\r\n                resolve( user.get('pseudo') ? user: null )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n        ) ) ;\r\n    }\r\n    ,isLogged( userID ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !userID ) return reject();\r\n\r\n          this.getUser( userID )\r\n            .then( user => {\r\n\r\n              if( user ) {\r\n\r\n                return resolve( {success: true ,user: user} ) ;\r\n              } else {\r\n                \r\n                return resolve( {success: false} ) ;\r\n              }\r\n            } )\r\n            .catch( err => reject(err) )\r\n          ;\r\n      } );\r\n\r\n    }\r\n    ,pictureSetFilters( pictureID , filters ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          const delDouble = picture.get('filters').filter( f => {\r\n\r\n              return !filters.find( fDelta => fDelta.key === f.key )\r\n          } ) ;\r\n\r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: [ ...delDouble , ...filters ]\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,pictureSetFilter( pictureID , filter ) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        this.pictures.doc( pictureID )\r\n        .get()\r\n        .then( picture => { // picture exists\r\n\r\n          let currentFilter = picture.get('filters') ;\r\n          \r\n          let found = false;\r\n          const newFilter = currentFilter.map( current => {\r\n\r\n              try {\r\n                if( typeof current === 'string' )\r\n                  current = JSON.parse(current)\r\n\r\n              } catch( SyntaxError ) {\r\n                \r\n                current = {};\r\n              }\r\n              if(current.key === filter.key) {\r\n                current.val = filter.val;\r\n                found = true;\r\n              }\r\n\r\n              return current ;\r\n\r\n          }  ) ;\r\n\r\n          if( !found ) {\r\n\r\n            newFilter.push( JSON.stringify( {\r\n              key: filter.key\r\n              ,val: filter.val\r\n            } ) ) ;\r\n          }\r\n\r\n          const refPicture = this.pictures.doc( pictureID ) ;\r\n          \r\n          // set picture\r\n          refPicture.get()\r\n          .then( () => (\r\n            refPicture.set({\r\n              name: picture.get('name')\r\n              ,createAt: picture.get('createAt')\r\n              ,album_id: picture.get('album_id')\r\n              ,filters: newFilter.filter( track => {\r\n                try {\r\n                  if( typeof track === 'string' )\r\n                    track = JSON.parse(track);\r\n                }catch( SyntaxError ) {\r\n                  return false;\r\n                }\r\n                return track.key && track.val;\r\n              })\r\n              ,blob: picture.get('blob') \r\n            }).then( () => resolve({success:true}) )\r\n            .catch( err => reject( err ) )\r\n          ) ).catch( err => reject( err ) ) ;\r\n\r\n        } )\r\n        .catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,getImgsOf( albumID ) {\r\n\r\n      return new Promise( (resolve,reject) => (\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => (\r\n          this.pictures.get()\r\n          .then( QuerySnapshot => (\r\n            resolve(QuerySnapshot.docs.filter( doc => (\r\n              doc.get('album_id') === albumID\r\n            ) ) )\r\n          ) ).catch( err => reject( err ) )\r\n        ) ).catch( err => reject(err) )\r\n       ) ) ;\r\n    }\r\n    ,addAlbum( name , userID  ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if(\r\n          !(name || userID)\r\n        )\r\n          reject({\r\n            status: 401\r\n          });\r\n\r\n        this.getAlbumsOf( userID ).then( docs => {\r\n\r\n          if( docs.find( doc => doc.get('name') === name ) )\r\n            return resolve( {\r\n              success: false\r\n              ,status: 401,\r\n              details: 'already exists' \r\n            } ) ;\r\n\r\n            this.albums.add( {\r\n              user_id: userID\r\n              ,name: name\r\n              ,createAt: Date.now()\r\n              ,size: 0\r\n            } ).then( () => resolve({\r\n              success:true\r\n            }) )\r\n            .catch( err => reject( err ) ) ;\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,albumUp( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          if( !album.get('createAt') ) return reject( { partial: album } );\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))+1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,albumDown( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          refAlbum.set( {\r\n            createAt: album.get('createAt')\r\n            ,name: album.get('name')\r\n            ,size: parseInt(album.get('size'))-1\r\n            ,user_id: album.get('user_id') \r\n          } ).then( () => resolve({success:true}) )\r\n          .catch( err => reject(err) ) ;\r\n        } )\r\n        .catch( err => reject( err) ) ;\r\n      });\r\n    }\r\n    ,getPictureOf( albumID ) {\r\n\r\n      return new Promise( ( resolve, reject ) => {\r\n\r\n        if( !albumID )\r\n          return reject();\r\n\r\n          this.pictures.get()\r\n          .then(  QuerySnapshot => (\r\n            resolve(\r\n              QuerySnapshot.docs\r\n                .filter( doc => (\r\n                  doc.get('album_id') === albumID )\r\n                ) )\r\n            )\r\n          )\r\n      } ) ;\r\n    }\r\n    ,addPicture(\r\n      albumID,\r\n      name,\r\n      picture\r\n    ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !(albumID || name || picture ) )\r\n          return reject();\r\n\r\n        this.albums.doc( albumID )\r\n        .get()\r\n        .then( () => {\r\n\r\n          this.getPictureOf( albumID ).then( \r\n            pictures => {\r\n             \r\n              if(pictures.find(\r\n                pic => pic.get('name') === name \r\n              )) {\r\n                resolve( {\r\n                  success: false,\r\n                  status: 401\r\n                } ) ;\r\n              } else {\r\n\r\n                this.pictures.add( {\r\n                  album_id: albumID\r\n                  ,blob: picture\r\n                  ,createAt: Date.now()\r\n                  ,name: name\r\n                  ,filters: []\r\n                } ).then( () => {\r\n                  this.albumUp( albumID ).then( () => {\r\n                    resolve( {success: true,id: albumID , name: name , blob: picture } )\r\n                  } ).catch( err => reject( err ) )\r\n                } )\r\n                .catch( err => reject( err ) )\r\n              }\r\n            }\r\n          )\r\n\r\n        } )\r\n        .catch( err => reject( {\r\n          status: 404\r\n        } ) )\r\n         \r\n      } ) ;\r\n\r\n    }\r\n    ,rnameImg( pictureID , rname , pictureAlbumID) {\r\n\r\n      return new Promise( (resolve , reject) => {\r\n\r\n        \r\n        if(\r\n          !(pictureID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refPicture = this.pictures.doc( pictureID ) ;\r\n\r\n          this.pictures.get()\r\n          .then( QuerySnapshot  => {\r\n\r\n            if( \r\n              !QuerySnapshot.docs.find( doc => (\r\n                doc.get('name') === rname &&\r\n                doc.get('album_id') === pictureAlbumID                 \r\n              ) ) \r\n            ) {    \r\n              refPicture.get()\r\n                .then( pic => {\r\n                  refPicture.set({\r\n                    blob: pic.get('blob')\r\n                    ,album_id: pic.get('album_id')\r\n                    ,filters: pic.get('filters') || []\r\n                    ,name: rname\r\n                    ,createAt: pic.get('createAt') || Date.now()\r\n                  }).then( () => resolve( {success:true} ) )\r\n                  .catch( err => reject( err ) ) ;\r\n                } ).catch( err => resolve( {\r\n                  success:false\r\n                  ,status: 404\r\n                  ,err: err\r\n                } ) ) ;\r\n            } else {\r\n              resolve( {\r\n                success: false\r\n                ,status: 401 // 401 Bad Request\r\n                ,details: 'name already exists'\r\n              } )\r\n            }\r\n\r\n          } )\r\n          .catch( () => reject() ) ;\r\n\r\n      } ) ;\r\n    }\r\n    ,rnameAlbum( albumID , rname  ) {\r\n\r\n      return new Promise( ( resolve , reject ) => {\r\n\r\n        if(\r\n          !(albumID || rname )\r\n        )\r\n        reject();\r\n\r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        refAlbum.get().then( album => {\r\n\r\n          if( album.get('name') === rname ) {\r\n            resolve({\r\n              success: true\r\n            }) ;\r\n          }\r\n\r\n          refAlbum.set({\r\n            name: rname\r\n            ,createAt: album.get('createAt')\r\n            ,size: album.get('size')\r\n            ,user_id: album.get('user_id')\r\n          }).then( () => (\r\n            resolve( { success: true } )\r\n          ) ) ;\r\n\r\n\r\n        } ).catch( err => reject( err ) ) ;\r\n\r\n      } ) ; \r\n    }\r\n    ,getAlbumsOf( userID ) {\r\n\r\n      return new Promise( ( resolve , reject ) => (\r\n          this.albums.get()\r\n            .then( QuerySnapshot => (\r\n              resolve( QuerySnapshot.docs.filter( doc => (\r\n                doc.get('user_id').trim() === userID.trim()\r\n              ) ) )\r\n            ) )\r\n            .catch( err => reject( err ) )\r\n      )  ) ;\r\n\r\n    }\r\n    ,removePicture: function( pictureID ) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !pictureID ) return reject();\r\n\r\n        const refImg = this.pictures.doc( pictureID ) ;\r\n\r\n        if( !refImg || !( refImg.get instanceof Function ) ) return resolve({\r\n          status: 404,\r\n          success: false\r\n        });\r\n\r\n        refImg.get().then( pic => {\r\n\r\n          refImg.delete().then(() => { \r\n\r\n            this.albumDown( pic.get('album_id') ).then( () => {\r\n              resolve({\r\n                success: true\r\n              } )\r\n            } ).catch( err => reject( err ) ) ;\r\n          })\r\n          .catch( () => reject() ) ;\r\n        }) ;\r\n\r\n      });\r\n    }\r\n    ,removeAlbum: function(albumID) {\r\n\r\n      return new Promise( (resolve,reject) => {\r\n\r\n        if( !albumID ) reject({\r\n          status: 401\r\n          ,id: albumID\r\n        });\r\n        \r\n        const refAlbum = this.albums.doc( albumID ) ;\r\n\r\n        if( !refAlbum || !(refAlbum.get instanceof Function) )\r\n          reject( {\r\n            refAlbum: refAlbum\r\n            ,id: albumID\r\n            ,status: 404\r\n          } );\r\n\r\n        refAlbum.get().then( () => {\r\n            refAlbum.delete()\r\n              .then( () => {\r\n\r\n                this.getPictureOf( albumID ).then( pics => {\r\n\r\n                  pics.map( pic => (\r\n                      this.removePicture( pic.id )\r\n                 ) ) ;\r\n\r\n                  resolve({success: true});\r\n                }  ).catch( err => reject( err ) )\r\n\r\n              } )\r\n              .catch( err => reject( err ) )\r\n            ;\r\n          } ).catch( err => reject( err ) )\r\n      } )\r\n    }\r\n  }\r\n;\r\n\r\nexport default collections;\r\n","export default {\r\n    apiKey: \"AIzaSyBTZQaxY4tK4wD1CFIAdZYoBNIFNXjpHZI\",\r\n    authDomain: \"picsy-827e5.firebaseapp.com\",\r\n    databaseURL: \"https://picsy-827e5.firebaseio.com\",\r\n    projectId: \"picsy-827e5\",\r\n    storageBucket: \"picsy-827e5.appspot.com\",\r\n    messagingSenderId: \"228973782937\",\r\n    appId: \"1:228973782937:web:8c6a64e32d37e3c8c7d508\"\r\n};","import React from 'react';\r\nimport './Loader.css';\r\nimport LoaderTime from './loader-timer.svg';\r\nimport LoaderEarth from './loader-earth.svg';\r\nimport LoaderBtn from './loader-button.svg';\r\nimport LoaderAzure from './loader-azure.svg';\r\n\r\nfunction assoceType( type ) {\r\n\r\n    const assoc = {\r\n        'timer': LoaderTime\r\n        ,'btn': LoaderBtn\r\n        ,'button': LoaderBtn\r\n        ,'earth': LoaderEarth\r\n        ,'azure': LoaderAzure\r\n        ,'az': LoaderAzure\r\n    } ;\r\n\r\n    return assoc[ type ] || LoaderTime ;\r\n}\r\n\r\nfunction Loader({\r\n    className\r\n    ,width\r\n    ,full\r\n    ,type\r\n    ,bg\r\n}){\r\n\r\n    return (\r\n        <figure\r\n            className={`Loader ${className} ${full ? 'full' :''}`}\r\n            style={{\r\n                backgroundColor: bg || 'transparent'\r\n            }}\r\n        >\r\n            <img\r\n                alt={`loader ${type}`}\r\n                src={assoceType( type )}\r\n                width={width}\r\n            />\r\n        </figure>\r\n    ) ;\r\n\r\n}\r\n\r\nexport default Loader;","import React, {useState} from 'react';\r\nimport './Notif.css';\r\nimport ReactToolTip from 'react-tooltip' ;\r\n\r\nfunction assoceIconType( type ) {\r\n\r\n    const assoc = {\r\n        'warn': 'fas fa-exclamation-triangle'\r\n        ,'warning': 'fas fa-exclamation-triangle'\r\n        ,'error':'fas fa-bomb'\r\n        ,'infos': 'fas fa-info-circle'\r\n        ,'info': 'fas fa-info-circle'\r\n        ,'success': 'fas fa-check-circle'\r\n        ,'bug': 'fas fa-bug'\r\n        , 'mask': 'fas fa-mask' // it's unknow notif\r\n        , 'back': 'fas fa-hand-point-left'\r\n    } ;\r\n\r\n    return assoc[ type ] || assoc['mask'] ;\r\n}\r\n\r\nfunction Notif( {\r\n    type\r\n    ,className\r\n    ,onClose\r\n    ,text\r\n    ,tooltip\r\n    ,place\r\n    ,effect\r\n} ) {\r\n\r\n    const [refNotif] = useState( React.createRef() );\r\n    const [hide,setHide] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            {\r\n                (\r\n                    tooltip ? \r\n                    (\r\n                        <ReactToolTip\r\n                            id={tooltip}\r\n                            type={(\r\n                                type === 'infos' ? \r\n                                'info' : type === 'bug' ?\r\n                                'error' : type\r\n                            )}\r\n                            getContent={() => (\r\n                                <span style={{\r\n                                    fontSize: \"16px\"\r\n                                    ,display: 'flex'\r\n                                    ,alignItems: 'center'\r\n                                    ,justifyContent: 'space-around'\r\n                                }}>\r\n                                    <i className={assoceIconType(type)}></i>\r\n                                    &nbsp;{text}\r\n                                </span>\r\n                            )}\r\n                            effect={effect || 'solid'}\r\n                            place={place || 'top'}\r\n                        />\r\n                    ) : (\r\n                        <section\r\n                            ref={refNotif}\r\n                            className={`Notif ${className} ${type} ${hide ? 'hide':''}`}\r\n                        >\r\n                            <p>\r\n                                <i className={assoceIconType(type)}></i>\r\n\r\n                                <span>\r\n                                    {text}\r\n                                </span>\r\n                            </p>\r\n\r\n                            {\r\n                                onClose instanceof Function && (\r\n                                    <aside>\r\n                                        <button\r\n                                            onClick={() => onClose( {\r\n                                                ref: refNotif\r\n                                                ,notif: refNotif.current\r\n                                                ,remove() {\r\n\r\n                                                    if( \r\n                                                        refNotif.current instanceof Node &&\r\n                                                        refNotif.current.parentNode instanceof Node\r\n                                                    ) {\r\n                                                    \r\n                                                        refNotif.current.parentNode.removeChild( refNotif.current );\r\n                                                        return true;\r\n                                                    }\r\n                                                    return false;\r\n                                                }\r\n                                                ,hide() {\r\n                                                    setHide( true );\r\n                                                }\r\n                                            })}\r\n                                        >\r\n                                            <i className=\"fas fa-times\"></i>\r\n                                        </button>\r\n                                    </aside>\r\n                                )\r\n                            }    \r\n                        </section>\r\n                    )\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Notif;","import React from 'react';\r\n\r\nfunction InputFile({\r\n    className\r\n    ,label\r\n    ,name\r\n    ,id\r\n    ,onChange\r\n    ,autoRead\r\n    ,notif\r\n}){\r\n    return (\r\n        <>\r\n            {label && (\r\n                <label htmlFor={id || name}>\r\n                    {label}\r\n                </label>\r\n            ) }\r\n            <input\r\n                className={className}\r\n                type=\"file\"\r\n                name={name}\r\n                id={id || name}\r\n                onChange={e => {\r\n\r\n                    if( !(onChange instanceof Function) ) return;\r\n\r\n                    const file = e.target.files[0] ;\r\n                    \r\n                    if( autoRead ) {\r\n\r\n                        let blob = null;\r\n\r\n                        const reader = new FileReader();\r\n                        const evt = e;\r\n\r\n                        reader.addEventListener('load' , e => {\r\n\r\n                            blob = e.target.result;\r\n                            onChange( file , blob , evt ) ;\r\n                        } ) ;\r\n\r\n                        reader.readAsDataURL( file );\r\n                    } else {\r\n\r\n                        onChange( file , e ) ;\r\n                    }\r\n                }}\r\n            />\r\n            {notif}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default InputFile;","import React from 'react';\r\nimport './SignIn.css';\r\nimport Notif from './../Notif/Notif';\r\n\r\nfunction SignIn() {\r\n    return (\r\n        <>\r\n            <Notif\r\n                type=\"info\"\r\n                text=\"dépot github\"\r\n                place=\"top\"\r\n                tooltip=\"git-link\"\r\n            />\r\n        \r\n            <p className=\"sign-in\">\r\n                <span>Application front UI/UX</span>\r\n                &nbsp;développer <span>avec le CRA de Reactjs&nbsp;</span>\r\n                par\r\n                &nbsp;<a data-for=\"git-link\" data-tip=\"lien github\" href=\"https://github.com/Orivoir/picsy\">\r\n                        <i className=\"fab fa-github\"></i>\r\n                        &nbsp;Samuel Gaborieau\r\n                </a>\r\n            </p>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default SignIn;","import React from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport SignIn from './../SignIn/SignIn';\r\nimport './FormUser.css';\r\n\r\nexport default class FormUser extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            onSubmit\r\n            ,onChangeAvatar\r\n            ,onChangePseudo\r\n            ,valuePseudo\r\n            ,fileName\r\n            ,avatar\r\n            ,loaderSubmit\r\n            ,errors\r\n        } = this.props;\r\n\r\n        return (\r\n            <form\r\n                className=\"FormUser\"\r\n                onSubmit={onSubmit}\r\n            >\r\n                <section>\r\n                    <div className=\"field-wrap-pseudo\">\r\n                        <input\r\n                            placeholder=\"pseudo\"\r\n                            type=\"text\" \r\n                            name=\"pseudo\"\r\n                            autoComplete=\"off\" \r\n                            onChange={onChangePseudo}\r\n                            value={valuePseudo}\r\n                        />\r\n                        <label \r\n                            htmlFor=\"pseudo\" \r\n                            className={`o-hide ${valuePseudo.trim().length ? 'active':''}`}\r\n                        >\r\n                            pseudo\r\n                        </label>\r\n                    </div>\r\n                \r\n                    <div>\r\n                        <InputFile\r\n                            className=\"hide\"\r\n                            label={\r\n                                <>\r\n                                    <span className=\"hide micro-system\">\r\n                                        {\r\n                                            fileName ?\r\n                                                fileName.length > 7 ?\r\n                                                fileName.slice( 0 , 7 ) + ' ...' :\r\n                                                fileName :\r\n                                                'avatar'\r\n                                        }\r\n                                    </span>\r\n                                    <figure>\r\n                                        <button \r\n                                            type=\"button\"\r\n                                            onClick={e => {\r\n                                                e.target.parentNode.click();\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src={avatar}\r\n                                                alt=\"avatar\"\r\n                                                width={64}\r\n                                            />\r\n                                        </button>\r\n                                        <figcaption>\r\n                                            changer\r\n                                        </figcaption>\r\n                                    </figure>\r\n                                </>\r\n                            }\r\n                            name=\"avatar\"\r\n                            autoRead\r\n                            onChange={onChangeAvatar}\r\n                        />\r\n                    </div>\r\n\r\n                    <button type=\"submit\">\r\n                        {loaderSubmit || 'suivant'}\r\n                    </button>\r\n                </section>\r\n            \r\n                <SignIn />\r\n\r\n                {errors.map( error => (\r\n                        error\r\n                ) )}\r\n\r\n            </form>\r\n        ) ;\r\n\r\n    }\r\n\r\n} ;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './Logged.css' ;\r\n\r\nexport default class Logged extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader full type=\"az\" width={256} bg=\"rgba(0,0,0,.93)\" />\r\n        ,u: false\r\n        ,redirect: false\r\n        ,pseudo: \"\"\r\n        ,avatar: Logged.defaultAvatar\r\n        ,errors: []\r\n        ,loaderButton: false\r\n        ,fileName: \"\"\r\n    } ;\r\n\r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n\r\n        this.avatarChange = this.avatarChange.bind( this );\r\n        this.onSubmit = this.onSubmit.bind( this );\r\n\r\n        document.title = 'Picsy | Log in';\r\n    }\r\n\r\n    /**\r\n     * @bind [constructor]\r\n     * @param {SyntheticEvent} e \r\n     */\r\n    onSubmit( e ) {\r\n\r\n        e.preventDefault();\r\n\r\n        const {pseudo} = this.state;\r\n\r\n        if(\r\n            !(pseudo.length >= 2 &&\r\n            pseudo.length <=40)\r\n        ) {\r\n            this.setState(state => ( {\r\n                errors: [ ...state.errors, <Notif\r\n                    key={Date.now()} \r\n                    text=\"pseudo taille invalide\"\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) ) ;\r\n        } else{\r\n\r\n            const {avatar} = this.state;\r\n\r\n            this.setState( {\r\n                loaderButton: <Loader width={16} type=\"btn\" />\r\n            } , () => {\r\n\r\n                this.props.db.users.add( {\r\n                    pseudo: pseudo\r\n                    ,avatar: avatar\r\n                } ).then( data => {\r\n\r\n                    if( !this.userID )\r\n                        this.userID = [];\r\n\r\n                    this.userID.push(data.id);\r\n\r\n                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                    this.setState( {\r\n                        redirect: <Redirect to=\"/account-list\" />\r\n                    } ) ;\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n    }\r\n    \r\n    /**\r\n     * @bind [constructor]\r\n     * @param {File} file \r\n     * @param {string} blob \r\n     * @param {SyntheticEvent} e \r\n     */\r\n    avatarChange( file, blob , e ) {\r\n\r\n        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n            this.setState( {\r\n                avatar: blob\r\n                ,fileName: file.name\r\n            } ) ;\r\n            \r\n        } else {\r\n            \r\n            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n            \r\n            this.setState( state => ( {\r\n                errors: [ ...state.errors , <Notif\r\n                    key={Date.now()} \r\n                    text={mssg}\r\n                    type=\"error\"\r\n                    onClose={ ({remove}) => remove()}\r\n                /> ]\r\n            }) )\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID || !this.userID.length ) {\r\n            this.setState( {\r\n                loader: false \r\n            } ) ;\r\n        } else {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/account-list\" />\r\n            } ) ;\r\n            console.log('SHOW ACCOUNT LIST');\r\n            \r\n            // this.props.db.getUser(this.userID)\r\n            // .then( user => {\r\n\r\n            //     if( user ) {\r\n            //         this.setState( {\r\n            //             redirect: <Redirect to=\"/dash\" />\r\n            //         } ) ;\r\n                    \r\n            //     } else {\r\n            //         this.setState( {\r\n            //             loader: false\r\n            //         } ) ;\r\n            //     }\r\n            // } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader\r\n            ,redirect\r\n            ,avatar\r\n            ,errors\r\n            ,loaderButton\r\n            ,fileName\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"Logged\"\r\n            >\r\n                {loader}\r\n                {redirect}\r\n\r\n                <FormUser\r\n                    onSubmit={this.onSubmit}\r\n                    onChangePseudo={e => (\r\n                        this.setState({pseudo:e.target.value.trim()})\r\n                    )}\r\n                    avatar={avatar}\r\n                    valuePseudo={this.state.pseudo}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    loaderSubmit={loaderButton}\r\n                    onChangeAvatar={(file,blob,e) => (\r\n                        this.avatarChange(file,blob,e)\r\n                    )}\r\n                />\r\n\r\n                <section className=\"banner-sm-screen hide\">\r\n\r\n                        <p>\r\n                            Picsy et Lorem dolore veniam culpa velit sint ,\r\n                            Anim cupidatat mollit consequat et ipsum ipsum eu ullamco eu ullamco elit non.\r\n                        </p>\r\n\r\n                        <button type=\"button\">\r\n                            get started\r\n                        </button>\r\n                </section>\r\n\r\n            </section>\r\n        );\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './Title.css';\r\n\r\nfunction Title({\r\n    title,\r\n    subtitle,\r\n    className\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            <h1 className={className}>{title}</h1>\r\n            {(\r\n                subtitle && (\r\n                    <blockquote>\r\n                        {subtitle}\r\n                    </blockquote>\r\n                )\r\n            )}\r\n        </>\r\n    ) ;\r\n\r\n}\r\n\r\nexport default Title;","import React from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\n\r\nfunction Icons({\r\n    tooltip,\r\n    className,\r\n    target,\r\n    onClick,\r\n    classHandle,\r\n    loader\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            {tooltip}\r\n            <span\r\n                data-for={tooltip.props.tooltip}\r\n                id={tooltip.props.tooltip}\r\n                data-tip={tooltip.props.text}\r\n            >\r\n\r\n            {\r\n                target ? (\r\n                    <Link \r\n                        to={target} \r\n                        onClick={onClick instanceof Function ? onClick : () => {}}\r\n                        className={classHandle}\r\n                    >\r\n                        <i className={className}></i>\r\n                    </Link>\r\n                ) : (\r\n                    <button\r\n                        type=\"button\"\r\n                        className={classHandle}\r\n                        onClick={onClick instanceof Function ? onClick : () => {}}\r\n                    >\r\n                        {\r\n                            loader || (\r\n                                <i className={className}></i>\r\n                            )\r\n                        }\r\n                    </button>\r\n                )\r\n            }\r\n\r\n            </span>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default Icons ;","import React from 'react';\r\nimport Notif from './Notif/Notif';\r\n\r\nconst icons = {\r\n    User: [{\r\n        id: 0,\r\n        tooltip:\r\n            <Notif\r\n                type=\"info\"\r\n                place=\"bottom\"\r\n                tooltip=\"user\"\r\n                text=\"ajouté un compte\"\r\n            />\r\n        ,\r\n        target:\"/add-account\",\r\n        className:\"fas fa-user-plus\"\r\n    } , {\r\n        id: 1,\r\n        tooltip:\r\n            <Notif    \r\n                type=\"info\"\r\n                place=\"bottom\"\r\n                tooltip=\"change\"\r\n                text=\"changé de compte\"\r\n            />\r\n        ,\r\n        target:\"/account-list\",\r\n        className:\"fas fa-person-booth\"\r\n    }]\r\n} ;\r\n\r\nconst iconsUser = icons.User ;\r\n\r\nexport { iconsUser } ;","import React from 'react';\r\nimport './User.css';\r\nimport Title from './../Title/Title';\r\nimport SignIn from './../SignIn/SignIn';\r\nimport Icons from './../Icons/Icons';\r\nimport {iconsUser as icons} from './../icons';\r\n\r\nfunction User({\r\n    u,load\r\n}) {\r\n\r\n    return (\r\n        <>\r\n            <section className=\"User\">\r\n                {load || (\r\n                    <>\r\n                        <Title\r\n                            title={<><strong>Picsy</strong> application</>}\r\n                            subtitle=\"version 0.2.1-beta\"\r\n                        />\r\n                    \r\n                        <div className=\"content-user\">\r\n                            <figure>\r\n                                <img\r\n                                    src={u.get('avatar')}\r\n                                    alt=\"avatar\"\r\n                                    width=\"125\"\r\n                                />\r\n                                <figcaption>\r\n                                    {u.get('pseudo')}\r\n                                </figcaption>\r\n                            </figure>\r\n\r\n                            {\r\n                                icons.map( icon => (\r\n                                    <Icons\r\n                                        key={icon.id}\r\n                                        tooltip={icon.tooltip}\r\n                                        target={icon.target}\r\n                                        className={icon.className}                                        \r\n                                    />\r\n                                ) )\r\n                            }\r\n                        </div>\r\n                      \r\n                        <SignIn />\r\n                    </>\r\n                )}\r\n            </section>\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default User;","import React,{useEffect} from 'react';\r\nimport './Confirm.css'\r\n\r\nconst \r\n    confirmRef = React.createRef()\r\n    ,btnsRef = {\r\n        confirm: React.createRef()\r\n        ,cacel: React.createRef()\r\n    }\r\n    , dataBack = {\r\n        ref: confirmRef,\r\n        confirm: confirmRef.current\r\n    }\r\n;\r\n\r\nfunction Confirm({\r\n    onConfirm,\r\n    onCancel,\r\n    onFinally,\r\n    textConfirm,\r\n    textCancel,\r\n    textGlobal,\r\n    text,\r\n    className,\r\n    autoFocus,\r\n    autoFocusCancel,\r\n    autoFocusConfirm,\r\n    icons,\r\n    title\r\n}) {\r\n\r\n    useEffect( () => {\r\n        if(autoFocusCancel) {\r\n            btnsRef.cancel.current.focus() ;\r\n        } else if( autoFocusConfirm || autoFocus ) {   \r\n            btnsRef.confirm.current.focus() ;\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <section\r\n            className={`Confirm ${className}`}\r\n            ref={confirmRef}\r\n        >\r\n            {( title && <h2>{title}</h2> )}\r\n\r\n            <p>\r\n                {textGlobal || text}\r\n            </p>\r\n\r\n            <aside>\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"confirm\"\r\n                    onClick={() => {\r\n                        const\r\n                            conf = onConfirm instanceof Function ? onConfirm: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n\r\n                        conf( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                    ref={btnsRef.confirm}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-check\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textConfirm}\r\n                    </span>\r\n                </button>\r\n                \r\n                <button\r\n                    className=\"cancel\"\r\n                    ref={btnsRef.cancel}\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n\r\n                        const\r\n                            cancel = onCancel instanceof Function ? onCancel: () => {},\r\n                            fin = onFinally instanceof Function ? onFinally: () => {}\r\n                        ;\r\n                        cancel( dataBack );\r\n                        fin( dataBack );\r\n                    }}\r\n                >\r\n                    {icons && (\r\n                        <i className=\"fas fa-times\"></i>\r\n                    )}\r\n                    <span>\r\n                        {textCancel}\r\n                    </span>\r\n                </button>\r\n            </aside>\r\n\r\n        </section>\r\n\r\n    )\r\n}\r\n\r\nexport default Confirm;\r\n","import React,{useState,useEffect} from 'react';\r\nimport Confirm from './../Confirm/Confirm';\r\nimport './ControlItem.css';\r\nimport Icons from './../Icons/Icons';\r\nimport Notif from './../Notif/Notif';\r\n\r\nfunction ControlItem({\r\n    manualOpen,\r\n    open,\r\n    onClose,\r\n    onRemove,\r\n    onRname,\r\n    loadRname,\r\n    pic,\r\n    errorsRname,\r\n    onOpen,\r\n    itemType,\r\n    closer\r\n}) {\r\n\r\n    const [confirm,setConfirm] = useState(false);\r\n    const [inputRname,setInputRname] = useState(false);\r\n    const [rname,setRname] = useState(\"\");\r\n    const [firstControl] = useState( React.createRef() );\r\n    const [rnameRef] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( open && !confirm )\r\n            setTimeout(() => {\r\n                if( firstControl.current )\r\n                firstControl.current.focus()\r\n            } , 250);\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <ul\r\n            className={`ControlItem`}\r\n            onMouseEnter={() => onOpen()}\r\n            onMouseLeave={() => {\r\n                if( !manualOpen ) {\r\n                    onClose()\r\n                }\r\n            }}\r\n        >\r\n            <li\r\n                className={`${open && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n\r\n                <Icons\r\n                    tooltip={(\r\n                        <Notif\r\n                            type=\"info\"\r\n                            place=\"top\"\r\n                            tooltip=\"rname\"\r\n                            text={(\r\n                                <>\r\n                                    renomé l'\r\n                                    {itemType !== 'album' ? 'image': 'album'}\r\n                                </>\r\n                            )}\r\n                        />\r\n                    )}\r\n                    className=\"fas fa-pen\"\r\n                    onClick={() => {\r\n                        setInputRname(true);\r\n                        setTimeout(() => \r\n                            rnameRef.current.focus(), 120\r\n                        );\r\n                    }}\r\n                    classHandle={`${inputRname ? 'hide':''}`}\r\n                />\r\n                \r\n                <form\r\n                        className={`${inputRname ? '':'close'}`}\r\n                        onSubmit={e => {\r\n                            e.preventDefault();\r\n                            onRname( rname );\r\n                        }}\r\n                    >\r\n\r\n                        <input\r\n                            ref={rnameRef}\r\n                            className={`input-rname rname ${!inputRname ? 'hide':'open'}`}\r\n                            type=\"text\"\r\n                            name=\"rname\"\r\n                            onChange={e => setRname( e.target.value )}\r\n                            autoComplete=\"off\"\r\n                            placeholder={pic.get('name')}\r\n                            disabled={!!loadRname}\r\n                        />\r\n \r\n                        <Icons\r\n                            tooltip={(\r\n                                <Notif\r\n                                    type=\"info\"\r\n                                    place=\"top\"\r\n                                    tooltip=\"back\"\r\n                                    text=\"fermé\"\r\n                                />\r\n                            )}\r\n                            loader={loadRname}\r\n                            className=\"fas fa-times\"\r\n                            onClick={() => setInputRname(false)}\r\n                            classHandle={`rname-btn ${inputRname ? '':'hide'}`}\r\n                        />\r\n\r\n                        {\r\n                            errorsRname.map( error => (\r\n                                error\r\n                            )  )\r\n                        }\r\n\r\n                </form>\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname ? \"\":\"hide\"}`}\r\n            >\r\n                {\r\n\r\n                    confirm || (\r\n                        <>\r\n                            <Icons\r\n                                tooltip={(\r\n                                    <Notif\r\n                                        type=\"info\"\r\n                                        place=\"top\"\r\n                                        tooltip=\"remove\"\r\n                                        text={(\r\n                                            <>\r\n                                                supprimé l'\r\n                                                {itemType !== 'album' ? 'image': 'album'}\r\n                                            </>\r\n                                        )}\r\n                                    />\r\n                                )}\r\n                                className=\"fas fa-trash\"\r\n                                onClick={() => (\r\n                                    setConfirm(\r\n                                        <Confirm\r\n                                            onConfirm={onRemove}\r\n                                            onFinally={() => setConfirm( false )}\r\n                                            text={`êtes vous sur de vouloir supprimez l'${itemType} ${pic.get('name')}`}\r\n                                            textConfirm=\"oui\"\r\n                                            textCancel=\"non\"\r\n                                            className=\"confirm-remove confirm-remove-picture\"\r\n                                            icons\r\n                                            autoFocus\r\n                                    />)\r\n                                )}\r\n                            />\r\n                        </>       \r\n                    )\r\n                }\r\n            </li>\r\n\r\n            <li\r\n                className={`${open && !inputRname && closer && !confirm ? \"\":\"hide\"}`}\r\n            >\r\n                \r\n                \r\n                <Icons\r\n                    tooltip={(\r\n                        <Notif\r\n                            type=\"info\"\r\n                            place=\"top\"\r\n                            tooltip=\"close\"\r\n                            text=\"férmer le menu\"\r\n                        />\r\n                    )}\r\n                    className=\"fas fa-times\"\r\n                    onClick={() => onClose instanceof Function ? onClose(): null}\r\n                />\r\n            </li>\r\n        </ul>\r\n    ) ;\r\n}\r\n\r\nexport default ControlItem;","import React,{useState} from 'react';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport {Redirect} from 'react-router-dom';\r\nimport './ItemAlbum.css';\r\n\r\nconst\r\n    btnLinkRef = React.createRef()\r\n;\r\n\r\nfunction ItemAlbum({\r\n    item,\r\n    db\r\n}) {\r\n\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [name,setName] = useState( item.get('name') );\r\n    const [manualControl,setManualControl] = useState( false );\r\n    const [redirect,setRedirect] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [refItem] = useState(React.createRef());\r\n\r\n    return (\r\n        <>\r\n            {redirect}\r\n            { visible && (\r\n                <li\r\n                onMouseEnter={() => setControl(true)}\r\n                onMouseLeave={() => setControl(false)}\r\n                className={`AlbumItem ${visible ? '':'hide'}`}\r\n                ref={refItem}\r\n            >\r\n                <div className=\"number-item\">\r\n                    {item.get('size')} images\r\n                </div>\r\n                <button\r\n                    className=\"album-btn\"\r\n                    ref={btnLinkRef}\r\n                    onKeyDown={e => {\r\n                        if( /menu/i.test(e.key) )\r\n                            setControl( true );\r\n                            setManualControl( true );\r\n                    } }\r\n                    onClick={() => setRedirect( <Redirect to={`album/${item.id}`} /> )}\r\n                    onContextMenu={e => e.preventDefault()}\r\n                >\r\n                    <Link\r\n                        onPointerUp={e => {\r\n                            if(e.nativeEvent.which === 3 ) {\r\n\r\n                                setControl(true);\r\n                                setManualControl( true );\r\n                            }\r\n                        }}\r\n                        to={`album/${item.id}`}\r\n                    >\r\n                        {name}\r\n                    </Link>\r\n                </button>\r\n\r\n                <section>\r\n\r\n                    <aside>      \r\n                        <ControlItem\r\n                            itemType=\"album\"\r\n                            onRemove={() => {\r\n                                db.removeAlbum( item.id ).then( () => {\r\n                                    setVisible( false );\r\n                                    setControl( false );\r\n                                } )\r\n                            }}\r\n                            manualOpen={manualControl}\r\n                            onOpen={() => setControl( true )}\r\n                            onRname={rname => {\r\n                                setLoadRname( <Loader \r\n                                    width={12}\r\n                                    type=\"azure\"\r\n                                /> ) ;\r\n\r\n                                db.rnameAlbum( \r\n                                    item.id\r\n                                    ,rname\r\n                                ).then( () => {\r\n                                \r\n                                    // success\r\n                                    setErrors(\r\n                                        [...errors , <Notif\r\n                                            onClose={({remove}) => remove()} \r\n                                            key={Date.now()}\r\n                                            text=\"l'album à été renomé avec succés\"\r\n                                            type=\"success\"\r\n                                        />]\r\n                                    ) ;\r\n                                    setName( rname );\r\n                                } );\r\n                            }}\r\n                            loadRname={loadRname}\r\n                            onClose={() => {/* silence is <feature /> */}}\r\n                            pic={item}\r\n                            open={control}\r\n                            errorsRname={errors}\r\n                        />\r\n                        \r\n                    </aside>\r\n                </section>\r\n            </li>\r\n            ) }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemAlbum;","import React  from 'react';\r\nimport './ListAlbums.css';\r\nimport ItemAlbum from './ItemAlbum';\r\nimport Notif from '../Notif/Notif';\r\nimport './ListAlbums.css';\r\n\r\nfunction ListAlbums({albums,load,db}) {\r\n\r\n    return (\r\n        <ul className=\"ListAlbums list\">\r\n            {\r\n                load || (\r\n                    albums.length ?\r\n                    albums.map( item => (\r\n                        <ItemAlbum\r\n                            item={item}\r\n                            key={item.id}\r\n                            db={db}\r\n                        />\r\n                    )) : (\r\n                        <Notif\r\n                            type=\"infos\"\r\n                            text=\"vous n'avez aucun albums\"\r\n                        />\r\n                    )\r\n                    \r\n                )\r\n            }\r\n        </ul>\r\n    ) ;\r\n}\r\n\r\nexport default ListAlbums;","import React from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport User from './../../core/User/User';\r\nimport Icons from './../../core/Icons/Icons';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport ListAlbums from '../../core/ListAlbulms/ListAlbums';\r\nimport './Dash.css';\r\n\r\nexport default class Dash extends React.Component {\r\n\r\n    state = {\r\n\r\n        loader: {\r\n            u: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" /> ,\r\n            albums: <Loader width={64} type=\"timer\" full bg=\"rgba(0,0,0,.9)\" />\r\n        } ,\r\n        u: null,\r\n        albums: [],\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID') ;\r\n\r\n        document.title = 'Picsy | Dash';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n                    this.setState( state => ({\r\n                        loader: { u: false, albums: state.loader.albums }\r\n                        ,u: user \r\n                    } ) , () => {\r\n\r\n                        this.props.db.getAlbumsOf( user.id ).then( docs => {\r\n\r\n                            this.setState( state => ({\r\n                                loader : { u: state.loader.u, albums: false  },\r\n                                albums: docs\r\n                            }))\r\n                        } )\r\n\r\n                    }  ) ;\r\n                    \r\n                } else {\r\n                    this.setState( {\r\n                        redirect: <Redirect to=\"/\" />\r\n                    } ) ;\r\n                }\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loader,\r\n            redirect,\r\n            albums,\r\n            u\r\n        } = this.state ;\r\n\r\n        return(\r\n            <section\r\n                className=\"Dash\"\r\n            >\r\n                {redirect}\r\n\r\n                <User \r\n                    u={u}\r\n                    load={loader.u} \r\n                />\r\n\r\n                 \r\n                <ListAlbums\r\n                    db={this.props.db}\r\n                    albums={albums} \r\n                    load={loader.albums}\r\n                />\r\n                <aside className=\"add-album\">\r\n                    <Icons\r\n                        tooltip={(\r\n                            <Notif\r\n                                tooltip=\"add-album\"\r\n                                type=\"infos\"\r\n                                text=\"créé un album\"\r\n                                place=\"top\"\r\n                            />\r\n                        )}\r\n                        className=\"fas fa-folder-plus\"\r\n                        target=\"/add-album\"\r\n                    />\r\n                </aside>\r\n\r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport InputFile from './../InputFile/InputFile';\r\nimport Notif from './../Notif/Notif'; \r\nimport './FormAdd.css';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst defaultPicture = \"https://image0.flaticon.com/icons/png/128/189/189334.png\";\r\n\r\nfunction FormAdd({type,onSubmit,load,className,voidForm,onChange,imgsLength}){\r\n\r\n    const [picture,setPicture] = useState(\"\");\r\n    const [errors,setErrors] = useState([]);\r\n    const [name,setName] = useState(\"\");\r\n    const [refName] = useState( React.createRef() );\r\n\r\n    useEffect( () => {\r\n\r\n        if( voidForm ) {\r\n            refName.current.value = \"\";\r\n        }\r\n\r\n    } ) ;\r\n\r\n    return (\r\n        <>\r\n            <form\r\n            className={`FormAdd ${className}`}\r\n            onSubmit={e => {\r\n                e.preventDefault();\r\n\r\n                const data = {\r\n                    name: name\r\n                    ,picture: picture || defaultPicture\r\n                    ,refName: refName\r\n                    ,e: e\r\n                } ;\r\n\r\n                if( /album/i.test(type) )\r\n                    delete data.picture;\r\n\r\n                onSubmit( data );\r\n            }}\r\n        >\r\n\r\n            <div className=\"field-wrap-pseudo\">\r\n                <input\r\n                    ref={refName}\r\n                    type=\"text\"\r\n                    value={name}\r\n                    placeholder={`nom de l'${!/album/i.test(type) ? 'image':'album' }`}\r\n                    autoComplete=\"off\"\r\n                    onChange={({target}) => setName( target.value ) }\r\n                />\r\n                <label \r\n                    htmlFor=\"name\"\r\n                    className={`${!!name.length ? 'active':'o-hide'}`}\r\n                >\r\n                    nom d'{!/album/i.test(type) ? 'image':'album' }\r\n                </label>\r\n            </div>\r\n\r\n            {\r\n                !/album/i.test(type) ?\r\n                <InputFile\r\n                    className=\"hide\"\r\n                    name=\"picture\"\r\n                    label={\r\n                        <>\r\n                            <Notif\r\n                                tooltip=\"add-picture\"\r\n                                type=\"info\"\r\n                                text=\"ajouté une image\"\r\n                                place=\"top\"\r\n                            />\r\n                            <figure\r\n                                data-tip=\"ajouté une image\"\r\n                                data-for=\"add-picture\"\r\n                            >\r\n                                <button\r\n                                    type=\"button\"\r\n                                    onClick={e =>  e.target.parentNode.click()}\r\n                                >\r\n                                    <img\r\n                                        src={defaultPicture}\r\n                                        alt=\"ajouté\"\r\n                                        width={64}\r\n                                    />\r\n                                </button>\r\n                            </figure>\r\n                        </>\r\n                    }\r\n                    autoRead\r\n                    onChange={(file,blob,e) => {\r\n                        if(\r\n                            file.size <= 1e6 &&\r\n                            /image/i.test(file.type)\r\n                        ) {\r\n                            setPicture( blob );\r\n\r\n                            ( onChange => {\r\n                                setName( '' );\r\n                                onChange( file , blob , name , refName );\r\n                            } )( onChange instanceof Function ? onChange : () => {} ) ;\r\n\r\n                        } else {\r\n\r\n                            const mssg = file.size > 1e6 ? \r\n                                \"fichier trop volumineux\":\r\n                                \"ce fichier n'est pas une image valide\"\r\n                            ;\r\n                            \r\n                            setErrors( [...errors , \r\n                                <Notif\r\n                                    key={Date.now()} \r\n                                    type=\"error\"\r\n                                    text={mssg}\r\n                                    onClose={({remove}) => remove()}\r\n                                />\r\n                            ] ) ;\r\n                        }\r\n                    }}\r\n                />\r\n                : null\r\n            }\r\n\r\n            <button\r\n                type='submit'\r\n                disabled={!!load}\r\n            >\r\n                {\r\n                    load || (\r\n                        <span>\r\n                            ajouté l{!/album/i.test(type) ? 'e.s image.s ' + imgsLength : '\\'album'}\r\n                        </span>\r\n                    )\r\n                }\r\n                \r\n            </button>\r\n\r\n        </form>\r\n        {errors.map( error => error )}\r\n      </>\r\n    );\r\n}\r\n\r\nexport default FormAdd;","import React from 'react';\r\nimport './ImgFilter.css';\r\n\r\nconst buildFilter = filters => {\r\n\r\n    if( !(filters instanceof Array) ) return '';\r\n\r\n    let styles = '';\r\n\r\n    filters.forEach( filter => {\r\n\r\n        try {\r\n\r\n            let f = null;\r\n\r\n            if( typeof filter === 'string' ) {\r\n\r\n                f = JSON.parse( filter ) ;\r\n            } else {\r\n                f = filter;\r\n            }\r\n\r\n            if( !(f.key && f.val) ) return;\r\n            \r\n            if( /%/.test(f.val) && /hue/.test(f.key) ) {\r\n                f.val = f.val.replace('%' , 'deg' );\r\n            }\r\n\r\n            if( \r\n\r\n                f.key === 'hueRotate'\r\n                ) {\r\n                 f.key = 'hue-rotate';\r\n                 \r\n             }\r\n\r\n            styles += `${f.key}(${f.val}) `;\r\n            \r\n        } catch( SyntaxError ) {/* Silence is <feature /> */}\r\n        \r\n    } ) ;\r\n    return styles;\r\n} ;\r\n\r\nfunction ImgFilter( {\r\n    pics,\r\n    load,\r\n    figcaption,\r\n    width,\r\n    classFig\r\n} ) {\r\n\r\n    return (\r\n        <figure\r\n            className=\"ImgFilter\"\r\n        >\r\n            {load || (\r\n                <>\r\n                \r\n                    {figcaption && (\r\n                        <figcaption className={classFig}>\r\n                            {figcaption}\r\n                        </figcaption>\r\n                    )}\r\n                    <img\r\n                        src={pics.get('blob')}\r\n                        alt={pics.get('name')}\r\n                        style={{\r\n                            filter: buildFilter( pics.get('filters') )\r\n                        }}\r\n                        width={width || 300}\r\n                    />\r\n                </>\r\n            )}\r\n        </figure>\r\n    )\r\n}\r\n\r\nexport default ImgFilter;\r\n","import React,{useState} from 'react';\r\nimport ImgFilter from './../ImgFilter/ImgFilter';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ControlItem from './../ControlItem/ControlItem';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport './ItemImg.css';\r\n// import ReactToolTip from 'react-tooltip';\r\n\r\nfunction ItemImg({item,db,even}) {\r\n\r\n    const [control,setControl] = useState( false );\r\n    const [visible,setVisible] = useState( true );\r\n    const [loadRname,setLoadRname] = useState( false );\r\n    const [errors,setErrors] = useState( [] );\r\n    const [btnNav] = useState( React.createRef() );\r\n    const [manualControl,setManualControl] = useState( false );\r\n\r\n    return (\r\n        <>\r\n            { visible && (\r\n                <li\r\n                    onMouseEnter={() => btnNav.current.classList.remove('hide')}\r\n                    onMouseLeave={() => btnNav.current.classList.add('hide')}\r\n                    className={`ItemImg ${visible ? '':'hide'} ${even ? 'even':''}`}\r\n                >\r\n                    <Link\r\n                        className=\"link-filter\"\r\n                        to={`/filter/${item.id}`}\r\n                        onContextMenu={e => e.preventDefault()}\r\n                        onPointerDown={e => {\r\n                            if( e.nativeEvent.which === 3 ) {\r\n                                setControl( !control );\r\n                            }\r\n                        }}\r\n                        onKeyDown={e => {\r\n                            if( /menu/i.test(e.key) ) {\r\n\r\n                                setControl( !control );\r\n                            }\r\n                        }}\r\n                    >\r\n                        \r\n                        <Notif\r\n                            tooltip=\"nav\"\r\n                            type=\"info\"\r\n                            text={`${!control ? 'ouvrir':'fermer'} menu`}\r\n                            place=\"top\"\r\n                        />\r\n                        <ImgFilter\r\n                            pics={item}\r\n                            figcaption={\r\n                                <div\r\n                                    \r\n                                    data-for=\"nav\"\r\n                                    data-tip=\"menu\"\r\n                                    className=\"status-control\"\r\n                                >\r\n\r\n                                    <button\r\n                                        ref={btnNav}\r\n                                        className=\"hide\"\r\n\r\n                                        onClick={e => {\r\n                                            e.preventDefault();\r\n                                            \r\n                                            setManualControl( !control );\r\n                                            setControl(!control);\r\n                                        }}\r\n                                    >\r\n                                        <i className={!control ? \"fas fa-ellipsis-v\":\"fas fa-times\"}></i>\r\n                                    </button>\r\n                                </div>\r\n                            }\r\n                            classFig=\"fig-picsy\"\r\n                        />\r\n                    </Link>\r\n\r\n                    <ControlItem\r\n                        closer\r\n                        itemType=\"image\"\r\n                        onRemove={() => {\r\n                            db.removePicture( item.id ).then( () => {\r\n                                setVisible( false );   \r\n                                setControl( false );\r\n                            } )\r\n                        }}\r\n                        manualOpen={manualControl}\r\n                        onOpen={() => setControl( true )}\r\n                        onRname={rname => {\r\n                            setLoadRname( <Loader \r\n                                width={12}\r\n                                type=\"azure\"\r\n                            /> ) ;\r\n\r\n                            db.rnameImg(\r\n                                item.id,\r\n                                rname,\r\n                                item.get('album_id')\r\n                            ).then( resp => {\r\n\r\n                                setLoadRname( false );\r\n\r\n                                if( resp.success ) {\r\n\r\n                                    // success\r\n                                    setErrors(\r\n                                        [...errors , <Notif\r\n                                            onClose={({remove}) => remove()} \r\n                                            key={Date.now()}\r\n                                            text=\"image à été renomé avec succés\"\r\n                                            type=\"success\"        \r\n                                        />]\r\n                                    ) ;\r\n\r\n                                } else {\r\n\r\n                                    if( resp.status === 401  ) {\r\n                                        // Bad Request\r\n                                        // this name already exists\r\n                                        // in this album\r\n                                        setErrors( [...errors ,<Notif\r\n                                            key={Date.now()} \r\n                                            type=\"error\"\r\n                                            onClose={({remove}) => remove()}\r\n                                            text={`l'image ${rname} exists déjà dans cet album`}\r\n                                        />] ) ;\r\n\r\n                                    } else { // 404\r\n                                        // here file not exists\r\n                                        console.warn('file rname 404 with : ' , item.id , item.get('name') );\r\n                                    }\r\n\r\n                                }\r\n\r\n                            } ) ;\r\n                        }}\r\n                        loadRname={loadRname}\r\n                        onClose={() => {\r\n                            setControl(false)\r\n                        }}\r\n                        pic={item}\r\n                        open={control}\r\n                        errorsRname={errors}\r\n                    />\r\n                </li>\r\n            )\r\n            }\r\n        </>\r\n    ) ;\r\n}\r\n\r\nexport default ItemImg;","import React from 'react';\r\nimport ItemImg from './../ItemImg/ItemImg';\r\nimport './ListImg.css';\r\n\r\nfunction ListImg( {\r\n    items,\r\n    load,\r\n    db\r\n} ) {\r\n\r\n    return (\r\n        <ul\r\n            className=\"ListImg\"\r\n        >\r\n            {\r\n                load || (\r\n                    items.map( (item,key) => (\r\n                        <ItemImg\r\n                            key={item.id}\r\n                            item={item}\r\n                            db={db}\r\n                            even={!!(key%2)}\r\n                        />\r\n                    ) )\r\n                )\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default ListImg;","import React from 'react';\r\nimport Icons from './../Icons/Icons';\r\nimport Notif from './../Notif/Notif';\r\nimport './Previews.css';\r\n\r\nfunction Previews({items,error,onRemove}) {\r\n\r\n    return (\r\n        <ul\r\n            className={`${error ? 'error':''} Previews`}\r\n        >\r\n            {\r\n                items.map( (item,key) => (\r\n                    <li\r\n                        key={key}\r\n                    >\r\n                        <figure>\r\n                            <img\r\n                                src={item.blob}\r\n                                alt=\"pré vue d'ajout\"\r\n                                width={128}\r\n                            />\r\n                            <figcaption>\r\n                                {item.name}\r\n                            </figcaption>\r\n\r\n                            <Icons\r\n                                tooltip={(\r\n                                    <Notif\r\n                                        type=\"info\"\r\n                                        tooltip={`close-preview-${key}`}\r\n                                        place=\"left\"\r\n                                        text=\"supprimé de l'ajout\"\r\n                                    />\r\n                                )}\r\n                                onClick={() => onRemove( item )}\r\n                                className=\"fas fa-times\"\r\n                            />\r\n\r\n                        </figure>\r\n                    </li>\r\n                ) )\r\n            }\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Previews;","import React,{useState} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport FormAdd from './../FormAdd/FormAdd';\r\nimport Loader from './../Loader/Loader';\r\nimport Notif from './../Notif/Notif';\r\nimport ListImg from './../ListImg/ListImg';\r\nimport Previews from './../Previews/Previews';\r\nimport './ShowAlbum.css';\r\n\r\nconst getPics = (db,id) => {\r\n\r\n    return new Promise( (resolve,reject) => {\r\n\r\n        db.getImgsOf( id )\r\n            .then( pics => {\r\n                resolve( pics );\r\n            } )\r\n            .catch( err => reject(err) )\r\n        ;\r\n    } ) ;\r\n}\r\n\r\nfunction ShowAlbum({db,loaderAlbum,album}) {\r\n    \r\n    const {id} = useParams();\r\n    const [loaderAddPicture,setLoaderAddPicture] = useState( false );\r\n    const [errors,setErrors] = useState([]);\r\n    const [successFor,setSuccessFor] = useState([]);\r\n    const [voidForm,setVoidForm] = useState( false );\r\n    const [sendPreview,setSendPreview] = useState( false );\r\n    const [previews,setPreviews] = useState( [] );\r\n    const [pictures,setPictures] = useState({\r\n        pics:false\r\n        ,loader:<Loader\r\n            width={64}\r\n            bg=\"rgba(0,0,0,.9)\"\r\n            type=\"timer\"\r\n        />\r\n    });\r\n\r\n    return (\r\n        <section className=\"ShowAlbum\">\r\n            {\r\n                !loaderAlbum && (\r\n                    <h2>\r\n                        {album.get('name')}\r\n                    </h2>\r\n                )\r\n            }\r\n            <ListImg\r\n                items={\r\n                    !pictures.pics ?\r\n                    getPics(db,id).then( pics => {\r\n                        setPictures( {\r\n                            pics:pics\r\n                            ,loader:false\r\n                        } )\r\n                    } ) : pictures.pics\r\n                }\r\n                load={pictures.loader}\r\n                db={db}\r\n            />\r\n\r\n            <FormAdd\r\n                type=\"picture\"\r\n                voidForm={voidForm}\r\n                onSubmit={({name,picture}) => {\r\n                    \r\n                    if(\r\n                        previews.length\r\n                    ) {\r\n                        setLoaderAddPicture( <Loader type=\"btn\" width={16} />);\r\n\r\n                        let tempPreviews = previews ;\r\n                        let finish = 0;\r\n                        let total = tempPreviews.length;\r\n\r\n                        previews.forEach( preview => {\r\n\r\n                            if(!(\r\n                                preview.name.length <= 42 &&\r\n                                preview.name.length >= 2\r\n                            )) {\r\n                                return setErrors( [ ...errors , <Notif\r\n                                    key={Date.now()}\r\n                                    text=\"taille de nom invalide\"\r\n                                    type=\"error\"\r\n                                    onClose={({remove}) => remove()}\r\n                                /> ] ) ;\r\n                            } \r\n\r\n                            // else add picture\r\n                            db.addPicture(id,preview.name, preview.blob)\r\n                            .then( response => {\r\n\r\n                                finish++;\r\n                                setLoaderAddPicture(false);\r\n\r\n                                if( response.success ) {\r\n                                    \r\n                                    tempPreviews = tempPreviews.filter( p => p.name !== response.name ) ;\r\n\r\n                                    if( finish >= total ) {\r\n\r\n                                        setSuccessFor( \r\n                                            Array.from( \r\n                                                Array( total - tempPreviews.length ).keys()\r\n                                            ).map( key => previews[key].name )\r\n                                        ) ;\r\n\r\n                                        setPreviews( tempPreviews );\r\n                                        setSendPreview( true );\r\n\r\n                                        setTimeout(() => {\r\n                                            setSendPreview( false );\r\n                                            setPreviews( [] );\r\n                                        }, 5e3);\r\n                                            \r\n                                        setVoidForm( true );\r\n                                        setTimeout(() => {\r\n                                            setVoidForm( false );\r\n                                        }, 100);\r\n                                        setPictures({\r\n                                            pics:null\r\n                                            ,loader:<Loader\r\n                                                width={64}\r\n                                                bg=\"rgba(0,0,0,.9)\"\r\n                                                type=\"timer\"\r\n                                            />\r\n                                        }) ;\r\n                                    }\r\n                                } else {\r\n                                    setErrors( [ ...errors , <Notif\r\n                                        key={Date.now()}\r\n                                        text=\"nom déjà existant\"\r\n                                        type=\"error\"\r\n                                        onClose={({remove}) => remove()}\r\n                                    /> ] ) ;\r\n                                }\r\n\r\n                            } ) ;\r\n\r\n                        } ) ;\r\n                    }\r\n                    else {\r\n\r\n                        const mssg = \"vous n'avez pas envoyé de fichier\"\r\n\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text={mssg}\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                }}\r\n                onChange={(file,blob,name) => {\r\n                    \r\n                    if( name.length < 2 || name.length >= 42 ) {\r\n\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"taille de nom invalide\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n\r\n                    } else if( previews.find( preview => preview.name === name ) ) {\r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"ce nom d'image éxiste déjà\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                    else if( previews.length >= 3 ) {\r\n                        \r\n                        setErrors( [ ...errors , <Notif\r\n                            key={Date.now()}\r\n                            text=\"Vous ne pouvez pas ajouté plus d'images en 1 seule fois .\"\r\n                            type=\"error\"\r\n                            onClose={({remove}) => remove()}\r\n                        /> ] ) ;\r\n                    }\r\n                    else {\r\n                        \r\n                        setPreviews( [...previews,{\r\n                            blob: blob,\r\n                            name: name\r\n                        }] ) ;\r\n                    }\r\n                } }\r\n                load={loaderAddPicture}\r\n                imgsLength={previews.length}\r\n            />\r\n\r\n            {errors.map( error => error )}\r\n\r\n            {\r\n                (\r\n                    previews.length ? (\r\n                        <Previews\r\n                            onRemove={preview => (\r\n                                setPreviews( previews.filter( p => p.name !== preview.name ) )\r\n                            )}\r\n                            items={previews}\r\n                            error={!!sendPreview}\r\n                        />\r\n                    ) : null\r\n                )\r\n            }\r\n\r\n            {\r\n                (\r\n                    successFor.length ? (\r\n                        <ul>\r\n                            {\r\n                                successFor.map( (name,key) => (\r\n                                    <li key={key}>\r\n                                        <Notif\r\n                                            type=\"success\"\r\n                                            onClose={({remove,hide}) => !remove() ? hide(): null}\r\n                                            text={`L'image ${name} à été ajouté avec succés`}\r\n                                        />\r\n                                    </li>\r\n                                ) )\r\n                            }\r\n                        </ul>\r\n                    ) : null\r\n                )\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default ShowAlbum;","import React from 'react';\r\nimport FormAdd from './../../core/FormAdd/FormAdd';\r\nimport {Redirect} from 'react-router-dom';\r\nimport docCookies from 'doc-cookies';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport ShowAlbum from '../../core/ShowAlbum/ShowAlbum';\r\n\r\nexport default class AlbumRoute extends React.Component {\r\n\r\n    state = {\r\n        loader: <Loader width={16} type=\"btn\" />\r\n        ,redirect: false\r\n        ,loadUser: <Loader full width={48} type=\"time\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderAlbum: <Loader full width={48} type=\"az\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,album: null\r\n        ,errors: []\r\n    } ;\r\n\r\n    static add() {\r\n\r\n        return \"add\";\r\n    }\r\n\r\n    constructor(props) {\r\n\r\n        super( props );\r\n\r\n        document.title = 'Picsy | Album' ;\r\n        this.onSubmit = this.onSubmit.bind( this );\r\n    }\r\n\r\n    componentDidMount() {\r\n        \r\n        if( this.props.action !== AlbumRoute.add() ) {\r\n            \r\n            this.props.db.albums.doc( document.location.hash.split('/').pop() )\r\n            .get()\r\n            .then( album => {\r\n                this.setState( {\r\n                    album: album\r\n                    ,loaderAlbum: false\r\n                } ) ;\r\n            } ) ;\r\n        }\r\n\r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID');\r\n\r\n        const notGetUser = {\r\n            loader: false,\r\n            redirect: <Redirect to=\"/\" /> \r\n        } ;\r\n\r\n        this.props.db.isLogged( this.userID )\r\n            .then( response => {\r\n\r\n                if( response.success ) {\r\n                    this.setState( {\r\n                        loader: false,\r\n                        user: response.user\r\n                        ,loadUser: false\r\n                    } );\r\n                } else {\r\n                    this.setState( notGetUser ) ;\r\n                }\r\n\r\n            } )\r\n            .catch( () => (\r\n                this.setState( notGetUser )\r\n            ) )\r\n        ;\r\n    }\r\n\r\n    onSubmit({name,refName}) {\r\n\r\n        const {user} = this.state;\r\n\r\n        this.setState( {\r\n            loader: <Loader width={16} type=\"btn\" />\r\n        } )\r\n\r\n        if( name.length >= 2 && name.length <= 42 ) {\r\n\r\n            if( refName.current instanceof Node ) {\r\n\r\n                refName.current.value = '';\r\n                refName.current.focus() ;\r\n            }\r\n\r\n            this.props.db.addAlbum(\r\n                name , user.id\r\n            ).then( data => {\r\n\r\n                if( data.success )\r\n                    this.setState( {\r\n                        loader: false,\r\n                        formHide: true,\r\n                        errors: [],\r\n                        createWithName: name\r\n                    } ) ;\r\n                else\r\n                    this.setState( state => ({\r\n                        loader: false,\r\n                        errors: [...state.errors , (\r\n                            <Notif\r\n                                key={Date.now()}\r\n                                type=\"error\"\r\n                                onClose={({remove}) => remove()}\r\n                                text={`l'album ${name} existe déjà`}\r\n                            />\r\n                        )]\r\n                    } )) ;\r\n            } ) ;\r\n        }\r\n        else\r\n            this.setState( state => ({\r\n                errors: [...state.errors , (\r\n                    <Notif\r\n                        key={Date.now()}\r\n                        type=\"error\"\r\n                        text=\"taille de nom invalide\"\r\n                        onClose={({remove}) => remove()}\r\n                    />\r\n                )] ,\r\n                loader: false\r\n            }));\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            {action} = this.props\r\n            ,{\r\n                user,\r\n                loader,\r\n                loadUser,\r\n                errors,\r\n                formHide,\r\n                createWithName,\r\n                loaderAlbum,\r\n                album\r\n            } = this.state\r\n        ;\r\n\r\n        return(\r\n            <>\r\n                <User u={user} load={loadUser} />\r\n                {\r\n                    action === AlbumRoute.add() ? (\r\n                        <>\r\n                            <FormAdd\r\n                                load={loader}\r\n                                className={`${formHide ? 'hide':''}`}\r\n                                type=\"album\"\r\n                                onSubmit={this.onSubmit}\r\n                            />\r\n                            \r\n                            {errors}\r\n                            {\r\n                                formHide && (\r\n                                    <Notif\r\n                                        type=\"success\"\r\n                                        text={<span>\r\n                                            l'album\r\n                                            &nbsp;<Link\r\n                                                to={`/dash`}\r\n                                            >\r\n                                            {createWithName}\r\n                                            </Link> à été créé avec succés\r\n                                        </span>}\r\n                                    />\r\n                                )\r\n                            }\r\n                            <Notif \r\n                                type=\"back\"\r\n                                text={<>\r\n                                    <Link to=\"/dash\">\r\n                                        Tableau de bord\r\n                                    </Link>\r\n                                </>}\r\n                            />\r\n                        </>\r\n                    )  : (\r\n                        // show album\r\n                        <>\r\n                            <ShowAlbum\r\n                                db={this.props.db}\r\n                                loaderAlbum={loaderAlbum}\r\n                                album={album}\r\n                            />\r\n                        </>\r\n                    )\r\n                    \r\n                }\r\n            </>\r\n        )\r\n    }\r\n};\r\n","import React from 'react';\r\nimport './FormFilter.css'\r\n\r\nexport default class FormFilter extends React.Component {\r\n\r\n    render() {\r\n\r\n        const {\r\n            blurValue\r\n            ,onChange\r\n            ,load\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotate\r\n        } = this.props\r\n\r\n        return (\r\n            <>\r\n                {\r\n                    load || (\r\n                        <form\r\n                            className=\"FormFilter\"\r\n                        >\r\n                            <div>\r\n                                <label>flootage <i>{blurValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={blurValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'blur'\r\n                                            ,unity: 'px'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>contraste <i>{(contrastValue || contrastValue === 0) ? contrastValue : 100}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"1000\"\r\n                                    defaultValue={(contrastValue || contrastValue === 0) ? contrastValue : 100}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'contrast'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value/2)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>grisage <i>{grayscaleValue || 0}%</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"0\"\r\n                                    max=\"100\"\r\n                                    defaultValue={grayscaleValue || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'grayscale'\r\n                                            ,unity: '%'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <label>rotation teinte <i>{hueRotate || 0}°</i></label>\r\n                                <input\r\n                                    type=\"range\"\r\n                                    min=\"-8000\"\r\n                                    max=\"8000\"\r\n                                    defaultValue={hueRotate || 0}\r\n                                    onChange={e => {\r\n                                        e.preventDefault();\r\n                                        onChange( {\r\n                                            key: 'hueRotate'\r\n                                            ,unity: 'deg'\r\n                                            ,val: parseInt(e.target.value)\r\n                                        } );\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    )\r\n                }\r\n            </>\r\n        ) ;\r\n    }\r\n};\r\n","import React from 'react';\r\nimport ImgFilter from './../../core/ImgFilter/ImgFilter';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport User from './../../core/User/User';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport FormFilter from './../../core/FormFilter/FormFilter';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport docCookies from 'doc-cookies';\r\nimport './PictureRoute.css';\r\n\r\nexport default class PictureRoute extends React.Component {\r\n    \r\n    state = {\r\n        loaderImg: <Loader width={64} type=\"earth\" bg=\"rgba(0,0,0,.9)\" />\r\n        ,loaderUser: <Loader width={64} type=\"timer\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n        ,user: null\r\n        ,picture: null\r\n        ,redirect: null\r\n        ,blurValue: null\r\n        ,contrastValue: null\r\n        ,grayscaleValue: null\r\n        ,hueRotateValue: null\r\n        ,timeUpdate: 20\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n\r\n        this.pictureID = document.location.hash.split('/').pop() ;\r\n        this.updatePicture = this.updatePicture.bind( this );\r\n        this.timeUpdateUp = this.timeUpdateUp.bind( this );\r\n        document.title = 'Picsy | filtre';\r\n    }\r\n    \r\n    /**\r\n     * @method componentWillUnmount [cyclelife]\r\n     * @description free intervals alloc\r\n     */\r\n    componentWillUnmount() {\r\n        clearInterval( this.updateID ) ;\r\n        clearInterval( this.timeUpdateID ) ;\r\n    }\r\n\r\n    componentDidMount() {\r\n        // check logged\r\n        // get img with id in url\r\n        // open intervals\r\n        \r\n        this.userID = localStorage.getItem('useID') || docCookies.getItem('useID') ;\r\n\r\n        if( !this.userID ) {\r\n            this.setState( {\r\n                loaderImg: null\r\n                ,loaderUser: null\r\n                ,redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        } else {\r\n            \r\n            this.props.db.getUser( this.userID )\r\n            .then( user => {\r\n\r\n                if( user ) {\r\n\r\n                    this.setState( {\r\n                        u: user \r\n                        ,loaderUser: false\r\n                    } , () => {\r\n                        \r\n                        this.props.db.pictures.doc( this.pictureID )\r\n                        .get()\r\n                        .then( picture => {\r\n                            this.setState({\r\n                                picture: picture\r\n                                ,loaderImg: false\r\n                                ,loaderForm: false\r\n                                ,blurValue: parseInt((picture.get('filters').find( f => f.key === 'blur' ) || {}).val)*2\r\n                                ,contrastValue: parseInt((picture.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                                ,grayscaleValue: parseInt((picture.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                                ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                            } , () => {\r\n                                // go interval update img after get image\r\n                                this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                this.timeUpdateID = setInterval( this.timeUpdateUp , 1e3 );\r\n                            } );\r\n                            \r\n                        } )\r\n                        .catch( err => {\r\n                            this.setState( {\r\n                                loaderImg: null\r\n                                ,loaderUser: null\r\n                                ,redirect: <Redirect to=\"/\" />\r\n                            } ) ;   \r\n                        } );\r\n\r\n                    }  ) ;\r\n                    \r\n                } else {\r\n                    this.setState( {\r\n                        loaderImg: null\r\n                        ,loaderUser: null\r\n                        ,redirect: <Redirect to=\"/\" />\r\n                    } ) ;\r\n                }\r\n            } ) ;\r\n            \r\n        }\r\n    }\r\n\r\n    \r\n    timeUpdateUp() {\r\n        this.setState( state => ({ timeUpdate: state.timeUpdate-1 >= 0 ? state.timeUpdate-1: 0 }) );\r\n    }\r\n \r\n    updatePicture() {\r\n\r\n        const {picture} = this.state;\r\n\r\n        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n        try {\r\n\r\n            currentFilters = JSON.parse( currentFilters ) ;\r\n\r\n        } catch( SyntaxError ) {\r\n\r\n            currentFilters = [] ;\r\n        }\r\n        finally {\r\n            if( !currentFilters )\r\n                currentFilters = [];\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.setState( {\r\n                loaderForm: <Loader width={48} type=\"az\" bg=\"rgba(30,30,42,.95)\" />\r\n            } ) ;\r\n        }, 420);\r\n\r\n        this.props.db.pictureSetFilters(\r\n            picture.id , currentFilters\r\n        ).then( () => {\r\n\r\n\r\n            this.props.db.pictures.doc( this.pictureID )\r\n            .get()\r\n            .then( pic => {\r\n                this.setState( {\r\n                    picture: pic\r\n                    ,loaderForm: false\r\n                    ,blurValue: parseInt((pic.get('filters').find( f => f.key === 'blur' ) || {}).val) * 2\r\n                    ,contrastValue: parseInt((pic.get('filters').find( f => f.key === 'contrast' ) || {}).val)\r\n                    ,grayscaleValue: parseInt((pic.get('filters').find( f => f.key === 'grayscale' ) || {}).val)\r\n                    ,hueRotateValue: parseInt((picture.get('filters').find( f => f.key === 'hue-rotate' ) || {}).val)\r\n                    ,timeUpdate: 20\r\n                } )\r\n            } )\r\n        } )\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            loaderImg\r\n            ,loaderUser\r\n            ,loaderForm\r\n            ,u\r\n            ,picture\r\n            ,blurValue\r\n            ,contrastValue\r\n            ,grayscaleValue\r\n            ,hueRotateValue\r\n            ,timeUpdate\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"PictureRoute\"\r\n            >\r\n\r\n                <header>\r\n                    <User\r\n                        u={u}\r\n                        load={loaderUser}\r\n                    />\r\n                </header>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n                <aside>\r\n                    <ImgFilter\r\n                        load={loaderImg}\r\n                        pics={picture}\r\n                        classFig=\"fig-filter\"\r\n                        figcaption={\r\n                            <>\r\n                                {\r\n                                    !loaderImg && (\r\n                                        <>\r\n                                            <b>{picture.get('name')}</b> \r\n                                            - <i>{new Date(picture.get('createAt')).toLocaleDateString()}</i>\r\n                                        </>\r\n                                    )\r\n                                }\r\n                            </>\r\n                        }\r\n                        width={512} // default width\r\n                    />\r\n                </aside>\r\n\r\n                <p className=\"update-pic\">\r\n                    {\r\n                        !loaderForm && (\r\n                            <>\r\n                                <span>\r\n                                    Recalcul de l'image dans {timeUpdate} \r\n                                </span>\r\n                                <br />\r\n                                <button\r\n                                    onClick={() => {\r\n                                        clearInterval( this.updateID );\r\n                                        this.updatePicture();\r\n                                        this.updateID = setInterval( this.updatePicture , 2e4 );\r\n                                        this.setState( { timeUpdate: 20 } );\r\n                                    }}\r\n                                >\r\n                                    maintenant\r\n                                </button>\r\n                            </>\r\n                        )\r\n                    }\r\n                </p>\r\n\r\n                <FormFilter\r\n                    load={loaderForm}\r\n                    contrastValue={contrastValue}\r\n                    blurValue={blurValue}\r\n                    grayscaleValue={grayscaleValue}\r\n                    hueRotate={hueRotateValue}\r\n                    onChange={({key,val,unity}) => {\r\n\r\n                        let currentFilters = localStorage.getItem( `filters-${picture.id}` ) ;\r\n\r\n                        try {\r\n\r\n                            currentFilters = JSON.parse( currentFilters ) ;\r\n                        } catch( SyntaxError ) {\r\n\r\n                            currentFilters = [] ;\r\n                        }\r\n                        finally {\r\n                            if( !currentFilters )\r\n                                currentFilters = [];\r\n                        }\r\n\r\n                        let found = false;\r\n                        currentFilters = currentFilters.map( filter => {\r\n\r\n                            if(filter.key === key) {\r\n                                filter.val = val+unity;\r\n                                found = true;\r\n                            }\r\n                            return filter;\r\n                        } ) ;\r\n\r\n                        if( !found )\r\n                            currentFilters.push( {\r\n                                key: key\r\n                                ,val: val+unity\r\n                            } )\r\n\r\n                        localStorage.setItem( \r\n                            `filters-${picture.id}` ,\r\n                            JSON.stringify( currentFilters )\r\n                        ) ;\r\n\r\n                        const delta = {};\r\n\r\n                        if( key === 'blur' )\r\n                            val *= 2;\r\n\r\n                        delta[ key+'Value' ] = parseInt( val );\r\n\r\n                        this.setState( delta );\r\n                    }}\r\n                />\r\n            \r\n            </section>\r\n        )\r\n    }\r\n};\r\n","import React,{useState,useEffect} from 'react';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport docCookies from 'doc-cookies'; \r\nimport {Redirect} from 'react-router-dom';\r\nimport './AccountItem.css';\r\n\r\nfunction AccountItem({id,db}){\r\n\r\n    const [loader,setLoader] = useState( <Loader type=\"earth\" width={32} bg=\"rgba(0,0,0,.9)\" /> );\r\n    const [user,setUser] = useState( null ) ;\r\n    const [redirect,setRedirect] = useState( null ) ;\r\n    const [showDetails,setShowDetails] = useState( false );\r\n    const [albums,setAlbums] = useState( false );\r\n    const [pictures,setPictures] = useState( [] ) ;\r\n    const [loaderAlbum,setLoaderAlbum] = useState( <Loader type=\"earth\" width={32} bg=\"rgba(0,0,0,.9)\" /> ) ;\r\n\r\n    useEffect( () => {\r\n\r\n        if( !user ) {\r\n\r\n            db.users.doc( id )\r\n                .get()\r\n                .then( u => {\r\n                    setUser( u ) ;\r\n                    setLoader( false ) ;\r\n\r\n                    db.getAlbumsOf( u.id )\r\n                        .then( albums => {\r\n                            setAlbums( albums );\r\n                            setLoaderAlbum( false );\r\n    \r\n                            albums.forEach(album => {\r\n\r\n                                db.getPictureOf( album.id )\r\n                                .then( pics => {\r\n                                    setPictures( [...pictures, ...pics] ) ;\r\n                                } ) ;\r\n                            });\r\n\r\n                        } )\r\n\r\n                } )\r\n                .catch( err => {\r\n\r\n                    console.error( err );\r\n                } )\r\n        }\r\n    } )\r\n\r\n    return (\r\n        <li\r\n            className=\"AccountItem\"\r\n        >\r\n            {redirect}\r\n            {\r\n                loader || (\r\n                    <section\r\n                        id={`${user.id}`}\r\n                        onMouseEnter={() => setShowDetails( true )}\r\n                        onMouseLeave={() => setShowDetails( false )}\r\n                    >\r\n                        <button\r\n                            onClick={() => {\r\n                                docCookies.setItem('useID' , user.id ) ;\r\n                                localStorage.setItem('useID' , user.id ) ;\r\n                                setRedirect( <Redirect to=\"/dash\" />) ;\r\n                            }}\r\n                        >\r\n                            <figure>\r\n                                <figcaption>\r\n                                    {user.get('pseudo')}\r\n                                </figcaption>\r\n\r\n                                <img\r\n                                    src={user.get('avatar')}\r\n                                    alt=\"avatar\"\r\n                                    width=\"64\"\r\n                                />\r\n\r\n                            </figure>\r\n\r\n                            <aside\r\n                                className={`${showDetails ? '': 'o-hide'}`}\r\n                            >\r\n                                                            \r\n                                {\r\n                                    loaderAlbum || (\r\n                                        <>\r\n                                            <ul>\r\n                                                <li>\r\n                                                    {albums.length} album{albums.length > 1 ? 's':''}\r\n                                                </li>\r\n                                                \r\n                                                <li>\r\n                                                    {pictures.length} image{pictures.length > 1 ? 's':''}\r\n                                                </li>\r\n                                            </ul>\r\n                                        </>\r\n                                    )\r\n                                }\r\n\r\n                            </aside>\r\n\r\n                        </button>\r\n\r\n                    </section>\r\n                )\r\n            }\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default AccountItem;","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport AccountItem from './AccountItem';\r\nimport {HashLink as Link} from 'react-router-hash-link';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport './AccountList.css';\r\n\r\nexport default class AccountList extends React.Component {\r\n\r\n    state = {\r\n        redirect: false\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props ) ;\r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n\r\n            this.userID = JSON.parse( this.userID )\r\n        } catch(SyntaxError) {\r\n            this.userID = [];\r\n        }\r\n        if( !this.userID )\r\n            this.userID = [];\r\n        \r\n        document.title = 'Picsy | comptes';\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if( !this.userID.length ) {\r\n            this.setState( {\r\n                redirect: <Redirect to=\"/\" /> \r\n            } ) ;\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const \r\n            { redirect } = this.state\r\n            ,{db} = this.props\r\n        ;\r\n\r\n        return (\r\n            <section\r\n                className=\"AccountList\"\r\n            >\r\n                {redirect}\r\n\r\n                <ul>\r\n                    {\r\n                        this.userID.map( id => (\r\n                            <AccountItem key={id} db={db} id={id} />\r\n                        ) )\r\n                    }\r\n                </ul>\r\n\r\n                <Notif\r\n                    type=\"back\"\r\n                    text={(\r\n                        <Link to=\"/dash\">\r\n                            Tableau de bord\r\n                        </Link>\r\n                    )}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n    \r\n};\r\n","import React from 'react';\r\nimport docCookies from 'doc-cookies';\r\nimport {Redirect} from 'react-router-dom';\r\nimport Notif from './../../core/Notif/Notif';\r\nimport Loader from './../../core/Loader/Loader';\r\nimport FormUser from './../../core/FormUser/FormUser';\r\nimport './AddAccount.css';\r\n\r\nexport default class AddAccount extends React.Component {\r\n\r\n    state = {\r\n        pseudo: \"\"\r\n        ,fileName: \"\"\r\n        ,avatar: AddAccount.defaultAvatar\r\n        ,errors: []\r\n        ,loaderSubmit: null\r\n    } ;\r\n\r\n    constructor( props ) {\r\n\r\n        super( props );\r\n        \r\n        this.userID = localStorage.getItem('userID') || docCookies.getItem('userID');\r\n\r\n        try {\r\n            this.userID = JSON.parse( this.userID ) ;\r\n        } catch( SyntaxError ) {\r\n            this.userID = [];\r\n        }\r\n    }\r\n    \r\n    static defaultAvatar = 'https://image.flaticon.com/icons/png/128/149/149071.png';\r\n\r\n    render() {\r\n\r\n        const {\r\n            avatar\r\n            ,errors\r\n            ,fileName\r\n            ,loaderSubmit\r\n            ,redirect\r\n        } = this.state;\r\n\r\n        return(\r\n            <section\r\n                className=\"AddAccount\"\r\n            >\r\n                {redirect}\r\n\r\n                <h1>\r\n                    Ajouté\r\n                    <span className=\"one-word\">&nbsp;un&nbsp;</span>\r\n                    <span className=\"user-word\">\r\n                        utlisateur\r\n                    </span>\r\n                    &nbsp;<span className=\"hide account-word\">\r\n                        compte\r\n                    </span>\r\n                </h1>\r\n                <FormUser\r\n                    onSubmit={e => {\r\n\r\n                        e.preventDefault();\r\n\r\n                        const {pseudo} = this.state;\r\n                \r\n                        if(\r\n                            !(pseudo.length >= 2 &&\r\n                            pseudo.length <=40)\r\n                        ) {\r\n                            this.setState(state => ( {\r\n                                errors: [ ...state.errors, <Notif\r\n                                    key={Date.now()} \r\n                                    text=\"pseudo taille invalide\"\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) ) ;\r\n                        } else{\r\n                \r\n                            const {avatar} = this.state;\r\n                \r\n                            this.setState( {\r\n                                loaderSubmit: <Loader width={16} type=\"btn\" />\r\n                            } , () => {\r\n                \r\n                                this.props.db.users.add( {\r\n                                    pseudo: pseudo\r\n                                    ,avatar: avatar\r\n                                } ).then( data => { \r\n\r\n                                    if( !this.userID )\r\n                                        this.userID = [];\r\n                \r\n                                    this.userID.push(data.id);\r\n\r\n                                    localStorage.setItem('userID' , JSON.stringify( this.userID ) );\r\n                                    docCookies.setItem('userID' , JSON.stringify( this.userID ) , new Date( ( Date.now() * 1.5 ) ) );\r\n                                    this.setState( {\r\n                                        redirect: <Redirect to=\"/account-list\" />\r\n                                    } ) ;\r\n                                } ).catch( err => console.error( err ) ) ;\r\n                            } ) ;\r\n                        }\r\n                    }}\r\n                    onChangePseudo={e => (\r\n                        this.setState( { pseudo: e.target.value.trim()} )\r\n                    )}\r\n                    avatar={avatar}\r\n                    fileName={fileName}\r\n                    errors={errors}\r\n                    valuePseudo={this.state.pseudo}\r\n                    loaderSubmit={loaderSubmit}\r\n                    onChangeAvatar={(file,blob,e) => {\r\n                        \r\n                        if( file.size <= 1e6 && /image/.test(file.type) ) {\r\n                            this.setState( {\r\n                                avatar: blob\r\n                                ,fileName: file.name\r\n                            } ) ;\r\n                            \r\n                        } else {\r\n                            \r\n                            const mssg = file.size >= 1e6 ? \"fichier trop volumineux\":\"ce fichier n'est pas une image .\";\r\n                            \r\n                            this.setState( state => ( {\r\n                                errors: [ ...state.errors , <Notif\r\n                                    key={Date.now()} \r\n                                    text={mssg}\r\n                                    type=\"error\"\r\n                                    onClose={ ({remove}) => remove()}\r\n                                /> ]\r\n                            }) )\r\n                        }\r\n                \r\n                    }}\r\n                />\r\n\r\n            </section>\r\n        ) ;\r\n    }\r\n};\r\n","import Logged from './../pages/Logged/Logged';\r\nimport Dash from './../pages/Dash/Dash';\r\nimport AlbumRoute from './../pages/AlbumRoute/AlbumRoute';\r\nimport PictureRoute from './../pages/PictureRoute/PictureRoute';\r\nimport AccountList from './../pages/AccountList/AccountList';\r\nimport AddAccount from './../pages/AddAccount/AddAccount';\r\n\r\nconst routes = [\r\n    {\r\n        id:0,\r\n        exact:true,\r\n        render: Logged,\r\n        props: {},\r\n        path: \"/\",\r\n        name: \"Home\"\r\n    },\r\n    {\r\n        id:1,\r\n        exact:false,\r\n        render: Dash,\r\n        props: {},\r\n        path: \"/dash\",\r\n        name: \"dashboard\"\r\n    },\r\n    {\r\n        id:2,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"add\"\r\n        },\r\n        path: \"/add-album\",\r\n        name: \"album add\"\r\n    },\r\n    {\r\n        id:3,\r\n        exact:false,\r\n        render: AlbumRoute,\r\n        props: {\r\n            action: \"show\"\r\n        },\r\n        path: \"/album/:id\",\r\n        name: \"show album\"\r\n    },\r\n    {\r\n        id:5,\r\n        exact:false,\r\n        render: PictureRoute,\r\n        props: {},\r\n        path: \"/filter/:id\",\r\n        name: \"filter album\"\r\n    },\r\n    {\r\n        id:6,\r\n        exact:false,\r\n        render: AddAccount,\r\n        props: {},\r\n        path: \"/add-account\",\r\n        name: \"filter album\"\r\n    }\r\n    ,{\r\n        id:6,\r\n        exact:false,\r\n        render: AccountList,\r\n        props: {},\r\n        path: \"/account-list\",\r\n        name: \"liste compte\"\r\n    }\r\n] ;\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport collections from './core/firebase/firebase';\r\nimport routes from './core/routes';\r\nimport {Switch,Route} from 'react-router-dom';\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <>\r\n      <Switch>\r\n        {\r\n          routes.map( route => (\r\n            <Route \r\n              key={route.id}\r\n              path={route.path}\r\n              exact={route.exact}\r\n              render={() => (\r\n                <route.render\r\n                  {...route.props}\r\n                  db={collections}\r\n                />\r\n              )}\r\n            />\r\n          ) )\r\n        }\r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  // SecurityError\n  // if ('serviceWorker' in navigator) {\n  //   navigator.serviceWorker.ready.then(registration => {\n  //     registration.unregister();\n  //   });\n  // }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {HashRouter as Router} from 'react-router-dom';\n\nReactDOM.render(\n    <Router>\n        <App />\n    </Router>\n    , document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}